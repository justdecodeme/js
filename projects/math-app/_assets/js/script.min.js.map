{"version":3,"sources":["script.js"],"names":["cv","document","getElementById","cvOuter","whichTransitionEvent","t","el","createElement","transitions","transition","OTransition","MozTransition","WebkitTransition","undefined","style","getElPosition","left","getBoundingClientRect","right","top","getMousePosition","e","pos","point","x","y","parseFloat","type","touches","clientX","toFixed","clientY","Object","size","obj","key","hasOwnProperty","initTools","toolsUniverse","toolsPlanets","querySelectorAll","toolsPlanetSets","toolsPlanetPens","toolsUniverseWidth","offsetWidth","minimizeToggleBtn","toolsPlanetSetsBtn","toolsPlanetPensBtn","currToolType","currSetType","forEach","toolsPlanet","toolsSatellites","id","toolsSatellitesWidth","querySelector","toolsPlanetWidth","radius","length","totalOffset","toolsSatellite","i","n","Math","round","cos","PI","sin","classList","contains","toolGroupType","dataset","rotation","toString","add","updateToolType1","target","oldToolBtn","remove","removeEventListener","initDraw","drawStart","toolType1","addEventListener","updateToolType2","strokeColor","value","updateToolsGroup","isPrimary","isSecondary","parent","substr","setAttribute","strokeOpacity","strokeWidth","src","getAttribute","toolType2","ispanelBtn","panelBtn","undo","redo","clear","initPanel","toggle","startPoint","strokeOpacityEl","strokeWidthEl","currId","index","undoStack","redoStack","draw","preventDefault","polyline","points","currPoint","push","Elements","Id","Action","drawEnd","ele","lastAction","pop","parentNode","removeChild","appendChild","shape","clearedEles","innerHTML","polylineTag","strokeColorPen","strokeWidthPen","strokeWidthMarker","initElDrag","startX","startY","endX","endY","dragParent","dropParent","oldDragParent","init","draggable","listener","dragAreas","dragArea","dragStart","closest","zIndex","dragParentzIndex","initCubes","getCoords","drag","dragEnd","offsetLeft","offsetBottom","height","offsetTop","bottom","getShortestDist","shortestDist","snapDist","highlight","snap","initSealsDrag","dragEloffsetX","dragEloffsetY","dragEnter","dragLeave","dragOver","drop","sealType","dataTransfer","getData","width","totalSealsAllowed","sealTypes","draggablesId","offsetX","offsetY","dropElHeight","detach","alert","setData","fetchSeals","sealPanelContent","values","close","panel","panelCloseBtn","draggableSeals","panelType","this","getElementsByClassName","panelSet","dropCoords","dragParentLeft","dragParentTop","snapType","cubeLimit","cubeOuter","detachType","transitionEvent","dropParentCubeCount","dragParentCubeCount","totalCubes","r","c","console","log","canBeAddedCubes","remainingCubes","transitionEndCallback","parseInt","detachCubes","warn","isSnapping","dropDotCoord_0","dropDotCoord_1","draggableCubes","dropCoord","0","1","j","dragCoord","x1","y1","d","sqrt","flag"],"mappings":"AAGA,IAAIA,GAAKC,SAASC,eAAe,MAC7BC,QAAUF,SAASC,eAAe,WAetC,SAASE,uBACP,IAAIC,EACFC,EAAKL,SAASM,cAAc,eAE1BC,GACFC,WAAc,gBACdC,YAAe,iBACfC,cAAiB,gBACjBC,iBAAoB,uBAGtB,IAAKP,KAAKG,EACR,QAAoBK,IAAhBP,EAAGQ,MAAMT,GACX,OAAOG,EAAYH,GAMzB,SAASU,cAAcT,GAErB,OADYU,KAAMV,EAAGW,wBAAwBD,KAAME,MAAOZ,EAAGW,wBAAwBE,KAKvF,SAASC,iBAAiBC,EAAGf,GAC3B,IAAIgB,EAAMP,cAAcT,GACpBiB,GAAUC,EAAG,EAAGC,EAAG,GAGvB,OAFAF,EAAMC,EAAIE,aAAwB,cAAVL,EAAEM,MAAkC,aAAVN,EAAEM,KAAuBN,EAAEO,QAAQ,GAAGC,QAAUR,EAAEQ,SAAWP,EAAIN,MAAMc,QAAQ,IACjIP,EAAME,EAAIC,aAAwB,cAAVL,EAAEM,MAAkC,aAAVN,EAAEM,KAAuBN,EAAEO,QAAQ,GAAGG,QAAUV,EAAEU,SAAWT,EAAIJ,OAAOY,QAAQ,IAC3HP,EAtCTS,OAAOC,KAAO,SAAUC,GACtB,IAAcC,EAAVF,EAAO,EACX,IAAKE,KAAOD,EACNA,EAAIE,eAAeD,IAAMF,IAE/B,OAAOA,GAyCT,IAAII,UAAY,WAEd,IAAIC,EAAgBrC,SAASC,eAAe,iBACxCqC,EAAeD,EAAcE,iBAAiB,iBAC9CC,EAAkBxC,SAASC,eAAe,mBAC1CwC,EAAkBzC,SAASC,eAAe,mBAC1CyC,EAAqBL,EAAcM,YAEnCC,EAAoB5C,SAASC,eAAe,qBAC5C4C,EAAqB7C,SAASC,eAAe,sBAC7C6C,EAAqB9C,SAASC,eAAe,sBAE7C8C,EAAeC,YAAc,KAGjCV,EAAaW,QAAQ,SAAUC,GAC7B,IAAIC,EAAkBD,EAAYX,iBAAiB,IAAMW,EAAYE,GAAK,6BACtEC,EAAuBH,EAAYI,cAAc,gCAAgCX,YACjFY,EAAmBL,EAAYP,YAI/Ba,GAHuBL,EAAgBM,QAG7Bf,EAAqBW,GAAwB,GAEvDK,GAAeH,EAAmBF,GAAwB,EAG9DF,EAAgBF,QAAQ,SAAUU,EAAgBC,GAEhD,IAAIC,EAAID,EAAI,EACRrC,EAAIuC,KAAKC,MAAMD,KAAKE,IATX,GAS2BH,GAAMC,KAAKG,GAAK,MAAQT,GAC5DhC,EAAIsC,KAAKC,MAAMD,KAAKI,IAVX,GAU2BL,GAAMC,KAAKG,GAAK,MAAQT,GAC5DzC,EAAO+C,KAAKC,MAAMxC,EAAImC,GACtBxC,EAAM4C,KAAKC,MAAMvC,EAAIkC,GAKzB,GAJAC,EAAe9C,MAAME,KAAOA,EAAO,KACnC4C,EAAe9C,MAAMK,IAAMA,EAAM,KAG7ByC,EAAeQ,UAAUC,SAAS,aAAc,CAClD,IAAIC,EAAgBV,EAAeW,QAAQD,cAEvCE,EAAW,GACXf,EAAS,IAFSN,EAAYX,iBAAiB,0BAA4B8B,EAAgB,gBAI/EpB,QAAQ,SAAUU,EAAgBC,GAChD,IAAIC,EAAID,EAAI,IAEZ,OAAQS,GACN,IAAK,UAAWR,EAAID,EAAI,EACtB,MACF,IAAK,UAAWC,EAAID,EAAI,IACtB,MACF,IAAK,SAAUC,EAAID,EAAI,IACrB,MACF,IAAK,UAAWC,EAAID,EAAI,IACtB,MACF,IAAK,QAASC,EAAID,EAAI,EAIxB,IAAIpC,EAAIsC,KAAKI,IAAKK,EAAWV,GAAMC,KAAKG,GAAK,MAAQT,EACjDjC,EAAIuC,KAAKE,IAAKO,EAAWV,GAAMC,KAAKG,GAAK,MAAQT,EACrDG,EAAe9C,MAAMK,KAAOM,EAAIkC,GAAac,WAAa,KAC1Db,EAAe9C,MAAME,MAAQQ,EAAImC,GAAac,WAAa,YAMnEhC,EAAgB2B,UAAUM,IAAI,UAC9B5B,EAAmBsB,UAAUM,IAAI,UACjC5B,EAAmBsB,UAAUM,IAAI,eAEjC,IAoEIC,EAAkB,SAASC,GAK7B,IAAIC,EAAa5E,SAASsD,cAAc,6CACpCsB,IACFA,EAAWT,UAAUU,OAAO,UAC5BzC,UAAUW,aAAe,KACzBhD,GAAG+E,oBAAoB,YAAaC,SAASC,WAAW,IAIvDJ,GAAcD,IACfA,EAAOR,UAAUM,IAAI,UACrBrC,UAAUW,aAAe4B,EAAOL,QAAQW,UACxClF,GAAGmF,iBAAiB,YAAaH,SAASC,WAAW,KAKrDG,EAAkB,SAASR,GAI3B,IAAIC,EAAa5E,SAASsD,cAAc,6CACpCsB,GAAcA,GAAcD,IAC9BC,EAAWT,UAAUU,OAAO,UAC5BF,EAAOR,UAAUM,IAAI,WAGvBM,SAASK,YAAcT,EAAOL,QAAQe,OAItCC,EAAmB,SAASjB,EAAeM,EAAQY,EAAWC,GAGhE,GAAGD,EAIEZ,EAAOR,UAAUC,SAAS,cAC3BO,EAAOR,UAAUU,OAAO,eAErB7E,SAASsD,cAAc,0BACxBtD,SAASsD,cAAc,yBAAyBa,UAAUU,OAAO,cAEnEF,EAAOR,UAAUM,IAAI,oBAElB,GAAGe,EAAa,CAGrB,IAAIC,EAASzF,SAASsD,cAAc,0BAA4Be,EAAgB,cAC5EO,EAAa5E,SAASsD,cAAc,0BAA4Be,EAAgB,uBAkBpF,OAfiC,UAA9BA,EAAcqB,OAAO,EAAG,KACzB1F,SAASsD,cAAc,oCAAoCa,UAAUU,OAAO,UAC5EY,EAAOE,aAAa,kBAAmB,UACvCtB,EAAgB,UAIfO,GACDA,EAAWT,UAAUU,OAAO,UAG9BF,EAAOR,UAAUM,IAAI,UACrBgB,EAAOtB,UAAUM,IAAI,UACrBgB,EAAOtB,UAAUU,OAAO,cAEjBR,GACL,IAAK,UAAWU,SAASa,cAAgBnE,WAAWkD,EAAOL,QAAQe,OACnE,MACA,IAAK,SAAUN,SAASc,YAAcpE,WAAWkD,EAAOL,QAAQe,OAChE,MACA,IAAK,SACH,IAAIS,EAAMnB,EAAOrB,cAAc,OAAOyC,aAAa,OACnDN,EAAOnC,cAAc,OAAOqC,aAAa,MAAOG,GAChDL,EAAOE,aAAa,aAAchB,EAAOL,QAAQe,OACjDN,SAASK,YAAcT,EAAOL,QAAQe,SAS9C,OAFAhD,EAAc6C,iBAAiB,QA5JZ,SAAS9D,GAG1B,IAAIuD,EAASvD,EAAEuD,OACXvB,EAAKuB,EAAOvB,GACZ6B,EAAYN,EAAOL,QAAQW,UAC3Be,EAAYrB,EAAOL,QAAQ0B,UAC3B3B,EAAgBM,EAAOL,QAAQD,cAC/BkB,EAAYZ,EAAOR,UAAUC,SAAS,WACtCoB,EAAcb,EAAOR,UAAUC,SAAS,aACxC6B,EAAatB,EAAOL,QAAQ4B,SAEtB,qBAAN9C,EACEpD,SAASsD,cAAc,yBACzBV,EAAkBuB,UAAUM,IAAI,UAChCpC,EAAc8B,UAAUU,OAAO,UAC/BhC,EAAmBsB,UAAUU,OAAO,UACpC/B,EAAmBqB,UAAUU,OAAO,UACpC7E,SAASsD,cAAc,wBAAwBa,UAAUM,IAAI,eAC7DzE,SAASsD,cAAc,wBAAwBa,UAAUU,OAAO,YAEhExC,EAAc8B,UAAUM,IAAI,UAC5B7B,EAAkBuB,UAAUU,OAAO,UACnC7E,SAASsD,cAAc,8BAA8Ba,UAAUM,IAAI,UACnEzE,SAASsD,cAAc,6BAA6Ba,UAAUM,IAAI,UAClEzE,SAASsD,cAAc,6BAA6Ba,UAAUU,OAAO,gBAExD,sBAANzB,GACTP,EAAmBsB,UAAUU,OAAO,UACpChC,EAAmBsB,UAAUU,OAAO,eACpCrC,EAAgB2B,UAAUU,OAAO,UAEjC/B,EAAmBqB,UAAUM,IAAI,UACjC3B,EAAmBqB,UAAUM,IAAI,eACjChC,EAAgB0B,UAAUM,IAAI,UAC9BpC,EAAc8B,UAAUM,IAAI,UAE5B7B,EAAkBuB,UAAUU,OAAO,WACpB,sBAANzB,GACTN,EAAmBqB,UAAUU,OAAO,UACpC/B,EAAmBqB,UAAUU,OAAO,eACpCpC,EAAgB0B,UAAUU,OAAO,UAEjChC,EAAmBsB,UAAUM,IAAI,UACjC5B,EAAmBsB,UAAUM,IAAI,eACjCjC,EAAgB2B,UAAUM,IAAI,UAC9BpC,EAAc8B,UAAUM,IAAI,UAE5B7B,EAAkBuB,UAAUU,OAAO,WACpB,QAANzB,EACT2B,SAASoB,OACM,QAAN/C,EACT2B,SAASqB,OACM,SAANhD,EACT2B,SAASsB,QACDpB,EACRP,EAAgBC,GACRqB,EACRb,EAAgBR,GACRsB,GACRK,UAAUC,OAAO5B,GAEhBN,GACDiB,EAAiBjB,EAAeM,EAAQY,EAAWC,KA6FD,IAGpDzC,aAAcA,EACdC,YAAaA,aAzOD,GA8OZ+B,SAAW,WAIb,IAWIyB,EAXAC,EAAkBzG,SAASsD,cAAc,qDACzCsC,EAAgBnE,WAAWgF,EAAgBnC,QAAQe,OAEnDqB,EAAgB1G,SAASsD,cAAc,oDAMvCqD,EAAS,KACTC,EAAQ,EAGRC,KACAC,KAyGAC,EAAO,SAAU3F,GAEnBA,EAAE4F,iBAEF,IAEIC,EAAUC,EAFVnE,EAAeX,UAAUW,aACzBoE,EAAYhG,iBAAiBC,EAAGrB,IAGpC,GAAoB,OAAhBgD,GAAyC,UAAhBA,EAE3BmE,GADAD,EAAWjH,SAASC,eAAe0G,IACjBZ,aAAa,UAEX,OAAhBhD,EACFmE,GAAU,IAAMC,EAAU5F,EAAI,IAAM4F,EAAU3F,EACrB,UAAhBuB,IACTmE,EAASV,EAAWjF,EAAI,IAAMiF,EAAWhF,EAAI,IAAM2F,EAAU5F,EAAI,IAAM4F,EAAU3F,GAGnFyF,EAAStB,aAAa,SAAUuB,QAC3B,GAAoB,UAAhBnE,EAA0B,CACnC,IAAI4B,EAASvD,EAAEuD,OACXA,EAAOR,UAAUC,SAAS,aAC5B0C,KACAD,EAAUO,MACRC,UAAW1C,GACX2C,GAAI3C,EAAOvB,GACXmE,OAAQ,UAEV5C,EAAOE,UAIX9E,GAAGmF,iBAAiB,aAAcsC,GAAS,IAIzCA,EAAU,WAGG,OAAXb,GAAsD,MAAnC3G,SAASC,eAAe0G,IAC7CE,EAAUO,MACRC,YACAC,GAAIX,EACJY,OAAQ,SAIZxH,GAAG+E,oBAAoB,YAAaiC,GAAM,GAC1ChH,GAAG+E,oBAAoB,UAAW0C,GAAS,GAC3CzH,GAAG+E,oBAAoB,aAAc0C,GAAS,IAGhD,OACErB,KA3JS,WAET,GAAIU,EAAUpD,OAAS,EAAG,CACxB,IACIgE,EADAC,EAAab,EAAUc,MAE3B,OAAQD,EAAWH,QACjB,IAAK,OACHE,EAAMzH,SAASC,eAAeyH,EAAWJ,IACzCI,EAAWL,SAASD,KAAKK,GACzBA,EAAIG,WAAWC,YAAYJ,GAC3B,MACF,IAAK,QACH1H,GAAG+H,YAAYJ,EAAWL,SAAS,IACnC,MACF,IAAK,QACWK,EAAWL,SACbpE,QAAQ,SAAU8E,GAC5BhI,GAAG+H,YAAYC,GACfnB,MAINE,EAAUM,KAAKM,KAsIjBtB,KAjIS,WAET,GAAIU,EAAUrD,OAAS,EAAG,CACxB,IACIgE,EADAC,EAAaZ,EAAUa,MAE3B,OAAQD,EAAWH,QACjB,IAAK,OACHE,EAAMC,EAAWL,SAAS,GAC1BtH,GAAG+H,YAAYL,GACf,MACF,IAAK,SACHA,EAAMC,EAAWL,SAAS,IACtBO,WAAWC,YAAYJ,GAC3B,MACF,IAAK,QACHC,EAAWL,SAASpE,QAAQ,SAAUwE,GACpCA,EAAIG,WAAWC,YAAYJ,KAIjCZ,EAAUO,KAAKM,KA8GjBrB,MAzGU,WAEVO,EAAQ,EACR,IAAIoB,EAAchI,SAASuC,iBAAiB,YAC5CuE,KACAD,EAAUO,MACRC,SAAUW,EACVV,GAAI,KACJC,OAAQ,UAEVxH,GAAGkI,UAAY,IAgGfrC,cAAeA,EACfC,YA5KgBpE,WAAWiF,EAAcpC,QAAQe,OA6KjDD,YA3KkBpF,SAASsD,cAAc,6CACXgB,QAAQe,MA2KtCL,UA/Fc,SAAS5D,GAEvBA,EAAE4F,iBAEF,IAQIkB,EARAtC,EAAgBb,SAASa,cAEzBuC,EAAiBpD,SAASK,YAC1BgD,EAAiBrD,SAASc,YAG1BwC,EAAoBtD,SAASc,YAAc,GAG3C9C,EAAeX,UAAUW,aAEzBoE,EAAYhG,iBAAiBC,EAAGrB,IACpC4G,EAAS,QAAUC,EAGA,OAAhB7D,GAAyC,UAAhBA,IACP,OAAhBA,EACDmF,EAAc,iCAAmCvB,EAAS,oBAAoBf,EAAc,0CAA4CuC,EAAiB,iBAAmBC,EAAiB,aAAejB,EAAU5F,EAAI,IAAM4F,EAAU3F,EAAI,OACtN,UAAhBuB,IACRmF,EAAc,iCAAmCvB,EAAS,mFAA2F0B,EAAoB,aAAelB,EAAU5F,EAAI,IAAM4F,EAAU3F,EAAI,QAE5NzB,GAAGkI,WAAaC,GAGlBnI,GAAGmF,iBAAiB,YAAa6B,GAAM,GACvChH,GAAGmF,iBAAiB,UAAWsC,GAAS,GAExCZ,IACAJ,EAAaW,IAvHF,GA2LXmB,WAAa,WACf,IAAIC,EAAS,EAAGC,EAAS,EAAGC,EAAO,EAAGC,EAAO,EAEzCC,EAAaC,WAAaC,cAAgB,KAE1CC,EAAO,SAASC,EAAWC,GAG7B,IAAIC,EAAYF,EAAUxG,iBAAiB,cAE5B,OAAZyG,EAEGC,EAAUxF,OAAS,EACrBwF,EAAUhG,QAAQ,SAAUiG,GAC1BA,EAAShE,iBAAiB,YAAaiE,GAAW,KAGpDJ,EAAU7D,iBAAiB,YAAaiE,GAAW,GAEjC,UAAZH,IAEJC,EAAUxF,OAAS,EACrBwF,EAAUhG,QAAQ,SAAUiG,GAC1BA,EAASpE,oBAAoB,YAAaqE,GAAW,KAGvDJ,EAAUjE,oBAAoB,YAAaqE,GAAW,KAKxDA,EAAY,SAAS/H,GAGvB,IAAI+F,EAAYhG,iBAAiBC,EAAGrB,IACpCuI,WAAWK,WAAavH,EAAEuD,OAAOyE,QAAQ,cACzC,IAAIT,EAAaL,WAAWK,WAIxBvH,EAAEuD,OAAOR,UAAUC,SAAS,eAG9BlE,QAAQiE,UAAUM,IAAI,YAEtB8D,EAASpB,EAAU5F,EACnBiH,EAASrB,EAAU3F,EAEhBmH,GAAcL,WAAWO,gBAC1BF,EAAW9H,MAAMwI,SAAWf,WAAWgB,kBAEzChB,WAAWO,cAAgBP,WAAWK,WAGlCA,EAAWxE,UAAUC,SAAS,oBAChCmF,UAAUC,YAGZtJ,QAAQgF,iBAAiB,YAAauE,GAAM,GAC5CvJ,QAAQgF,iBAAiB,UAAWwE,GAAS,KAI7CD,EAAO,SAASrI,GAElBA,EAAE4F,iBAEF,IAAIG,EAAYhG,iBAAiBC,EAAGrB,IAChC4I,EAAaL,WAAWK,WAU5B,GAPAF,EAAOF,EAASpB,EAAU5F,EAC1BmH,EAAOF,EAASrB,EAAU3F,EAC1B+G,EAASpB,EAAU5F,EACnBiH,EAASrB,EAAU3F,EAGnBmH,EAAW9H,MAAME,KAAQ4H,EAAWgB,WAAalB,EAAQ,KACtDE,GAActG,cAAe,CAC9B,IAGIuH,EAHI1J,QAAQc,wBAAwB6I,OAChClB,EAAW3H,wBAAwB6I,OACnClB,EAAWmB,UAEnBnB,EAAW9H,MAAMkJ,OAAUH,EAAelB,EAAQ,UAElDC,EAAW9H,MAAMK,IAAOyH,EAAWmB,UAAYpB,EAAQ,KAIrDC,EAAWxE,UAAUC,SAAS,qBAEhCmF,UAAUS,kBAEoB,MAA1BT,UAAUU,eACRV,UAAUU,aAAeV,UAAUW,SACrCX,UAAUY,WAAU,GAEpBZ,UAAUY,WAAU,MAMxBT,EAAU,SAAStI,GAErBA,EAAE4F,iBAEF,IAAI2B,EAAaL,WAAWK,WAE5BzI,QAAQiE,UAAUU,OAAO,YAGrB8D,EAAWxE,UAAUC,SAAS,oBACF,MAA1BmF,UAAUU,cAAwBV,UAAUU,aAAeV,UAAUW,WACvEX,UAAUa,OACVb,UAAUU,aAAe,MAK7B/J,QAAQ4E,oBAAoB,YAAa2E,GAAM,GAC/CvJ,QAAQ4E,oBAAoB,UAAW4E,GAAS,IAKlD,OAFAZ,EAAKzG,cAAe,QAGlBiH,iBA7HqB,EA8HrBX,WAAYA,EACZC,WAAYA,WACZC,cAAeA,cACfC,KAAMA,GAnIO,GAwIbuB,cAAgB,WAClB,IAAIC,EAAeC,EAmBfC,EAAY,SAASpJ,GAAKA,EAAE4F,kBAC5ByD,EAAY,SAASrJ,GAAKA,EAAE4F,kBAC5B0D,EAAW,SAAStJ,GACtBA,EAAE4F,iBACF9G,QAAQiE,UAAUM,IAAI,aAEpBkG,EAAO,SAASvJ,GAElBA,EAAE4F,iBAEF,IAAI4D,EAAWxJ,EAAEyJ,aAAaC,QAAQ,YAClChF,EAAM1E,EAAEyJ,aAAaC,QAAQ,OAC7BC,EAAQ3J,EAAEyJ,aAAaC,QAAQ,SAC/BjB,EAASzI,EAAEyJ,aAAaC,QAAQ,UAEpC5K,QAAQiE,UAAUU,OAAO,YAEzB,IAIMkE,EAJFiC,EAAoBC,UAAUL,GAAe,IAC1B5K,SAASuC,iBAAiB,oBAAsBqI,EAAW,mBAAmBnH,OAE9EuH,GAEL,SAAZJ,GACF7B,EAAY/I,SAASM,cAAc,QAEzB2H,0FAC2D2C,gDACnC9E,oBAAsBiF,gBAAoBlB,+NAQ5Ed,EAAY/I,SAASM,cAAc,QACzBwF,IAAMA,EAChBiD,EAAUgC,MAAQA,EAClBhC,EAAUc,OAASA,EACnBd,EAAU5E,UAAUM,IAAI,gBACxBsE,EAAU5E,UAAUM,IAAI,aACxBsE,EAAUpD,aAAa,iBAAkBiF,IAM3C7B,EAAU5E,UAAUM,IAAI,mBACxBsE,EAAUpD,aAAa,YAAa0E,cAAca,cAClDnC,EAAUlI,MAAMwI,SAAWf,WAAWgB,iBACtCP,EAAUlI,MAAME,KAAOK,EAAE+J,QAAUb,EAAgB,KACnDvB,EAAUlI,MAAMK,IAAME,EAAEgK,QAAUb,EAAgB,KAClDxB,EAAU5E,UAAUM,IAAI,aAExBvE,QAAQ4H,YAAYiB,GAEpBsB,cAAcgB,aAAetC,EAAU/H,wBAAwB6I,OAG/Dd,EAAU7D,iBAAiB,WAAYqE,UAAU+B,QAAQ,GAEzDhD,WAAWQ,KAAKC,EAAW,OAE3B7I,QAAQ4E,oBAAoB,YAAa0F,GACzCtK,QAAQ4E,oBAAoB,YAAa2F,GACzCvK,QAAQ4E,oBAAoB,WAAY4F,GACxCxK,QAAQ4E,oBAAoB,OAAQ6F,IAEpCY,MAAM,0BAA4BP,EAAoB,OAASJ,EAAW,gBAI9E,OACEzB,UAxFc,SAAS/H,GAGvBkJ,EAAgBlJ,EAAE+J,QAClBZ,EAAgBnJ,EAAEgK,QAClBhK,EAAEyJ,aAAaW,QAAQ,MAAOpK,EAAEuD,OAAOmB,KACvC1E,EAAEyJ,aAAaW,QAAQ,QAASpK,EAAEuD,OAAO3D,wBAAwB+J,OACjE3J,EAAEyJ,aAAaW,QAAQ,SAAUpK,EAAEuD,OAAO3D,wBAAwB6I,QAClEzI,EAAEyJ,aAAaW,QAAQ,WAAYpK,EAAEuD,OAAOL,QAAQsG,UAEpD1K,QAAQgF,iBAAiB,YAAasF,GAAW,GACjDtK,QAAQgF,iBAAiB,YAAauF,GAAW,GACjDvK,QAAQgF,iBAAiB,WAAYwF,GAAU,GAC/CxK,QAAQgF,iBAAiB,OAAQyF,GAAM,IA4EvCO,aA5FiB,EA6FjBG,aA5FiB,GAHD,GAoGhBI,WAAa,WAGf,IAAK,IAAIb,KAAYK,UAAW,CAC9B,IAAIS,EAAmB1L,SAASsD,cAAc,gBAAkBsH,EAAW,eAC3E,GAAIK,UAAU9I,eAAeyI,GACdK,UAAUL,GAAUe,OAC1B1I,QAAQoC,IACb,IAAIhF,EAAKL,SAASM,cAAc,OAChCD,EAAG8D,UAAUM,IAAI,kBACjBpE,EAAGsF,aAAa,iBAAkBiF,GAClCvK,EAAGyF,IAAM,iBAAmBT,EAC5BqG,EAAiB5D,YAAYzH,MAZpB,GAmBbiG,UAAY,SAAWlF,GACzB,IAiCIwK,EAAQ,SAASxK,GAEnB,IAAIyK,EAAQ3F,SAAW4F,cAAgBC,eAAiB,KAGxD,GAAG3K,EAAEM,KAAM,CAET,IAAIsK,GADJH,EAAQI,KAAK7C,QAAQ,eACC9E,QAAQuH,MAC9B3F,SAAWlG,SAASsD,cAAc,oBAAsB0I,EAAY,MACpEF,cAAgBG,SACX,CACDD,EAAY5K,EAChByK,EAAQ7L,SAASsD,cAAc,gBAAkB0I,EAAY,MAC7D9F,SAAWlG,SAASsD,cAAc,oBAAsB0I,EAAY,MACpEF,cAAgBD,EAAMvI,cAAc,cAGtCyI,eAAiBF,EAAMK,uBAAuB,kBAC9CL,EAAM1H,UAAUU,OAAO,UACvBqB,SAAS/B,UAAUU,OAAO,UAG1BiH,cAAchH,oBAAoB,QAAS8G,GAAO,GAClDtD,WAAWQ,KAAK+C,EAAO,UACvB,IAAK,IAAIjI,EAAI,EAAGA,EAAImI,eAAetI,OAAQG,IACzCmI,eAAenI,GAAGkB,oBAAoB,YAAauF,cAAclB,WAAW,GAI1E0C,EAAMvH,QAAQ6H,WAChBnJ,YAAc,OAGlB,OACEuD,OAnEW,SAAS5B,GACpB,IAAIqH,EAAYrH,EAAOL,QAAQ4B,SAG/B,GAAKvB,EAAOR,UAAUC,SAAS,UA0B7BwH,EAAMI,OA1BkC,CAGxC,IAAIH,EAAQ7L,SAASsD,cAAc,gBAAkB0I,EAAY,MAC7DF,EAAgBD,EAAMvI,cAAc,cACpCyI,EAAiBF,EAAMK,uBAAuB,kBAElDvH,EAAOR,UAAUM,IAAI,UACrBoH,EAAM1H,UAAUM,IAAI,UACpBoH,EAAMhL,MAAMwI,SAAWf,WAAWgB,iBAElChB,WAAWK,WAAakD,EACxBvD,WAAWO,cAAgBgD,EAG3BC,EAAc5G,iBAAiB,QAAS0G,GAAO,GAC/CtD,WAAWQ,KAAK+C,EAAO,OACvB,IAAK,IAAIjI,EAAI,EAAGA,EAAImI,EAAetI,OAAQG,IACzCmI,EAAenI,GAAGsB,iBAAiB,YAAamF,cAAclB,WAAW,GAIvE0C,EAAMvH,QAAQ6H,WAChBnJ,YAAc6I,EAAMvH,QAAQ6H,aA5BpB,GAyEZ5C,UAAY,SAAWnI,GACzB,IAAIgL,KAMAC,EAAiBC,cAAgBrC,aAAesC,SAAW5D,WAAaC,WAAa4D,UAAYC,UAAY,KAC7GC,EAAa,KAsIbtC,EAAO,WAGT,IAAIuC,EAAkBxM,uBAEtBqM,WAAaD,SA9IL,GAgJR,IAAI3B,EAAWjC,WAAWrF,cAAc,oBAAoBgB,QAAQsG,SAChE9E,EAAM6C,WAAWrF,cAAc,OAAOwC,IACtCiF,EAAQpC,WAAWrF,cAAc,OAAOyH,MACxClB,EAASlB,WAAWrF,cAAc,OAAOuG,OAE7C,GAAe,YAAZ0C,SACD,IAAIK,EAAsBhE,WAAWrG,iBAAiB,cAAckB,OAChEoJ,EAAsBlE,WAAWpG,iBAAiB,cAAckB,YAEhEmJ,EAAsBhE,WAAWrG,iBAAiB,eAAekB,OACjEoJ,EAAsBlE,WAAWpG,iBAAiB,eAAekB,OAEvE,IAAIqJ,EAAaF,EAAsBC,EASvC,GAAIC,GAAcN,UAAW,CAI3B,GADAC,UAAY,GACI,YAAZF,SAAwB,CAC1B,IAAK,IAAIQ,EAAI,EAAGA,EAAIF,EAAqBE,IACvCN,0EACkDG,EAAsBG,sBAAsBnC,kDAC5D9E,oBAAsBiF,gBAAoBlB,uDAI9EvB,WAAWM,WAAWX,WAAawE,UACnC7D,WAAaN,WAAWM,gBACnB,GAAgB,cAAZ2D,SAA0B,CACnCE,UAAY,GACZ,IAAK,IAAIO,EAAI,EAAGA,EAAIF,EAAYE,IAAK,CACnCP,4DAA8DO,sBAAsBpC,MACpF,IAASmC,EAAI,EAAGA,EAvLd,EAuLuBA,IACvBN,0CAA4C3G,oBAAsBiF,gBAAoBlB,eAExF4C,WAAa,SAEfA,WAAa,sNAObnE,WAAWM,WAAWX,UAAYwE,UAClC7D,WAAaN,WAAWM,WACxBN,WAAWQ,KAAKF,WAAY,OAQ9B,GALgB,cAAZ2D,UAA0B3D,WAAWzE,UAAUM,IAAI,eAEvDqI,EAAalE,WAAWrG,iBAAiB,eAAekB,SAGtC+I,UAAW,CAG3B,GAAe,YAAZD,SAAwB,CAEzBE,UAAY,2BACZ,IAAQM,EAAI,EAAGA,EAnNb,EAmNsBA,IACtBN,sDAAwDM,sBAAsBnC,gBAAuB9E,oBAAsBiF,gBAAoBlB,eAEjJ4C,WAAa,kOAQbnE,WAAWM,WAAWX,UAAYwE,UAClC7D,WAAaN,WAAWM,WACxBA,WAAWzE,UAAUM,IAAI,gBACL,cAAZ8H,WACR3D,WAAaN,WAAWM,YAG1BqE,QAAQC,IAAI,2BAGd5E,WAAWQ,KAAKF,WAAY,OAC5BD,WAAW9D,cACN,GAAGiI,EAAaN,UAAW,CAGhC,IAAIW,EAAkBX,UAAYI,EAC9BQ,EAAiBP,EAAsBM,EAE3C,GAAe,YAAZZ,SAAwB,CAEzBE,UAAY,2BACZ,IAAQM,EAAI,EAAGA,EAnPX,EAmPoBA,IACtBN,sDAAwDM,sBAAsBnC,gBAAuB9E,oBAAsBiF,gBAAoBlB,eAEjJ4C,WAAa,sNAQbnE,WAAWM,WAAWX,UAAYwE,UAClC7D,WAAaN,WAAWM,WACxBA,WAAWzE,UAAUM,IAAI,YAGzB,IAAK,IAAIb,EAAI,EAAGA,EAAIuJ,EAAiBvJ,IACnC+E,WAAWrF,cAAc,iBAAmBuJ,EAAsB,EAAIjJ,GAAK,iBAAiBiB,cAGzF,GAAe,cAAZ0H,SAA0B,CAElCE,UAAY,GACZ,IAASO,EAAI,EAAGA,EAAIG,EAAiBH,IAAK,CACxCP,4DAA8DG,EAAsBI,sBAAsBpC,MAC1G,IAASmC,EAAI,EAAGA,EA5Qd,EA4QuBA,IACvBN,0CAA4C3G,oBAAsBiF,gBAAoBlB,eAExF4C,WAAa,SAMf,GAJAnE,WAAWM,WAAWX,WAAawE,UACnC7D,WAAaN,WAAWM,WAGH,GAAlBwE,EAAqB,CACtBX,UAAY,2BACZ,IAASM,EAAI,EAAGA,EAvRd,EAuRuBA,IACvBN,sDAAwDM,sBAAsBnC,gBAAuB9E,oBAAsBiF,gBAAoBlB,2BAGjJ4C,WAAa,mOAQbnE,WAAWK,WAAWV,UAAYwE,UAClC9D,WAAaL,WAAWK,WACxBL,WAAWQ,KAAKH,WAAY,OAC5BA,WAAWxE,UAAUU,OAAO,mBAG5B,IAASjB,EAAI,EAAGA,EAAIuJ,EAAiBvJ,IACnC+E,WAAWrF,cAAc,iBAAmBuJ,EAAsB,EAAIjJ,GAAK,iBAAiBiB,SAKlGyD,WAAWQ,KAAKF,WAAY,OAG5BD,WAAW9H,MAAME,KAAOsL,EACxB1D,WAAW9H,MAAMK,IAAMoL,cACvBhE,WAAWQ,KAAKH,WAAY,OAC5BA,WAAWxE,UAAUM,IAAI,aAEzBwI,QAAQC,IAAI,2BAGdvE,WAAWzD,iBAAiByH,EAC5B,SAASU,IACP1E,WAAW7D,oBAAoB6H,EAAiBU,GAChD1E,WAAWxE,UAAUU,OAAO,eAE9B8D,WAAWxE,UAAUU,OAAO,aAC5B+D,WAAWzE,UAAUU,OAAO,cAE1ByG,EAAS,SAASlK,GAGpB,GAAkB,YAAdsL,EAA0B,CAC5B,IAAI/H,EAASvD,EAAEuD,OAEXiC,EAAQ0G,SAAS3I,EAAOL,QAAQsC,OAEhC2G,GADAT,EAAanE,WAAWpG,iBAAiB,cAAckB,QAC5BmD,EAE3BgE,EAAWjC,WAAWrF,cAAc,oBAAoBgB,QAAQsG,SAChE9E,EAAM6C,WAAWrF,cAAc,OAAOwC,IACtCiF,EAAQpC,WAAWrF,cAAc,OAAOyH,MACxClB,EAASlB,WAAWrF,cAAc,OAAOuG,OAU7C,GARAwC,EAAiB1D,WAAW9H,MAAME,KAClCuL,cAAgB3D,WAAW9H,MAAMK,IAOf,GAAd4L,GAAoBnE,WAAWxE,UAAUC,SAAS,YAE/C,GAAGwC,EAAO,CAEf,GAAI+B,WAAWxE,UAAUC,SAAS,YAI3B,CACLqI,UAAY,GACZ,IAASM,EAAI,EAAGA,EAAInG,EAAOmG,IACzBN,4EACkDM,sBAAsBnC,oDACtC9E,oBAAsBiF,gBAAoBlB,2DAI9E4C,WAAa,8MAMbnE,WAAWK,WAAWV,UAAYwE,UAClC9D,WAAaL,WAAWK,WACxBA,WAAWxE,UAAUU,OAAO,YAE5ByD,WAAWQ,KAAKH,WAAY,OAC5BA,WAAWzD,iBAAiB,WAAYoG,GAAQ,QAvBhD,IAAK,IAAIyB,EAAInG,EAAOmG,EAAID,EAAYC,IAClCpE,WAAWrF,cAAc,gBAAkByJ,EAAI,MAAMlI,SAyBzD,IAAI9D,EAAOU,WAAW4K,GAClBnL,EAAMO,WAAW6K,eAAiB3D,WAAW3H,wBAAwB6I,OAAS,IAE9Ed,EAAY/I,SAASM,cAAc,QAC7B6D,UAAUM,IAAI,mBACxBsE,EAAU5E,UAAUM,IAAI,aACxBsE,EAAUpD,aAAa,YAAa0E,cAAca,cAClDnC,EAAUlI,MAAME,KAAOA,EAAO,KAC9BgI,EAAUlI,MAAMK,IAAMA,EAAM,KAC5B6H,EAAUlI,MAAMwI,SAAWf,WAAWgB,iBAEtCmD,UAAY,GACZ,IAASM,EAAI,EAAGA,EAAIQ,EAAaR,IAC/BN,wEACgDM,sBAAsBnC,gDACtC9E,oBAAsBiF,gBAAoBlB,mDAI5E4C,WAAa,oMAOb1D,EAAUd,UAAYwE,UACtBvM,QAAQ4H,YAAYiB,GAEpBT,WAAWQ,KAAKC,EAAW,OAC3BA,EAAU7D,iBAAiB,WAAYoG,GAAQ,QAE/C2B,QAAQO,KAAK,gCA9Db7E,WAAW9D,aAgER,CACL,IAGIiI,EAHAnI,EAASvD,EAAEuD,OAEXiC,EAAQ0G,SAAS3I,EAAOL,QAAQsC,OAEhC2G,GADAT,EAAanE,WAAWpG,iBAAiB,cAAckB,QAC5BmD,EAE3BgE,EAAWjC,WAAWrF,cAAc,oBAAoBgB,QAAQsG,SAChE9E,EAAM6C,WAAWrF,cAAc,OAAOwC,IACtCiF,EAAQpC,WAAWrF,cAAc,OAAOyH,MACxClB,EAASlB,WAAWrF,cAAc,OAAOuG,OAU7C,GARAwC,EAAiB1D,WAAW9H,MAAME,KAClCuL,cAAgB3D,WAAW9H,MAAMK,IAO9B0F,EAAO,CAER,GAAY,GAATA,EAAY,CACb6F,UAAY,2BACZ,IAASM,EAAI,EAAGA,EAlbd,EAkbuBA,IACvBN,sDAAwDM,sBAAsBnC,gBAAuB9E,oBAAsBiF,gBAAoBlB,2BAGjJ4C,WAAa,mOAQbnE,WAAWK,WAAWV,UAAYwE,UAClC9D,WAAaL,WAAWK,WACxBL,WAAWQ,KAAKH,WAAY,OAC5BA,WAAWxE,UAAUU,OAAO,mBAE5B,IAASkI,EAAInG,EAAOmG,EAAID,EAAYC,IAClCpE,WAAWrF,cAAc,gBAAkByJ,EAAI,MAAMlI,SAIzD,IAIIkE,EAJAhI,EAAOU,WAAW4K,GAAkB1D,WAAW3H,wBAAwB+J,MAAQ,GAC/E7J,EAAMO,WAAW6K,eAWrB,IARIvD,EAAY/I,SAASM,cAAc,QAC7B6D,UAAUM,IAAI,mBACxBsE,EAAU5E,UAAUM,IAAI,aACxBsE,EAAUpD,aAAa,YAAa0E,cAAca,cAClDnC,EAAUlI,MAAME,KAAOA,EAAO,KAC9BgI,EAAUlI,MAAMK,IAAMA,EAAM,KAC5B6H,EAAUlI,MAAMwI,SAAWf,WAAWgB,iBAEpB,GAAfiE,EAAkB,CACnBd,UAAY,2BACZ,IAASM,EAAI,EAAGA,EAtdd,EAsduBA,IACvBN,sDAAwDM,sBAAsBnC,gBAAuB9E,oBAAsBiF,gBAAoBlB,2BAGjJ4C,WAAa,uOAQR,CACLA,UAAY,GACZ,IAAI,IAAIO,EAAI,EAAGA,EAAIO,EAAaP,IAAK,CACnCP,4DAA8DO,sBAAsBpC,MACpF,IAASmC,EAAI,EAAGA,EAtehB,EAseyBA,IACvBN,0CAA4C3G,oBAAsBiF,gBAAoBlB,eAExF4C,WAAa,SAEfA,WAAa,8MAMb1D,EAAU5E,UAAUM,IAAI,cAG1B6D,WAAWM,WAAaG,EAGxBA,EAAU5E,UAAUM,IAAI,YACxBsE,EAAUd,UAAYwE,UACtBvM,QAAQ4H,YAAYiB,GAEpBT,WAAWQ,KAAKC,EAAW,OAC3BA,EAAU7D,iBAAiB,WAAYoG,GAAQ,QAE/C2B,QAAQO,KAAK,6BAKnB,OACEC,YAvgBe,EAwgBfvD,SAvgBa,GAwgBbD,aAAcA,aACdT,UA/fc,WAGdb,WAAaL,WAAWK,WAExB4D,SAAY5D,WAAWxE,UAAUC,SAAS,YAAe,aAAe,WACxEsI,EAAc/D,WAAWxE,UAAUC,SAAS,cAAiB,aAAe,WAC5EgI,KACA,IAAIsB,EAAiBC,eAAiB,KAElCC,EAAiB5N,SAASuC,iBAAiB,oBAG/C,IAAK,IAAIqB,EAAI,EAAGA,EAAIgK,EAAenK,OAAQG,IACzC,GAAIgK,EAAehK,IAAM+E,WAAzB,CAEgB,YAAZ4D,UAEFmB,EAAiBE,EAAehK,GAAGN,cAAc,YAAYtC,wBAC7D2M,eAAiBC,EAAehK,GAAGN,cAAc,eAAetC,0BAGhE0M,EAAiBE,EAAehK,GAAGN,cAAc,aAAatC,wBAC9D2M,eAAiBC,EAAehK,GAAGN,cAAc,cAActC,yBAEjE,IAAIoC,EAAKwK,EAAehK,GAAGU,QAAQlB,GAE/ByK,GACFC,GACEvM,EAAGmM,EAAenM,EAClBC,EAAGkM,EAAelM,GAEpBuM,GACExM,EAAGoM,eAAepM,EAClBC,EAAGmM,eAAenM,IAGtB4K,EAAWhJ,GAAMyK,EAGnBxB,EAAiB1D,WAAW9H,MAAME,KAClCuL,cAAgB3D,WAAW9H,MAAMK,KAudjC8I,gBArdoB,WAGpB,IAAIC,EAAe,OAENrG,EAAG,EAAGoK,EAAG,EAAG5K,GAAI,KAEb,YAAZmJ,UACFmB,eAAiB/E,WAAWrF,cAAc,YAAYtC,wBACtD2M,eAAiBhF,WAAWrF,cAAc,eAAetC,0BAEzD0M,eAAiB/E,WAAWrF,cAAc,aAAatC,wBACvD2M,eAAiBhF,WAAWrF,cAAc,cAActC,yBAmB1D,IAhBA,IAAIiN,GACFH,GACEvM,EAAGmM,eAAenM,EAClBC,EAAGkM,eAAelM,GAEpBuM,GACExM,EAAGoM,eAAepM,EAClBC,EAAGmM,eAAenM,IASboC,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAK,IAAIiK,KAAazB,EAAY,CAEhC,IAAI4B,EAAU,GAALpK,EAAU,EAAI,EACvB,GAAIwI,EAAWjK,eAAe0L,GAAY,CAGxC,IAAIK,EAAKD,EAAUrK,GAAGrC,EAClB4M,EAAKF,EAAUrK,GAAGpC,EAKlBD,EAAI2M,EAJC9B,EAAWyB,GAAWG,GAAGzM,EAK9BC,EAAI2M,EAJC/B,EAAWyB,GAAWG,GAAGxM,EAK9B4M,EAAI3M,WAAYqC,KAAKuK,KAAK9M,EAAIA,EAAIC,EAAIA,GAAIK,QAAQ,KAGlC,MAAhBoI,GAAwBA,EAAemE,KACzCnE,EAAemE,GAEbxK,EAAS,GAALA,EAAU,EAAI,EAClBoK,EAAS,GAALA,EAAU,EAAI,EAClB5K,GAAIyK,GAGNtE,UAAUU,aAAeA,EACzBrB,WAAaN,WAAWM,WAAa5I,SAASsD,cAAc,aAAeuK,EAAY,KAGxE,YAAZtB,UACG3D,WAAWzE,UAAUC,SAAS,YAIrB,cAAZmI,WACI5D,WAAWxE,UAAUC,SAAS,aAAgBwE,WAAWzE,UAAUC,SAAS,cAC/EmF,UAAUU,aAAe,WAkZrCE,UA1Yc,SAASmE,GACnBA,GAEF3F,WAAWxE,UAAUM,IAAI,aACzBmE,WAAWzE,UAAUM,IAAI,eAEzBkE,WAAWxE,UAAUU,OAAO,aAC5B+D,WAAWzE,UAAUU,OAAO,eAoY9BuF,KAAAA,EAAMA,KAAAA,EACNkB,OAAAA,EAAQA,OAAAA,GAhhBI","sourcesContent":["/*******************************/\r\n//     HTML elements\r\n/*******************************/\r\nvar cv = document.getElementById('cv');\r\nvar cvOuter = document.getElementById('cvOuter');\r\n\r\n\r\n/*******************************/\r\n//     functions - helping\r\n/*******************************/\r\n// returns object length\r\nObject.size = function (obj) {\r\n  var size = 0, key;\r\n  for (key in obj) {\r\n    if (obj.hasOwnProperty(key)) size++;\r\n  }\r\n  return size;\r\n};\r\n\r\nfunction whichTransitionEvent() {\r\n  var t,\r\n    el = document.createElement(\"fakeelement\");\r\n\r\n  var transitions = {\r\n    \"transition\": \"transitionend\",\r\n    \"OTransition\": \"oTransitionEnd\",\r\n    \"MozTransition\": \"transitionend\",\r\n    \"WebkitTransition\": \"webkitTransitionEnd\"\r\n  }\r\n\r\n  for (t in transitions) {\r\n    if (el.style[t] !== undefined) {\r\n      return transitions[t];\r\n    }\r\n  }\r\n}\r\n\r\n// returns 'left' and 'right' position of given element\r\nfunction getElPosition(el) {\r\n  var pos = { left: el.getBoundingClientRect().left, right: el.getBoundingClientRect().top };\r\n  return pos;\r\n}\r\n\r\n// returns the mouse position w.r.t given element\r\nfunction getMousePosition(e, el) {\r\n  var pos = getElPosition(el);\r\n  var point = { x: 0, y: 0 };\r\n  point.x = parseFloat((((e.type == 'touchstart' || e.type == 'touchmove') ? e.touches[0].clientX : e.clientX) - pos.left).toFixed(2));\r\n  point.y = parseFloat((((e.type == 'touchstart' || e.type == 'touchmove') ? e.touches[0].clientY : e.clientY) - pos.right).toFixed(2));\r\n  return point;\r\n}\r\n\r\n\r\n/*******************************/\r\n//     functions - specific\r\n/*******************************/\r\n// init tools satellite UI and and tool events\r\nvar initTools = (function () {\r\n  // console.log('init')\r\n  var toolsUniverse = document.getElementById('toolsUniverse');\r\n  var toolsPlanets = toolsUniverse.querySelectorAll('.tools-planet');\r\n  var toolsPlanetSets = document.getElementById('toolsPlanetSets');\r\n  var toolsPlanetPens = document.getElementById('toolsPlanetPens');\r\n  var toolsUniverseWidth = toolsUniverse.offsetWidth;\r\n\r\n  var minimizeToggleBtn = document.getElementById('minimizeToggleBtn');\r\n  var toolsPlanetSetsBtn = document.getElementById('toolsPlanetSetsBtn');\r\n  var toolsPlanetPensBtn = document.getElementById('toolsPlanetPensBtn');\r\n\r\n  var currToolType = currSetType = null;\r\n  \r\n  // draw satellite circles\r\n  toolsPlanets.forEach(function (toolsPlanet) {\r\n    var toolsSatellites = toolsPlanet.querySelectorAll('#' + toolsPlanet.id + '>.tools-satellite.primary');\r\n    var toolsSatellitesWidth = toolsPlanet.querySelector('.tools-satellite:first-child').offsetWidth;\r\n    var toolsPlanetWidth = toolsPlanet.offsetWidth;\r\n    var totaltoolsSatellites = toolsSatellites.length;\r\n    // var rotation = 360 / totaltoolsSatellites;\r\n    var rotation = 30;\r\n    var radius = (toolsUniverseWidth - toolsSatellitesWidth) / 2;\r\n    // var radius = 130;\r\n    var totalOffset = (toolsPlanetWidth - toolsSatellitesWidth) / 2;\r\n    // var totalOffset = 60;\r\n\r\n    toolsSatellites.forEach(function (toolsSatellite, i) {\r\n      // place primary tools\r\n      var n = i - 3; // to start from top side instead of rigth side\r\n      var x = Math.round(Math.cos((rotation * n) * (Math.PI / 180)) * radius);\r\n      var y = Math.round(Math.sin((rotation * n) * (Math.PI / 180)) * radius);\r\n      var left = Math.round(x + totalOffset);\r\n      var top = Math.round(y + totalOffset);\r\n      toolsSatellite.style.left = left + \"px\";\r\n      toolsSatellite.style.top = top + \"px\";\r\n\r\n      // place secondary tools if any\r\n      if (toolsSatellite.classList.contains('has-child')) {\r\n        let toolGroupType = toolsSatellite.dataset.toolGroupType;\r\n        let toolsSatellites = toolsPlanet.querySelectorAll('[data-tool-group-type=\"' + toolGroupType + '\"].secondary');\r\n        let rotation = 16;\r\n        let radius = 178;\r\n\r\n        toolsSatellites.forEach(function (toolsSatellite, i) {\r\n          let n = i - 4.5;\r\n\r\n          switch (toolGroupType) {\r\n            case \"pastel1\": n = i + 1; \r\n              break;\r\n            case \"pastel2\": n = i + 2.7; \r\n              break;\r\n            case \"stroke\": n = i + 4.7;\r\n              break;\r\n            case \"opacity\": n = i + 6.5; \r\n              break;\r\n            case \"scale\": n = i + 6; \r\n              break;\r\n          }\r\n\r\n          let y = Math.sin((rotation * n) * (Math.PI / 180)) * radius;\r\n          let x = Math.cos((rotation * n) * (Math.PI / 180)) * radius;\r\n          toolsSatellite.style.top = (y + totalOffset).toString() + \"px\";\r\n          toolsSatellite.style.left = (x + totalOffset).toString() + \"px\";\r\n        })\r\n      }\r\n    });\r\n  });\r\n  // add 'active' class to one of the 'tools-planet'\r\n  toolsPlanetSets.classList.add('active');\r\n  toolsPlanetSetsBtn.classList.add('active');\r\n  toolsPlanetSetsBtn.classList.add('temp-active');\r\n\r\n  var clickHandler = function(e) {\r\n    // console.log(e.target.dataset);\r\n\r\n    var target = e.target;\r\n    var id = target.id;\r\n    var toolType1 = target.dataset.toolType1; // pen, marker, eraser\r\n    var toolType2 = target.dataset.toolType2; // pastels 1-4\r\n    var toolGroupType = target.dataset.toolGroupType;\r\n    var isPrimary = target.classList.contains('primary');\r\n    var isSecondary = target.classList.contains('secondary');\r\n    var ispanelBtn = target.dataset.panelBtn;\r\n\r\n    if (id == \"minimizeToggleBtn\") {\r\n      if (document.querySelector('.tools-planet.active')) {\r\n        minimizeToggleBtn.classList.add('active');\r\n        toolsUniverse.classList.remove('active');\r\n        toolsPlanetSetsBtn.classList.remove('active');\r\n        toolsPlanetPensBtn.classList.remove('active');\r\n        document.querySelector('.tools-planet.active').classList.add('temp-active');\r\n        document.querySelector('.tools-planet.active').classList.remove('active');\r\n      } else {\r\n        toolsUniverse.classList.add('active');\r\n        minimizeToggleBtn.classList.remove('active');\r\n        document.querySelector('.tools-toggle .temp-active').classList.add('active');\r\n        document.querySelector('.tools-planet.temp-active').classList.add('active');\r\n        document.querySelector('.tools-planet.temp-active').classList.remove('temp-active');\r\n      }\r\n    } else if (id == \"toolsPlanetPensBtn\") {\r\n      toolsPlanetSetsBtn.classList.remove('active');\r\n      toolsPlanetSetsBtn.classList.remove('temp-active');\r\n      toolsPlanetSets.classList.remove('active');\r\n\r\n      toolsPlanetPensBtn.classList.add('active');\r\n      toolsPlanetPensBtn.classList.add('temp-active');\r\n      toolsPlanetPens.classList.add('active');\r\n      toolsUniverse.classList.add('active');\r\n      \r\n      minimizeToggleBtn.classList.remove('active');\r\n    } else if (id == \"toolsPlanetSetsBtn\") {\r\n      toolsPlanetPensBtn.classList.remove('active');\r\n      toolsPlanetPensBtn.classList.remove('temp-active');\r\n      toolsPlanetPens.classList.remove('active');\r\n\r\n      toolsPlanetSetsBtn.classList.add('active');\r\n      toolsPlanetSetsBtn.classList.add('temp-active');\r\n      toolsPlanetSets.classList.add('active');\r\n      toolsUniverse.classList.add('active');\r\n      \r\n      minimizeToggleBtn.classList.remove('active');\r\n    } else if (id == 'undo') {\r\n      initDraw.undo();\r\n    } else if (id == 'redo') {\r\n      initDraw.redo();\r\n    } else if (id == 'clear') {\r\n      initDraw.clear();\r\n    } else if(toolType1) {\r\n      updateToolType1(target);\r\n    } else if(toolType2) {\r\n      updateToolType2(target);\r\n    } else if(ispanelBtn) {\r\n      initPanel.toggle(target);\r\n    }\r\n    if(toolGroupType) {\r\n      updateToolsGroup(toolGroupType, target, isPrimary, isSecondary);\r\n    }\r\n  }\r\n\r\n  // // pen, marker, eraser\r\n  var updateToolType1 = function(target) {\r\n    // console.log('updateToolType1');\r\n\r\n    // remove 'active' class from previous 'active' button\r\n    // and make 'currToolType' null\r\n    var oldToolBtn = document.querySelector('#toolsPlanetPens [data-tool-type1].active');\r\n    if (oldToolBtn) {\r\n      oldToolBtn.classList.remove('active');\r\n      initTools.currToolType = null;\r\n      cv.removeEventListener('mousedown', initDraw.drawStart, false);\r\n    }\r\n    // add 'active' class to current 'clicked' button if it is not the 'active' button already\r\n    // and update 'currToolType' value\r\n    if(oldToolBtn != target) {\r\n      target.classList.add('active');\r\n      initTools.currToolType = target.dataset.toolType1;\r\n      cv.addEventListener('mousedown', initDraw.drawStart, false);\r\n    }\r\n  }  \r\n\r\n  // four pastels buttons\r\n  var updateToolType2 = function(target) {\r\n      // console.log('updateToolType2')\r\n      \r\n      // remove 'active' class from previous 'active' button\r\n      var oldToolBtn = document.querySelector('#toolsPlanetPens [data-tool-type2].active');\r\n      if (oldToolBtn && oldToolBtn != target) {\r\n        oldToolBtn.classList.remove('active');\r\n        target.classList.add('active');\r\n      }\r\n\r\n      initDraw.strokeColor = target.dataset.value;\r\n  }\r\n\r\n  // handling of satellite buttons which has childrens\r\n  var updateToolsGroup = function(toolGroupType, target, isPrimary, isSecondary) {\r\n    // console.log('updateToolsGroup');\r\n\r\n    if(isPrimary) { \r\n      // console.log('isPrimary')\r\n\r\n      // remove 'show-child' class if present\r\n      if(target.classList.contains('show-child')) {\r\n        target.classList.remove('show-child')\r\n      } else { // add 'show-child' on clicked element before that remove from other element if present\r\n        if(document.querySelector('.has-child.show-child')) {\r\n          document.querySelector('.has-child.show-child').classList.remove('show-child');\r\n        }        \r\n        target.classList.add('show-child');\r\n      }  \r\n    } else if(isSecondary) {\r\n      // console.log('isSecondary');\r\n\r\n      var parent = document.querySelector('[data-tool-group-type=\"' + toolGroupType + '\"].primary');\r\n      var oldToolBtn = document.querySelector('[data-tool-group-type=\"' + toolGroupType + '\"].secondary.active');\r\n\r\n      // make pastel group behave like first two pastel buttons\r\n      if(toolGroupType.substr(0, 6) == 'pastel') {\r\n        document.querySelector('[data-tool-type2].primary.active').classList.remove('active');\r\n        parent.setAttribute('data-tool-type2', 'pastel');\r\n        toolGroupType = \"pastel\";\r\n      }        \r\n\r\n      // remove 'active' class from old child having 'active' class\r\n      if(oldToolBtn) {\r\n        oldToolBtn.classList.remove('active');\r\n      }\r\n      \r\n      target.classList.add('active');\r\n      parent.classList.add('active');\r\n      parent.classList.remove('show-child');\r\n      \r\n      switch(toolGroupType) {\r\n        case \"opacity\": initDraw.strokeOpacity = parseFloat(target.dataset.value);\r\n        break;\r\n        case \"stroke\": initDraw.strokeWidth = parseFloat(target.dataset.value);\r\n        break;\r\n        case \"pastel\": \r\n          var src = target.querySelector('img').getAttribute('src');\r\n          parent.querySelector('img').setAttribute('src', src);\r\n          parent.setAttribute('data-value', target.dataset.value)\r\n          initDraw.strokeColor = target.dataset.value;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  \r\n  // click listener on tools\r\n  toolsUniverse.addEventListener('click', clickHandler, false);  \r\n\r\n  return {\r\n    currToolType: currToolType,\r\n    currSetType: currSetType\r\n  }\r\n})();\r\n\r\n// draw, undo, redo, clear functions\r\nvar initDraw = (function () {\r\n  // console.log('initDraw');\r\n\r\n  // initial stroke properties from HTML elements\r\n  var strokeOpacityEl = document.querySelector('[data-tool-group-type=\"opacity\"].secondary.active');\r\n  var strokeOpacity = parseFloat(strokeOpacityEl.dataset.value);\r\n\r\n  var strokeWidthEl = document.querySelector('[data-tool-group-type=\"stroke\"].secondary.active');\r\n  var strokeWidth = parseFloat(strokeWidthEl.dataset.value);\r\n\r\n  var strokeColorEl = document.querySelector('[data-tool-type2=\"pastel\"].primary.active');\r\n  var strokeColor = strokeColorEl.dataset.value;\r\n\r\n  var currId = null;\r\n  var index = 0;\r\n  var startPoint;\r\n  var currPoint;\r\n  var undoStack = [];\r\n  var redoStack = [];  \r\n\r\n  // Undo last action\r\n  var Undo = function() {\r\n    // console.log('undo');\r\n    if (undoStack.length > 0) {\r\n      var lastAction = undoStack.pop();\r\n      var ele, clearedEles;\r\n      switch (lastAction.Action) {\r\n        case 'draw':\r\n          ele = document.getElementById(lastAction.Id);\r\n          lastAction.Elements.push(ele);\r\n          ele.parentNode.removeChild(ele);\r\n          break;\r\n        case 'erase':\r\n          cv.appendChild(lastAction.Elements[0]);\r\n          break;\r\n        case 'clear':\r\n          clearedEles = lastAction.Elements;\r\n          clearedEles.forEach(function (shape) {\r\n            cv.appendChild(shape);\r\n            index++;\r\n          });\r\n          break;\r\n      }\r\n      redoStack.push(lastAction);\r\n    }\r\n  }\r\n\r\n  // Redo last undoed action \r\n  var Redo = function() {\r\n    // console.log('redo');\r\n    if (redoStack.length > 0) {\r\n      var lastAction = redoStack.pop();\r\n      var ele;\r\n      switch (lastAction.Action) {\r\n        case 'draw':\r\n          ele = lastAction.Elements[0];\r\n          cv.appendChild(ele);\r\n          break;\r\n        case 'erase':\r\n          ele = lastAction.Elements[0];\r\n          ele.parentNode.removeChild(ele);\r\n          break;\r\n        case 'clear':\r\n          lastAction.Elements.forEach(function (ele) {\r\n            ele.parentNode.removeChild(ele);\r\n          });\r\n          break;\r\n      }\r\n      undoStack.push(lastAction);\r\n    }\r\n  }\r\n\r\n  // clears everything\r\n  var Clear = function() {\r\n    // console.log('clear')\r\n    index = 0;\r\n    var clearedEles = document.querySelectorAll('.drawing');\r\n    redoStack = [];\r\n    undoStack.push({\r\n      Elements: clearedEles,\r\n      Id: null,\r\n      Action: 'clear'\r\n    });\r\n    cv.innerHTML = \"\";\r\n  }\r\n\r\n  // start drawing or erasing\r\n  var drawStart = function(e) {\r\n    // console.log('drawStart')\r\n    e.preventDefault();\r\n\r\n    var strokeOpacity = initDraw.strokeOpacity;\r\n\r\n    var strokeColorPen = initDraw.strokeColor;\r\n    var strokeWidthPen = initDraw.strokeWidth;\r\n\r\n    var strokeColorMarker = 'rgba(0, 255, 0, .5)';\r\n    var strokeWidthMarker = initDraw.strokeWidth + 10;\r\n\r\n    var polylineTag;    \r\n    var currToolType = initTools.currToolType;\r\n  \r\n    var currPoint = getMousePosition(e, cv);\r\n    currId = 'shape' + index;\r\n\r\n\r\n    if(currToolType == \"pen\" || currToolType == \"marker\") {\r\n      if(currToolType == \"pen\") {\r\n        polylineTag = '<polyline class=\"drawing\" id=\"' + currId + '\" style=\"opacity:'+strokeOpacity+';fill:none;stroke-linecap:round;stroke:' + strokeColorPen + ';stroke-width:' + strokeWidthPen + '\" points=\"' + currPoint.x + ',' + currPoint.y + '\" />';;\r\n      } else if(currToolType == \"marker\") {\r\n        polylineTag = '<polyline class=\"drawing\" id=\"' + currId + '\" style=\"fill:none;stroke-linecap:round;stroke:' + strokeColorMarker + ';stroke-width:' + strokeWidthMarker + '\" points=\"' + currPoint.x + ',' + currPoint.y + '\" />';;\r\n      }\r\n      cv.innerHTML += polylineTag;\r\n    }\r\n\r\n    cv.addEventListener('mousemove', draw, false);\r\n    cv.addEventListener('mouseup', drawEnd, false);\r\n\r\n    index++;\r\n    startPoint = currPoint;\r\n  }\r\n\r\n  // keep drawing or erasing\r\n  var draw = function (e) {\r\n    // console.log('draw')\r\n    e.preventDefault();\r\n\r\n    var currToolType = initTools.currToolType;\r\n    var currPoint = getMousePosition(e, cv);\r\n    var polyline, points;\r\n\r\n    if (currToolType == \"pen\" || currToolType == \"marker\") {\r\n      polyline = document.getElementById(currId);\r\n      points = polyline.getAttribute('points');\r\n\r\n      if (currToolType == \"pen\") {\r\n        points += ' ' + currPoint.x + ',' + currPoint.y;\r\n      } else if (currToolType == \"marker\") {\r\n        points = startPoint.x + ',' + startPoint.y + ' ' + currPoint.x + ',' + currPoint.y;\r\n      }\r\n\r\n      polyline.setAttribute('points', points);\r\n    } else if (currToolType == \"eraser\") {\r\n      var target = e.target;\r\n      if (target.classList.contains('drawing')) {\r\n        redoStack = [];\r\n        undoStack.push({\r\n          Elements: [target],\r\n          Id: target.id,\r\n          Action: 'erase'\r\n        });\r\n        target.remove();\r\n      }\r\n    }\r\n\r\n    cv.addEventListener('mouseleave', drawEnd, false);\r\n  }\r\n\r\n  // stop drawing or erasing\r\n  var drawEnd = function() {\r\n    // console.log('drawEnd')\r\n\r\n    if (currId !== null && document.getElementById(currId) != null) {\r\n      undoStack.push({\r\n        Elements: [],\r\n        Id: currId,\r\n        Action: 'draw'\r\n      });\r\n    }\r\n\r\n    cv.removeEventListener('mousemove', draw, false);\r\n    cv.removeEventListener('mouseup', drawEnd, false);\r\n    cv.removeEventListener('mouseleave', drawEnd, false);\r\n  }\r\n\r\n  return {\r\n    undo: Undo,\r\n    redo: Redo,\r\n    clear: Clear,\r\n    strokeOpacity: strokeOpacity,\r\n    strokeWidth: strokeWidth,\r\n    strokeColor: strokeColor,\r\n    drawStart: drawStart\r\n  }  \r\n})();\r\n\r\n// drag behaviour of elements - tools/panels/sets\r\nvar initElDrag = (function() {\r\n  var startX = 0, startY = 0, endX = 0, endY = 0;\r\n  var dragParentzIndex = 0; // update only if drag parent is different each dragging time\r\n  var dragParent = dropParent = oldDragParent = null;\r\n\r\n  var init = function(draggable, listener) {\r\n    // console.log('init drag')\r\n\r\n    var dragAreas = draggable.querySelectorAll('.drag-area');\r\n    \r\n    if(listener == \"add\") { // ADD EVENT LISTENERS\r\n      // console.log('adding')\r\n      if (dragAreas.length > 0) { // if `dragArea` is available, use that to drag\r\n        dragAreas.forEach(function (dragArea) {\r\n          dragArea.addEventListener('mousedown', dragStart, false);\r\n        })\r\n      } else { // otherwise move the element anywhere from with in element\r\n        draggable.addEventListener('mousedown', dragStart, false);\r\n      }    \r\n    } else if(listener == \"remove\") { // REMOVE EVENT LISTENERS\r\n      // console.log('removing')\r\n      if (dragAreas.length > 0) {\r\n        dragAreas.forEach(function (dragArea) {\r\n          dragArea.removeEventListener('mousedown', dragStart, false);\r\n        })\r\n      } else {\r\n        draggable.removeEventListener('mousedown', dragStart, false);\r\n      }    \r\n    }\r\n  }\r\n\r\n  var dragStart = function(e) {\r\n    // console.log('dragStart');\r\n\r\n    var currPoint = getMousePosition(e, cv);\r\n    initElDrag.dragParent = e.target.closest('.draggable');\r\n    var dragParent = initElDrag.dragParent;\r\n    // var oldDragParent = initElDrag.oldDragParent;\r\n    \r\n    // drag only if current element has class 'drag-area'\r\n    if (e.target.classList.contains('drag-area')) {\r\n      // if(e.target.closest('.drag-area')) {\r\n\r\n      cvOuter.classList.add('dragging');\r\n      \r\n      startX = currPoint.x;\r\n      startY = currPoint.y;\r\n        \r\n      if(dragParent != initElDrag.oldDragParent) {\r\n        dragParent.style.zIndex = ++initElDrag.dragParentzIndex;\r\n      } \r\n      initElDrag.oldDragParent = initElDrag.dragParent;\r\n\r\n      // get coordinates of nearby draggable cubes\r\n      if (dragParent.classList.contains('draggable-cubes')) {\r\n        initCubes.getCoords();\r\n      }\r\n\r\n      cvOuter.addEventListener('mousemove', drag, false);\r\n      cvOuter.addEventListener('mouseup', dragEnd, false);\r\n    }\r\n  }\r\n\r\n  var drag = function(e) {\r\n    // console.log('drag')\r\n    e.preventDefault();\r\n\r\n    var currPoint = getMousePosition(e, cv);\r\n    var dragParent = initElDrag.dragParent;\r\n\r\n    // calculate the new cursor position:\r\n    endX = startX - currPoint.x;\r\n    endY = startY - currPoint.y;\r\n    startX = currPoint.x;\r\n    startY = currPoint.y;\r\n\r\n    // set the element's new position:\r\n    dragParent.style.left = (dragParent.offsetLeft - endX) + \"px\";\r\n    if(dragParent == toolsUniverse) {\r\n      var H = cvOuter.getBoundingClientRect().height;\r\n      var h = dragParent.getBoundingClientRect().height;\r\n      var o = dragParent.offsetTop;\r\n      var offsetBottom = H - h - o;\r\n      dragParent.style.bottom = (offsetBottom + endY) + \"px\";\r\n    } else {\r\n      dragParent.style.top = (dragParent.offsetTop - endY) + \"px\";\r\n    }\r\n\r\n    // highligh if 'draggable-cube' is in range\r\n    if (dragParent.classList.contains('draggable-cubes')) {\r\n      // initCubes.isSnapping = true;\r\n      initCubes.getShortestDist();\r\n      // highlight groups accordingly\r\n      if (initCubes.shortestDist != null) {\r\n        if (initCubes.shortestDist < initCubes.snapDist) {\r\n          initCubes.highlight(true);\r\n        } else {\r\n          initCubes.highlight(false);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  var dragEnd = function(e) {\r\n    // console.log('dragEnd')\r\n    e.preventDefault();\r\n\r\n    var dragParent = initElDrag.dragParent;\r\n\r\n    cvOuter.classList.remove('dragging');\r\n\r\n    // snap cubes if in range\r\n    if (dragParent.classList.contains('draggable-cubes')) {\r\n      if (initCubes.shortestDist != null && initCubes.shortestDist < initCubes.snapDist) {\r\n        initCubes.snap();\r\n        initCubes.shortestDist = null;\r\n      }\r\n    }\r\n    // initCubes.isSnapping = false;\r\n\r\n    cvOuter.removeEventListener('mousemove', drag, false);\r\n    cvOuter.removeEventListener('mouseup', dragEnd, false);\r\n  }\r\n\r\n  init(toolsUniverse, 'add');\r\n\r\n  return {\r\n    dragParentzIndex: dragParentzIndex,\r\n    dragParent: dragParent,\r\n    dropParent: dropParent,\r\n    oldDragParent: oldDragParent,\r\n    init: init\r\n  }\r\n})();\r\n\r\n// drag behaviour of seals - cubes/money/numbers/flowers\r\nvar initSealsDrag = (function () {\r\n  var dragEloffsetX, dragEloffsetY;\r\n  var draggablesId = 0;\r\n  var dropElHeight = 0;\r\n\r\n  var dragStart = function(e) {\r\n    // console.log('dragStart');\r\n\r\n    dragEloffsetX = e.offsetX;\r\n    dragEloffsetY = e.offsetY;\r\n    e.dataTransfer.setData(\"src\", e.target.src);\r\n    e.dataTransfer.setData(\"width\", e.target.getBoundingClientRect().width);\r\n    e.dataTransfer.setData(\"height\", e.target.getBoundingClientRect().height);\r\n    e.dataTransfer.setData(\"sealType\", e.target.dataset.sealType);\r\n    \r\n    cvOuter.addEventListener('dragenter', dragEnter, false);\r\n    cvOuter.addEventListener('dragleave', dragLeave, false);\r\n    cvOuter.addEventListener('dragover', dragOver, false);\r\n    cvOuter.addEventListener('drop', drop, false);\r\n  }\r\n  var dragEnter = function(e) { e.preventDefault(); }\r\n  var dragLeave = function(e) { e.preventDefault(); }\r\n  var dragOver = function(e) {\r\n    e.preventDefault();\r\n    cvOuter.classList.add('dropping');\r\n  }\r\n  var drop = function(e) {\r\n    // console.log('drop');\r\n    e.preventDefault();\r\n\r\n    var sealType = e.dataTransfer.getData('sealType');\r\n    var src = e.dataTransfer.getData('src');\r\n    var width = e.dataTransfer.getData('width');\r\n    var height = e.dataTransfer.getData('height');\r\n\r\n    cvOuter.classList.remove('dropping');\r\n\r\n    var totalSealsAllowed = sealTypes[sealType]['max'];\r\n    var totalSealsPlaced = document.querySelectorAll('[data-seal-type=\"' + sealType + '\"].dropped-seal').length;\r\n\r\n    if (totalSealsPlaced < totalSealsAllowed) {\r\n      var draggable;\r\n      if (sealType == \"cubes\") { // generate new draggable group\r\n        draggable = document.createElement('div');\r\n        // <div class=\"cube\"><img src=\"${src}\" style=\"width: ${width-50}px; height: ${height-50}px;\"></div>\r\n        draggable.innerHTML = `\r\n          <div class=\"cube-outer drag-area\" data-index=\"0\" data-seal-type=\"${sealType}\">\r\n            <div class=\"cube\"><img src=\"${src}\" style=\"width: ${width}px; height: ${height}px;\"></div>\r\n          </div>\r\n          <div class=\"dot dot-top\"></div>\r\n          <div class=\"dot dot-bottom\"></div>\r\n          <div class=\"dot dot-left\"></div>\r\n          <div class=\"dot dot-right\"></div>\r\n        `;\r\n      } else { // generate a seal\r\n        draggable = document.createElement('img');\r\n        draggable.src = src;\r\n        draggable.width = width;\r\n        draggable.height = height;\r\n        draggable.classList.add('dropped-seal');\r\n        draggable.classList.add('drag-area');\r\n        draggable.setAttribute('data-seal-type', sealType);\r\n        // draggable.innerHTML = `\r\n        //   <img class=\"dropped-seal drag-aread\" src=\"${src} data-seal-type=${sealType}\";\r\n        // `;\r\n      }\r\n\r\n      draggable.classList.add('draggable-cubes');\r\n      draggable.setAttribute('data-id', ++initSealsDrag.draggablesId);\r\n      draggable.style.zIndex = ++initElDrag.dragParentzIndex;\r\n      draggable.style.left = e.offsetX - dragEloffsetX + 'px';\r\n      draggable.style.top = e.offsetY - dragEloffsetY + 'px';\r\n      draggable.classList.add('draggable');\r\n      \r\n      cvOuter.appendChild(draggable);\r\n\r\n      initSealsDrag.dropElHeight = draggable.getBoundingClientRect().height;\r\n\r\n      // draggable.addEventListener('dblclick', (e) => { draggable.remove(); }, false);\r\n      draggable.addEventListener('dblclick', initCubes.detach, false);\r\n\r\n      initElDrag.init(draggable, 'add');\r\n\r\n      cvOuter.removeEventListener('dragenter', dragEnter)\r\n      cvOuter.removeEventListener('dragleave', dragLeave)\r\n      cvOuter.removeEventListener('dragover', dragOver)\r\n      cvOuter.removeEventListener('drop', drop)\r\n    } else {\r\n      alert('You can only place max ' + totalSealsAllowed + ' of ' + sealType + ' seal type.');\r\n    }\r\n  }\r\n\r\n  return {\r\n    dragStart: dragStart,\r\n    draggablesId: draggablesId,\r\n    dropElHeight: dropElHeight\r\n  }\r\n})();\r\n\r\n// fetch seals from 'settings.json' file\r\nvar fetchSeals = (function () {\r\n  // console.log('fetching seals');\r\n\r\n  for (var sealType in sealTypes) {\r\n    var sealPanelContent = document.querySelector('[data-panel=\"' + sealType + '\"] .content');\r\n    if (sealTypes.hasOwnProperty(sealType)) {\r\n      var values = sealTypes[sealType].values;\r\n      values.forEach(value => {\r\n        var el = document.createElement('img');\r\n        el.classList.add('draggable-seal');\r\n        el.setAttribute('data-seal-type', sealType);\r\n        el.src = './_assets/img/' + value;\r\n        sealPanelContent.appendChild(el);\r\n      });\r\n    }\r\n  }\r\n})();\r\n\r\n// init panel functions - open/close/drag-panel/drag-seals\r\nvar initPanel = (function (e) {\r\n  var toggle = function(target) {\r\n    var panelType = target.dataset.panelBtn;\r\n    \r\n    // open panel\r\n    if (!target.classList.contains('active')) {\r\n      // console.log('open panel');\r\n\r\n      var panel = document.querySelector('[data-panel=\"' + panelType + '\"]');\r\n      var panelCloseBtn = panel.querySelector('.close-btn');\r\n      var draggableSeals = panel.getElementsByClassName('draggable-seal');\r\n      \r\n      target.classList.add('active');\r\n      panel.classList.add('active');\r\n      panel.style.zIndex = ++initElDrag.dragParentzIndex;\r\n\r\n      initElDrag.dragParent = panel;\r\n      initElDrag.oldDragParent = panel;\r\n\r\n      // ADD EVENT LISTENERS\r\n      panelCloseBtn.addEventListener('click', close, false);\r\n      initElDrag.init(panel, 'add');\r\n      for (var i = 0; i < draggableSeals.length; i++) {\r\n        draggableSeals[i].addEventListener('dragstart', initSealsDrag.dragStart, false);\r\n      }\r\n\r\n      // update current geometry set type\r\n      if (panel.dataset.panelSet) {\r\n        currSetType = panel.dataset.panelSet;\r\n      }\r\n    } else { // close panel if already open\r\n      close(panelType);\r\n    }\r\n  }\r\n  var close = function(e) {\r\n    // console.log('close panel')\r\n    var panel = panelBtn = panelCloseBtn = draggableSeals = null;\r\n\r\n    // clicked on closed button and 'type' property exist\r\n    if(e.type) {\r\n      panel = this.closest('.draggable');\r\n      var panelType = panel.dataset.panel;\r\n      panelBtn = document.querySelector('[data-panel-btn=\"' + panelType + '\"]');\r\n      panelCloseBtn = this;\r\n    } else { // clicked on panel btn itself and called 'closePanel' function so 'e.type' not defined\r\n      var panelType = e;\r\n      panel = document.querySelector('[data-panel=\"' + panelType + '\"]');;\r\n      panelBtn = document.querySelector('[data-panel-btn=\"' + panelType + '\"]');\r\n      panelCloseBtn = panel.querySelector('.close-btn');\r\n    }\r\n    \r\n    draggableSeals = panel.getElementsByClassName('draggable-seal');\r\n    panel.classList.remove('active');\r\n    panelBtn.classList.remove('active');\r\n\r\n    // REMOVE EVENT LISTENERS\r\n    panelCloseBtn.removeEventListener('click', close, false);\r\n    initElDrag.init(panel, 'remove');\r\n    for (var i = 0; i < draggableSeals.length; i++) {\r\n      draggableSeals[i].removeEventListener('dragstart', initSealsDrag.dragStart, false);\r\n    }\r\n\r\n    // update current geometry set type to null\r\n    if (panel.dataset.panelSet) {\r\n      currSetType = null;\r\n    }    \r\n  }\r\n  return {\r\n    toggle: toggle\r\n  }\r\n})();\r\n\r\n// cubes - highlighting/snapping/detaching\r\nvar initCubes = (function (e) {\r\n  var dropCoords = {};\r\n  var isSnapping = false; // REMOVE LATER IF NOT REQUIRED\r\n  var snapDist = 40;\r\n  var snapInfo = { i: 0, j: 0, id: '' };\r\n  var row = 3;\r\n  var col = 3; \r\n  var dragParentLeft = dragParentTop = shortestDist = snapType = dragParent = dropParent = cubeLimit = cubeOuter = null;\r\n  var detachType = null;\r\n\r\n  // wrt dragParent\r\n  // 0 == top | 1 == bottom\r\n  // 0 == left | 1 == right\r\n  var getCoords = function() {\r\n    // console.log('geting Coordingates');\r\n\r\n    dragParent = initElDrag.dragParent;\r\n\r\n    snapType = (dragParent.classList.contains('vertical')) ? 'horizontal' : 'vertical';\r\n    detachType = (dragParent.classList.contains('horizontal')) ? 'horizontal' : 'vertical';\r\n    dropCoords = {};\r\n    var dropDotCoord_0 = dropDotCoord_1 = null;\r\n\r\n    var draggableCubes = document.querySelectorAll('.draggable-cubes');\r\n\r\n\r\n    for (let i = 0; i < draggableCubes.length; i++) {\r\n      if (draggableCubes[i] == dragParent) { continue; }\r\n\r\n      if (snapType == 'vertical') {\r\n        // console.log('vertical snapping')\r\n        dropDotCoord_0 = draggableCubes[i].querySelector('.dot-top').getBoundingClientRect();\r\n        dropDotCoord_1 = draggableCubes[i].querySelector('.dot-bottom').getBoundingClientRect();\r\n      } else {\r\n        // console.log('horizontal snapping')\r\n        dropDotCoord_0 = draggableCubes[i].querySelector('.dot-left').getBoundingClientRect();\r\n        dropDotCoord_1 = draggableCubes[i].querySelector('.dot-right').getBoundingClientRect();\r\n      }\r\n      var id = draggableCubes[i].dataset.id;\r\n\r\n      var dropCoord = {\r\n        0: {\r\n          x: dropDotCoord_0.x,\r\n          y: dropDotCoord_0.y\r\n        },\r\n        1: {\r\n          x: dropDotCoord_1.x,\r\n          y: dropDotCoord_1.y\r\n        }\r\n      }\r\n      dropCoords[id] = dropCoord;\r\n    }\r\n\r\n    dragParentLeft = dragParent.style.left;\r\n    dragParentTop = dragParent.style.top;\r\n  }\r\n  var getShortestDist = function() {\r\n    // console.log('geting shortest dist');\r\n    \r\n    var shortestDist = null;\r\n\r\n    snapInfo = { i: 0, j: 0, id: '' };\r\n\r\n    if (snapType == 'vertical') {\r\n      dropDotCoord_0 = dragParent.querySelector('.dot-top').getBoundingClientRect();\r\n      dropDotCoord_1 = dragParent.querySelector('.dot-bottom').getBoundingClientRect();\r\n    } else {\r\n      dropDotCoord_0 = dragParent.querySelector('.dot-left').getBoundingClientRect();\r\n      dropDotCoord_1 = dragParent.querySelector('.dot-right').getBoundingClientRect();\r\n    }\r\n\r\n    var dragCoord = {\r\n      0: {\r\n        x: dropDotCoord_0.x,\r\n        y: dropDotCoord_0.y\r\n      },\r\n      1: {\r\n        x: dropDotCoord_1.x,\r\n        y: dropDotCoord_1.y\r\n      }\r\n    }\r\n\r\n    // wrt dragParent\r\n    // 0 == top | 1 == bottom\r\n    // 0 == left | 1 == right\r\n    // for(var i = 0; i < 2; i++) { // 0,1 -> snap using BOTH sides (top and botton || left and right)\r\n    // for(var i = 1; i < 2; i++) {  // 1 -> snap using only one side (bottom || right)\r\n    for (var i = 0; i < 1; i++) {  // 0 -> snap using only one side (top || left)\r\n      for (var dropCoord in dropCoords) {\r\n        // if drag is 'top' || 'left compare with 'bottom' || 'right' dots of drop respectivily\r\n        var j = (i == 0) ? 1 : 0;\r\n        if (dropCoords.hasOwnProperty(dropCoord)) {\r\n\r\n          // gettting coordinates to calcualte dist\r\n          var x1 = dragCoord[i].x;\r\n          var y1 = dragCoord[i].y;\r\n          var x2 = dropCoords[dropCoord][j].x;\r\n          var y2 = dropCoords[dropCoord][j].y;\r\n\r\n          // calculating dist btw points\r\n          var x = x1 - x2;\r\n          var y = y1 - y2;\r\n          var d = parseFloat((Math.sqrt(x * x + y * y)).toFixed(2));\r\n\r\n          // if shortest dist is not defined, make it equal to first calculated dist\r\n          if (shortestDist == null || shortestDist > d) {\r\n            shortestDist = d;\r\n            snapInfo = {\r\n              i: (i == 0) ? 0 : 1, // to save if it was top or bottom of dragged element\r\n              j: (j == 0) ? 0 : 1, // to save if it was top or bottom of dropped element\r\n              id: dropCoord // id of element who's j value is saved\r\n            }\r\n\r\n            initCubes.shortestDist = shortestDist;\r\n            dropParent = initElDrag.dropParent = document.querySelector('[data-id=\"' + dropCoord + '\"');\r\n\r\n            // no highlighting if element has already enought cubes in column\r\n            if(snapType == 'vertical') {\r\n              if (dropParent.classList.contains('vertical')) {\r\n                // initCubes.shortestDist = null\r\n              }\r\n            }\r\n            if(snapType == 'horizontal') {\r\n              if (!dragParent.classList.contains('vertical') || !dropParent.classList.contains('vertical')) {\r\n                initCubes.shortestDist = null\r\n              }\r\n            }\r\n          };\r\n        }\r\n      }\r\n    }\r\n  }\r\n  var highlight = function(flag) {\r\n    if (flag) {\r\n      // console.log('highlighting')\r\n      dragParent.classList.add('highlight');\r\n      dropParent.classList.add('highlight');\r\n    } else {\r\n      dragParent.classList.remove('highlight');\r\n      dropParent.classList.remove('highlight');\r\n    }\r\n  }\r\n  var snap = function() {\r\n    // console.log('snapping');\r\n\r\n    var transitionEvent = whichTransitionEvent();\r\n\r\n    cubeLimit = (snapType == \"vertical\") ? row : col;\r\n\r\n    var sealType = dragParent.querySelector('[data-seal-type]').dataset.sealType;\r\n    var src = dragParent.querySelector('img').src;\r\n    var width = dragParent.querySelector('img').width;\r\n    var height = dragParent.querySelector('img').height;\r\n\r\n    if(snapType == \"vertical\") {\r\n      var dropParentCubeCount = dropParent.querySelectorAll('.drag-area').length;\r\n      var dragParentCubeCount = dragParent.querySelectorAll('.drag-area').length;\r\n    } else {\r\n      var dropParentCubeCount = dropParent.querySelectorAll('.cube-outer').length;\r\n      var dragParentCubeCount = dragParent.querySelectorAll('.cube-outer').length;\r\n    }\r\n    var totalCubes = dropParentCubeCount + dragParentCubeCount;\r\n\r\n    // console.log('snapType: ', snapType);\r\n    // console.log('dropParentCubeCount: ', dropParentCubeCount);\r\n    // console.log('dragParentCubeCount: ', dragParentCubeCount);\r\n    // console.log('totalCubes: ', totalCubes);\r\n    // console.log('cubeLimit: ', cubeLimit);\r\n\r\n    // if possible to add more cubes (both vertical and horizontal)\r\n    if (totalCubes <= cubeLimit) {\r\n      // console.log('totalCubes <= cubeLimit');\r\n\r\n      cubeOuter = '';\r\n      if (snapType == \"vertical\") {\r\n        for (var r = 0; r < dragParentCubeCount; r++) {\r\n          cubeOuter += `\r\n            <div class=\"cube-outer drag-area\" data-index=\"${dropParentCubeCount + r}\" data-seal-type=\"${sealType}\">\r\n              <div class=\"cube\"><img src=\"${src}\" style=\"width: ${width}px; height: ${height}px;\"></div>\r\n            </div>        \r\n          `;\r\n        }\r\n        initElDrag.dropParent.innerHTML += cubeOuter;\r\n        dropParent = initElDrag.dropParent;\r\n      } else if (snapType == \"horizontal\") {\r\n        cubeOuter = '';\r\n        for (var c = 0; c < totalCubes; c++) {\r\n          cubeOuter += `<div class=\"cube-outer drag-area\" data-index=\"${c}\" data-seal-type=\"${sealType}\">`;\r\n          for (var r = 0; r < row; r++) {\r\n            cubeOuter += `<div class=\"cube\"><img src=\"${src}\" style=\"width: ${width}px; height: ${height}px;\"></div>`;\r\n          }\r\n          cubeOuter += '</div>';\r\n        }\r\n        cubeOuter += `\r\n          </div>\r\n          <div class=\"dot dot-top\"></div>\r\n          <div class=\"dot dot-bottom\"></div>\r\n          <div class=\"dot dot-left\"></div>\r\n          <div class=\"dot dot-right\"></div>     \r\n        `;        \r\n        initElDrag.dropParent.innerHTML = cubeOuter;  \r\n        dropParent = initElDrag.dropParent;\r\n        initElDrag.init(dropParent, 'add');\r\n      }\r\n      \r\n      if (snapType == \"horizontal\") dropParent.classList.add('horizontal');\r\n\r\n      totalCubes = dropParent.querySelectorAll('.cube-outer').length;\r\n      \r\n      // if vertical limit reached\r\n      if (totalCubes == cubeLimit) {\r\n        // console.log('totalCubes == cubeLimit');\r\n\r\n        if(snapType == \"vertical\") {\r\n          // make vertical complete group (layout needs to update)\r\n          cubeOuter = `<div class=\"cube-outer\">`;\r\n          for(var r = 0; r < row; r++) {\r\n            cubeOuter += `<div class=\"cube drag-area\" data-index=\"${r}\" data-seal-type=\"${sealType}\"><img src=\"${src}\" style=\"width: ${width}px; height: ${height}px;\"></div>`;\r\n          }\r\n          cubeOuter += `\r\n            </div>\r\n            <div class=\"dot dot-top\"></div>\r\n            <div class=\"dot dot-bottom\"></div>\r\n            <div class=\"dot dot-left\"></div>\r\n            <div class=\"dot dot-right\"></div>     \r\n          `;\r\n\r\n          initElDrag.dropParent.innerHTML = cubeOuter;\r\n          dropParent = initElDrag.dropParent;\r\n          dropParent.classList.add('vertical');\r\n        } else if(snapType == \"horizontal\") {\r\n          dropParent = initElDrag.dropParent;\r\n        }\r\n        \r\n        console.log('limit reached!!!!!!!!!!');\r\n      }\r\n      // console.log(dropParent);\r\n      initElDrag.init(dropParent, 'add');\r\n      dragParent.remove();\r\n    } else if(totalCubes > cubeLimit) {\r\n      // console.log('totalCubes > cubeLimit');\r\n\r\n      var canBeAddedCubes = cubeLimit - dropParentCubeCount;\r\n      var remainingCubes = dragParentCubeCount - canBeAddedCubes;\r\n\r\n      if(snapType == \"vertical\") {\r\n        // make vertical complete group (layout needs to update)\r\n        cubeOuter = `<div class=\"cube-outer\">`;\r\n        for(var r = 0; r < row; r++) {\r\n          cubeOuter += `<div class=\"cube drag-area\" data-index=\"${r}\" data-seal-type=\"${sealType}\"><img src=\"${src}\" style=\"width: ${width}px; height: ${height}px;\"></div>`;\r\n        }\r\n        cubeOuter += `\r\n          </div>\r\n          <div class=\"dot dot-top\"></div>\r\n          <div class=\"dot dot-bottom\"></div>\r\n          <div class=\"dot dot-left\"></div>\r\n          <div class=\"dot dot-right\"></div>     \r\n        `;\r\n        \r\n        initElDrag.dropParent.innerHTML = cubeOuter;\r\n        dropParent = initElDrag.dropParent;\r\n        dropParent.classList.add('vertical');\r\n\r\n        // remove cubes from dragParent\r\n        for (var i = 0; i < canBeAddedCubes; i++) {\r\n          dragParent.querySelector('[data-index=\"' + (dragParentCubeCount - 1 - i) + '\"].cube-outer').remove();\r\n        }\r\n\r\n      } else if(snapType == \"horizontal\") {\r\n        // make horizontal complete group \r\n        cubeOuter = \"\";\r\n        for (var c = 0; c < canBeAddedCubes; c++) {\r\n          cubeOuter += `<div class=\"cube-outer drag-area\" data-index=\"${dropParentCubeCount + c}\" data-seal-type=\"${sealType}\">`;\r\n          for (var r = 0; r < row; r++) {\r\n            cubeOuter += `<div class=\"cube\"><img src=\"${src}\" style=\"width: ${width}px; height: ${height}px;\"></div>`;\r\n          }\r\n          cubeOuter += '</div>';\r\n        }\r\n        initElDrag.dropParent.innerHTML += cubeOuter;\r\n        dropParent = initElDrag.dropParent;\r\n        // dropParent.classList.remove('vertical');\r\n\r\n        if(remainingCubes == 1) {\r\n          cubeOuter = `<div class=\"cube-outer\">`;\r\n          for (var r = 0; r < row; r++) {\r\n            cubeOuter += `<div class=\"cube drag-area\" data-index=\"${r}\" data-seal-type=\"${sealType}\"><img src=\"${src}\" style=\"width: ${width}px; height: ${height}px;\"></div>\r\n          `;\r\n          }\r\n          cubeOuter += `\r\n            </div> \r\n            <div class=\"dot dot-top\"></div>\r\n            <div class=\"dot dot-bottom\"></div>\r\n            <div class=\"dot dot-left\"></div>\r\n            <div class=\"dot dot-right\"></div>     \r\n          `;   \r\n  \r\n          initElDrag.dragParent.innerHTML = cubeOuter;\r\n          dragParent = initElDrag.dragParent;\r\n          initElDrag.init(dragParent, 'add');        \r\n          dragParent.classList.remove('horizontal');\r\n        } else {\r\n          // remove cubes from dragParent\r\n          for (var i = 0; i < canBeAddedCubes; i++) {\r\n            dragParent.querySelector('[data-index=\"' + (dragParentCubeCount - 1 - i) + '\"].cube-outer').remove();\r\n          }\r\n        }\r\n      }\r\n      \r\n      initElDrag.init(dropParent, 'add');\r\n\r\n      \r\n      dragParent.style.left = dragParentLeft;\r\n      dragParent.style.top = dragParentTop;\r\n      initElDrag.init(dragParent, 'add');\r\n      dragParent.classList.add('cant-snap');\r\n\r\n      console.log('limit reached!!!!!!!!!!');\r\n    }\r\n\r\n    dragParent.addEventListener(transitionEvent, transitionEndCallback);\r\n    function transitionEndCallback() {\r\n      dragParent.removeEventListener(transitionEvent, transitionEndCallback);\r\n      dragParent.classList.remove('cant-snap');\r\n    }\r\n    dragParent.classList.remove('highlight');\r\n    dropParent.classList.remove('highlight');\r\n  }\r\n  var detach = function(e) {\r\n    // console.log('detaching');\r\n\r\n    if (detachType == 'vertical') {  // vertical detach\r\n      var target = e.target;\r\n\r\n      var index = parseInt(target.dataset.index);\r\n      var totalCubes = dragParent.querySelectorAll('.drag-area').length;\r\n      var detachCubes = totalCubes - index;   \r\n\r\n      var sealType = dragParent.querySelector('[data-seal-type]').dataset.sealType;\r\n      var src = dragParent.querySelector('img').src;\r\n      var width = dragParent.querySelector('img').width;\r\n      var height = dragParent.querySelector('img').height;\r\n\r\n      dragParentLeft = dragParent.style.left;\r\n      dragParentTop = dragParent.style.top;\r\n\r\n      // console.log('target: ', target);\r\n      // console.log('index: ', index);\r\n      // console.log('detachCubes: ', detachCubes);\r\n      // console.log('totalCubes: ', totalCubes);\r\n\r\n      if (totalCubes == 1 && !dragParent.classList.contains('vertical')) {\r\n        dragParent.remove();\r\n      } else if(index) {\r\n        // top\r\n        if(!dragParent.classList.contains('vertical')) { // detaching vertical group when INCOMPLETE\r\n          for (var r = index; r < totalCubes; r++) {\r\n            dragParent.querySelector('[data-index=\"' + r + '\"]').remove();\r\n          }\r\n        } else { // detaching vertical group when COMPLETE\r\n          cubeOuter = '';\r\n          for (var r = 0; r < index; r++) {\r\n            cubeOuter += `\r\n              <div class=\"cube-outer drag-area\" data-index=\"${r}\" data-seal-type=\"${sealType}\">\r\n                <div class=\"cube\"><img src=\"${src}\" style=\"width: ${width}px; height: ${height}px;\"></div>\r\n              </div>        \r\n            `;\r\n          }\r\n          cubeOuter += `\r\n            <div class=\"dot dot-top\"></div>\r\n            <div class=\"dot dot-bottom\"></div>\r\n            <div class=\"dot dot-left\"></div>\r\n            <div class=\"dot dot-right\"></div>     \r\n          `;   \r\n          initElDrag.dragParent.innerHTML = cubeOuter;\r\n          dragParent = initElDrag.dragParent;          \r\n          dragParent.classList.remove('vertical');\r\n\r\n          initElDrag.init(dragParent, 'add');\r\n          dragParent.addEventListener('dblclick', detach, false);\r\n        }\r\n\r\n        var left = parseFloat(dragParentLeft);\r\n        var top = parseFloat(dragParentTop) + dragParent.getBoundingClientRect().height + 30;\r\n        // bottom\r\n        var draggable = document.createElement('div');\r\n        draggable.classList.add('draggable-cubes');\r\n        draggable.classList.add('draggable');\r\n        draggable.setAttribute('data-id', ++initSealsDrag.draggablesId);\r\n        draggable.style.left = left + 'px';\r\n        draggable.style.top = top + 'px';\r\n        draggable.style.zIndex = ++initElDrag.dragParentzIndex;\r\n  \r\n        cubeOuter = '';\r\n        for (var r = 0; r < detachCubes; r++) {\r\n          cubeOuter += `\r\n          <div class=\"cube-outer drag-area\" data-index=\"${r}\" data-seal-type=\"${sealType}\">\r\n            <div class=\"cube\"><img src=\"${src}\" style=\"width: ${width}px; height: ${height}px;\"></div>\r\n          </div>        \r\n        `;\r\n        }\r\n        cubeOuter += `\r\n          <div class=\"dot dot-top\"></div>\r\n          <div class=\"dot dot-bottom\"></div>\r\n          <div class=\"dot dot-left\"></div>\r\n          <div class=\"dot dot-right\"></div>     \r\n        `;          \r\n  \r\n        draggable.innerHTML = cubeOuter;\r\n        cvOuter.appendChild(draggable);\r\n  \r\n        initElDrag.init(draggable, 'add');\r\n        draggable.addEventListener('dblclick', detach, false);\r\n      } else {\r\n        console.warn(\"Can't remove from here!\");\r\n      }\r\n    } else { // horizontal detach\r\n      var target = e.target;\r\n\r\n      var index = parseInt(target.dataset.index);\r\n      var totalCubes = dragParent.querySelectorAll('.drag-area').length;\r\n      var detachCubes = totalCubes - index;   \r\n\r\n      var sealType = dragParent.querySelector('[data-seal-type]').dataset.sealType;\r\n      var src = dragParent.querySelector('img').src;\r\n      var width = dragParent.querySelector('img').width;\r\n      var height = dragParent.querySelector('img').height;\r\n\r\n      dragParentLeft = dragParent.style.left;\r\n      dragParentTop = dragParent.style.top;\r\n\r\n      // console.log('target: ', target);\r\n      // console.log('index: ', index); // 1\r\n      // console.log('detachCubes: ', detachCubes); // 2\r\n      // console.log('totalCubes: ', totalCubes); // 3\r\n\r\n      if(index) {\r\n        // left\r\n        if(index == 1) {\r\n          cubeOuter = `<div class=\"cube-outer\">`;\r\n          for (var r = 0; r < row; r++) {\r\n            cubeOuter += `<div class=\"cube drag-area\" data-index=\"${r}\" data-seal-type=\"${sealType}\"><img src=\"${src}\" style=\"width: ${width}px; height: ${height}px;\"></div>\r\n          `;\r\n          }\r\n          cubeOuter += `\r\n            </div> \r\n            <div class=\"dot dot-top\"></div>\r\n            <div class=\"dot dot-bottom\"></div>\r\n            <div class=\"dot dot-left\"></div>\r\n            <div class=\"dot dot-right\"></div>     \r\n          `;   \r\n\r\n          initElDrag.dragParent.innerHTML = cubeOuter;\r\n          dragParent = initElDrag.dragParent;\r\n          initElDrag.init(dragParent, 'add');\r\n          dragParent.classList.remove('horizontal');\r\n        } else {\r\n          for (var r = index; r < totalCubes; r++) {\r\n            dragParent.querySelector('[data-index=\"' + r + '\"]').remove();\r\n          }\r\n        }\r\n\r\n        var left = parseFloat(dragParentLeft) + dragParent.getBoundingClientRect().width + 30;\r\n        var top = parseFloat(dragParentTop);\r\n\r\n        // right\r\n        var draggable = document.createElement('div');\r\n        draggable.classList.add('draggable-cubes');\r\n        draggable.classList.add('draggable');\r\n        draggable.setAttribute('data-id', ++initSealsDrag.draggablesId);\r\n        draggable.style.left = left + 'px';\r\n        draggable.style.top = top + 'px';\r\n        draggable.style.zIndex = ++initElDrag.dragParentzIndex;\r\n  \r\n        if(detachCubes == 1) { // detach partion is only 1\r\n          cubeOuter = `<div class=\"cube-outer\">`;\r\n          for (var r = 0; r < row; r++) {\r\n            cubeOuter += `<div class=\"cube drag-area\" data-index=\"${r}\" data-seal-type=\"${sealType}\"><img src=\"${src}\" style=\"width: ${width}px; height: ${height}px;\"></div>\r\n          `;\r\n          }\r\n          cubeOuter += `\r\n            </div> \r\n            <div class=\"dot dot-top\"></div>\r\n            <div class=\"dot dot-bottom\"></div>\r\n            <div class=\"dot dot-left\"></div>\r\n            <div class=\"dot dot-right\"></div>     \r\n          `;    \r\n                \r\n        } else { // detach partion - more than 1\r\n          cubeOuter = '';\r\n          for(var c = 0; c < detachCubes; c++) {\r\n            cubeOuter += `<div class=\"cube-outer drag-area\" data-index=\"${c}\" data-seal-type=\"${sealType}\">`;\r\n            for (var r = 0; r < row; r++) {\r\n              cubeOuter += `<div class=\"cube\"><img src=\"${src}\" style=\"width: ${width}px; height: ${height}px;\"></div>`;\r\n            }\r\n            cubeOuter += `</div>`;\r\n          }\r\n          cubeOuter += `\r\n            <div class=\"dot dot-top\"></div>\r\n            <div class=\"dot dot-bottom\"></div>\r\n            <div class=\"dot dot-left\"></div>\r\n            <div class=\"dot dot-right\"></div>     \r\n          `;          \r\n          draggable.classList.add('horizontal');\r\n        }\r\n\r\n        initElDrag.dropParent = draggable;\r\n        // dropParent = initElDrag.dropParent;\r\n\r\n        draggable.classList.add('vertical');\r\n        draggable.innerHTML = cubeOuter;\r\n        cvOuter.appendChild(draggable);\r\n  \r\n        initElDrag.init(draggable, 'add');\r\n        draggable.addEventListener('dblclick', detach, false);\r\n      } else {\r\n        console.warn(\"Can't remove from here!\");\r\n      }      \r\n    }\r\n  }\r\n\r\n  return {\r\n    isSnapping: isSnapping,\r\n    snapDist: snapDist,\r\n    shortestDist: shortestDist,\r\n    getCoords: getCoords,\r\n    getShortestDist: getShortestDist,\r\n    highlight: highlight,\r\n    snap, snap,\r\n    detach, detach\r\n  }\r\n})();"],"file":"script.min.js"}