{"version":3,"sources":["script.js"],"names":["cv","document","getElementById","cvOuter","mousedown","mousemove","whichTransitionEvent","t","el","createElement","transitions","transition","OTransition","MozTransition","WebkitTransition","undefined","style","Object","size","obj","key","hasOwnProperty","initTools","toolsUniverse","toolsPlanets","querySelectorAll","toolsPlanetSets","toolsPlanetPens","minimizeToggleBtn","offsetWidth","toolsPlanetSetsBtn","toolsPlanetPensBtn","currToolType","currSetType","forEach","toolsPlanet","toolsSatellites","id","toolsSatellitesWidth","querySelector","toolsPlanetWidth","totalOffset","length","toolsSatellite","i","n","x","Math","round","cos","PI","y","sin","left","top","classList","contains","toolGroupType","dataset","rotation","radius","toString","add","updateToolType1","target","oldToolBtn","remove","removeEventListener","initDraw","start","toolType1","addEventListener","updateToolType2","strokeColor","value","updateToolsGroup","isPrimary","isSecondary","parent","substr","setAttribute","scaleSecActiveBtns","strokeOpacity","parseFloat","strokeWidth","src","getAttribute","e","toolType2","ispanelBtn","panelBtn","undo","redo","clear","initPanel","toggle","startPoint","polylineTag","arcTag","points","m","strokeOpacityEl","strokeWidthEl","currId","index","currPoint","undoStack","redoStack","inRangeObj","inStartedInRange","pointsObj","targetPoint","arc","center","point","dotRadius","end","push","Elements","Id","Action","draw","preventDefault","math","getMousePosition","sideAndRange","inRange","getCoords","side","polylineInArc","getSetPoints","ele","lastAction","pop","parentNode","removeChild","appendChild","shape","clearedEles","innerHTML","strokeColorPen","strokeWidthPen","strokeWidthMarker","slope","console","log","sqrt","parseToFloat","initMove","startX","startY","endX","endY","dragParent","dropParent","oldDragParent","init","draggable","listener","dragAreas","dragArea","closest","zIndex","dragParentzIndex","panelSet","panel","initCubes","move","initDrag","sealType","trashPanel","offsetLeft","offsetBottom","getBoundingClientRect","height","offsetTop","bottom","getShortestDist","shortestDist","snapDist","highlight","snap","dragEloffsetX","dragEloffsetY","enter","leave","over","drop","dataTransfer","getData","width","numberDesign","numberValue","totalSealsAllowed","sealTypes","detachUI","draggablesId","offsetX","offsetY","dropElHeight","alert","setData","fetchSeals","sealPanelContent","values","type","numType","numValue","oldPanel","panelType","panelPosObj","panelCloseBtn","panelScaleFlipBtn","panelScaleBtn","draggableSeals","rotateBtns","close","this","panelFlipBtn","getElementsByClassName","initRotate","initScale","flip","scaleFlip","buttons","initCalc","calculate","bringInFront","secActiveBtns","panelGroupBtn","mode","mousePosObj","panelPos","x1","x2","y1","y2","dropCoords","row","col","dragParentLeft","dragParentTop","snapType","cubeLimit","cubeOuter","detachType","transitionEvent","dropParentCubeCount","dragParentCubeCount","totalCubes","r","c","canBeAddedCubes","remainingCubes","transitionEndCallback","cubeHeight","cubesToDetach","isSnapping","dropDotCoord_0","dropDotCoord_1","draggableCubes","dropCoord","0","1","j","dragCoord","d","toFixed","flag","startAngle","rotateBtn","rotatable","oldToolType","refPoint","R2D","onmousemove","rotate","clientX","clientY","floor","atan2","transform","refEl","refObj","angleHand","angle","angleCompass","w","h","ratio","scale","num","result","buttonType","buttonValue","eval","slice","initAbacus","window","onload","body","upper_part","a","evt","background","pos","bind","event","lower_part","column_id","boxes","till","state","getElPosition","right","getSlope","line","p2","p1","calculatePerpendicularDistFromLine","Infinity","abs","number","decimal","touches","perpendicularDist","lines","pointsLength","getLines","check12","l12","check34","l34","check23","l23","check41","l41","d23","d41","nearestLine","d12","d34","pointsEl","canvasPosition","pointObj","cvLeft","cvTop","pointLeft","pointTop","pointWidth","pointHeight","s","click"],"mappings":"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","sourcesContent":["/*******************************/\r\n//     HTML elements\r\n/*******************************/\r\nvar cv = document.getElementById('cv');\r\nvar cvOuter = document.getElementById('cvOuter');\r\nvar mousedown = mousemove = false;\r\n\r\n/*******************************/\r\n//     functions - helping\r\n/*******************************/\r\n// returns object length\r\nObject.size = function (obj) {\r\n  var size = 0, key;\r\n  for (key in obj) {\r\n    if (obj.hasOwnProperty(key)) size++;\r\n  }\r\n  return size;\r\n};\r\n\r\nfunction whichTransitionEvent() {\r\n  var t,\r\n    el = document.createElement(\"fakeelement\");\r\n\r\n  var transitions = {\r\n    \"transition\": \"transitionend\",\r\n    \"OTransition\": \"oTransitionEnd\",\r\n    \"MozTransition\": \"transitionend\",\r\n    \"WebkitTransition\": \"webkitTransitionEnd\"\r\n  }\r\n\r\n  for (t in transitions) {\r\n    if (el.style[t] !== undefined) {\r\n      return transitions[t];\r\n    }\r\n  }\r\n}\r\n\r\n/*******************************/\r\n//     functions - specific\r\n/*******************************/\r\n// init tools satellite UI and and tool events\r\nvar initTools = (function () {\r\n  // console.log('init')\r\n  var toolsUniverse = document.getElementById('toolsUniverse');\r\n  var toolsPlanets = toolsUniverse.querySelectorAll('.tools-planet');\r\n  var toolsPlanetSets = document.getElementById('toolsPlanetSets');\r\n  var toolsPlanetPens = document.getElementById('toolsPlanetPens');\r\n  var toolsUniverseWidth = toolsUniverse.offsetWidth;\r\n\r\n  var minimizeToggleBtn = document.getElementById('minimizeToggleBtn');\r\n  var toolsPlanetSetsBtn = document.getElementById('toolsPlanetSetsBtn');\r\n  var toolsPlanetPensBtn = document.getElementById('toolsPlanetPensBtn');\r\n\r\n  var currToolType = currSetType = null;\r\n\r\n  // draw satellite circles\r\n  toolsPlanets.forEach(function (toolsPlanet) {\r\n    var toolsSatellites = toolsPlanet.querySelectorAll('#' + toolsPlanet.id + '>.tools-satellite.primary');\r\n    var toolsSatellitesWidth = toolsPlanet.querySelector('.tools-satellite:first-child').offsetWidth;\r\n    var toolsPlanetWidth = toolsPlanet.offsetWidth;\r\n    var totaltoolsSatellites = toolsSatellites.length;\r\n    // var rotation = 360 / totaltoolsSatellites;\r\n    var rotation = 30;\r\n    // var radius = (toolsUniverseWidth - toolsSatellitesWidth) / 2;\r\n    var radius = 110;\r\n    var totalOffset = (toolsPlanetWidth - toolsSatellitesWidth) / 2;\r\n    // var totalOffset = 60;\r\n\r\n    toolsSatellites.forEach(function (toolsSatellite, i) { // place primary tools\r\n      var n = i - 3; // to start from top side instead of rigth side\r\n      var x = Math.round(Math.cos((rotation * n) * (Math.PI / 180)) * radius);\r\n      var y = Math.round(Math.sin((rotation * n) * (Math.PI / 180)) * radius);\r\n      var left = Math.round(x + totalOffset);\r\n      var top = Math.round(y + totalOffset);\r\n      toolsSatellite.style.left = left + \"px\";\r\n      toolsSatellite.style.top = top + \"px\";\r\n\r\n      if (toolsSatellite.classList.contains('has-child')) { // place secondary tools if any\r\n        let toolGroupType = toolsSatellite.dataset.toolGroupType;\r\n        let toolsSatellites = toolsPlanet.querySelectorAll('[data-tool-group-type=\"' + toolGroupType + '\"].secondary');\r\n        let rotation = 19;\r\n        let radius = 165;\r\n\r\n        toolsSatellites.forEach(function (toolsSatellite, i) {\r\n          let n = i - 4.5;\r\n\r\n          switch (toolGroupType) {\r\n            case \"pastel1\": n = i + .7;\r\n              break;\r\n            case \"pastel2\": n = i + 2.2;\r\n              break;\r\n            case \"stroke\": n = i + 3.8;\r\n              break;\r\n            case \"opacity\": n = i + 5.2;\r\n              break;\r\n            case \"scale\": n = i - 4.5;\r\n              break;\r\n            case \"set-square\": n = i - 2.2;\r\n              break;\r\n          }\r\n\r\n          let y = Math.sin((rotation * n) * (Math.PI / 180)) * radius;\r\n          let x = Math.cos((rotation * n) * (Math.PI / 180)) * radius;\r\n          toolsSatellite.style.top = (y + totalOffset).toString() + \"px\";\r\n          toolsSatellite.style.left = (x + totalOffset).toString() + \"px\";\r\n        })\r\n      }\r\n    });\r\n  });\r\n  // add 'active' class to one of the 'tools-planet'\r\n  toolsPlanetSets.classList.add('active');\r\n  toolsPlanetSetsBtn.classList.add('active');\r\n  toolsPlanetSetsBtn.classList.add('temp-active');\r\n\r\n  var clickHandler = function (e) {\r\n    // console.log(e.target.dataset);\r\n\r\n    var target = e.target;\r\n    var id = target.id;\r\n    var toolType1 = target.dataset.toolType1; // pen, marker, eraser\r\n    var toolType2 = target.dataset.toolType2; // pastels 1-4\r\n    var toolGroupType = target.dataset.toolGroupType;\r\n    var isPrimary = target.classList.contains('primary');\r\n    var isSecondary = target.classList.contains('secondary');\r\n    var ispanelBtn = target.dataset.panelBtn;\r\n\r\n    if (id == \"minimizeToggleBtn\") {\r\n      if (document.querySelector('.tools-planet.active')) {\r\n        minimizeToggleBtn.classList.add('active');\r\n        toolsUniverse.classList.remove('active');\r\n        toolsPlanetSetsBtn.classList.remove('active');\r\n        toolsPlanetPensBtn.classList.remove('active');\r\n        document.querySelector('.tools-planet.active').classList.add('temp-active');\r\n        document.querySelector('.tools-planet.active').classList.remove('active');\r\n      } else {\r\n        toolsUniverse.classList.add('active');\r\n        minimizeToggleBtn.classList.remove('active');\r\n        document.querySelector('.tools-toggle .temp-active').classList.add('active');\r\n        document.querySelector('.tools-planet.temp-active').classList.add('active');\r\n        document.querySelector('.tools-planet.temp-active').classList.remove('temp-active');\r\n      }\r\n    } else if (id == \"toolsPlanetPensBtn\") {\r\n      toolsPlanetSetsBtn.classList.remove('active');\r\n      toolsPlanetSetsBtn.classList.remove('temp-active');\r\n      toolsPlanetSets.classList.remove('active');\r\n\r\n      toolsPlanetPensBtn.classList.add('active');\r\n      toolsPlanetPensBtn.classList.add('temp-active');\r\n      toolsPlanetPens.classList.add('active');\r\n      toolsUniverse.classList.add('active');\r\n\r\n      minimizeToggleBtn.classList.remove('active');\r\n    } else if (id == \"toolsPlanetSetsBtn\") {\r\n      toolsPlanetPensBtn.classList.remove('active');\r\n      toolsPlanetPensBtn.classList.remove('temp-active');\r\n      toolsPlanetPens.classList.remove('active');\r\n\r\n      toolsPlanetSetsBtn.classList.add('active');\r\n      toolsPlanetSetsBtn.classList.add('temp-active');\r\n      toolsPlanetSets.classList.add('active');\r\n      toolsUniverse.classList.add('active');\r\n\r\n      minimizeToggleBtn.classList.remove('active');\r\n    } else if (id == 'undo') {\r\n      initDraw.undo();\r\n    } else if (id == 'redo') {\r\n      initDraw.redo();\r\n    } else if (id == 'clear') {\r\n      initDraw.clear();\r\n    } else if (toolType1) {\r\n      updateToolType1(target);\r\n    } else if (toolType2) {\r\n      updateToolType2(target);\r\n    } else if (ispanelBtn) {\r\n      initPanel.toggle(target);\r\n    }\r\n    if (toolGroupType) {\r\n      updateToolsGroup(toolGroupType, target, isPrimary, isSecondary);\r\n    }\r\n  }\r\n\r\n  // // pen, marker, eraser\r\n  var updateToolType1 = function (target) {\r\n    // console.log('updateToolType1');\r\n\r\n    // remove 'active' class from previous 'active' button\r\n    // and make 'currToolType' null\r\n    var oldToolBtn = document.querySelector('#toolsPlanetPens [data-tool-type1].active');\r\n    if (oldToolBtn) {\r\n      oldToolBtn.classList.remove('active');\r\n      initTools.currToolType = null;\r\n      cv.removeEventListener('mousedown', initDraw.start, false);\r\n    }\r\n    // add 'active' class to current 'clicked' button if it is not the 'active' button already\r\n    // and update 'currToolType' value\r\n    if (oldToolBtn != target) {\r\n      target.classList.add('active');\r\n      initTools.currToolType = target.dataset.toolType1;\r\n      cv.addEventListener('mousedown', initDraw.start, false);\r\n    }\r\n  }\r\n\r\n  // four pastels buttons\r\n  var updateToolType2 = function (target) {\r\n    // console.log('updateToolType2')\r\n\r\n    // remove 'active' class from previous 'active' button\r\n    var oldToolBtn = document.querySelector('#toolsPlanetPens [data-tool-type2].active');\r\n    if (oldToolBtn && oldToolBtn != target) {\r\n      oldToolBtn.classList.remove('active');\r\n      target.classList.add('active');\r\n    }\r\n\r\n    initDraw.strokeColor = target.dataset.value;\r\n  }\r\n\r\n  // handling of satellite buttons which has childrens\r\n  var updateToolsGroup = function (toolGroupType, target, isPrimary, isSecondary) {\r\n    // console.log('updateToolsGroup');\r\n    \r\n    if (isPrimary) {\r\n      // console.log('isPrimary')\r\n      \r\n      // remove 'show-child' class if present\r\n      if (target.classList.contains('show-child')) {\r\n        target.classList.remove('show-child')\r\n      } else { // add 'show-child' on clicked element before that remove from other element if present\r\n        if (document.querySelector('.has-child.show-child')) {\r\n          document.querySelector('.has-child.show-child').classList.remove('show-child');\r\n        }\r\n        target.classList.add('show-child');\r\n      }\r\n    } else if (isSecondary) {\r\n      // console.log('isSecondary');\r\n\r\n      var parent = document.querySelector('[data-tool-group-type=\"' + toolGroupType + '\"].primary');\r\n      var oldToolBtn = document.querySelector('[data-tool-group-type=\"' + toolGroupType + '\"].secondary.active');\r\n\r\n      // make pastel group behave like first two pastel buttons\r\n      if (toolGroupType.substr(0, 6) == 'pastel') {\r\n        document.querySelector('[data-tool-type2].primary.active').classList.remove('active');\r\n        parent.setAttribute('data-tool-type2', 'pastel');\r\n        toolGroupType = \"pastel\";\r\n      }\r\n\r\n      if (toolGroupType == \"scale\" || toolGroupType == \"set-square\") {\r\n        oldToolBtn = null;\r\n      }\r\n\r\n      // remove 'active' class from old child having 'active' class\r\n      if (oldToolBtn) {\r\n        oldToolBtn.classList.remove('active');\r\n      }\r\n\r\n      if (toolGroupType == 'scale' || toolGroupType == 'set-square') {\r\n        if(toolGroupType == 'scale') {\r\n          var scaleSecActiveBtns = document.querySelectorAll('[data-tool-group-type=\"scale\"].secondary.active');\r\n        } else if (toolGroupType == \"set-square\") {\r\n          var scaleSecActiveBtns = document.querySelectorAll('[data-tool-group-type=\"set-square\"].secondary.active');\r\n        }\r\n        if(scaleSecActiveBtns.length > 0) {\r\n          parent.classList.add('active');\r\n        } else {\r\n          parent.classList.remove('active');\r\n        }\r\n      } else {\r\n        target.classList.add('active');\r\n        parent.classList.add('active');\r\n      }\r\n      parent.classList.remove('show-child');\r\n\r\n\r\n      switch (toolGroupType) {\r\n        case \"opacity\": initDraw.strokeOpacity = parseFloat(target.dataset.value);\r\n          break;\r\n        case \"stroke\": initDraw.strokeWidth = parseFloat(target.dataset.value);\r\n          break;\r\n        case \"pastel\":\r\n          var src = target.querySelector('img').getAttribute('src');\r\n          parent.querySelector('img').setAttribute('src', src);\r\n          parent.setAttribute('data-value', target.dataset.value)\r\n          initDraw.strokeColor = target.dataset.value;\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  // click listener on tools\r\n  toolsUniverse.addEventListener('click', clickHandler, false);\r\n\r\n  return {\r\n    currToolType: currToolType,\r\n    currSetType: currSetType\r\n  }\r\n})();\r\n\r\n// draw, undo, redo, clear functions\r\nvar initDraw = (function () {\r\n  // console.log('initDraw');\r\n\r\n  // initial stroke properties from HTML elements\r\n  var strokeOpacityEl = document.querySelector('[data-tool-group-type=\"opacity\"].secondary.active');\r\n  var strokeOpacity = parseFloat(strokeOpacityEl.dataset.value);\r\n\r\n  var strokeWidthEl = document.querySelector('[data-tool-group-type=\"stroke\"].secondary.active');\r\n  var strokeWidth = parseFloat(strokeWidthEl.dataset.value);\r\n  // var strokeWidth = 50;\r\n\r\n  var strokeColorEl = document.querySelector('[data-tool-type2=\"pastel\"].primary.active');\r\n  var strokeColor = strokeColorEl.dataset.value;\r\n\r\n  var currId = null;\r\n  var index = 0;\r\n  var startPoint;\r\n  var currPoint = null;\r\n  var undoStack = [];\r\n  var redoStack = [];\r\n  var inRangeObj = false;\r\n  var inStartedInRange = false;\r\n  var pointsObj = null;\r\n  var currToolType, currSetType = null;\r\n  var polylineTag, arcTag, points;\r\n  var m;\r\n  var targetPoint = null;\r\n  var arc = {\r\n    'radius': 0,\r\n    'center': { // center point of arc\r\n      'x': 0,\r\n      'y': 0\r\n    },\r\n    'point': { // any x,y point on arc\r\n      'x': 0,\r\n      'y': 0\r\n    },\r\n    'dotRadius': 5\r\n  }\r\n\r\n\r\n  // Undo last action\r\n  var Undo = function () {\r\n    // console.log('undo');\r\n    if (undoStack.length > 0) {\r\n      var lastAction = undoStack.pop();\r\n      var ele, clearedEles;\r\n      switch (lastAction.Action) {\r\n        case 'draw':\r\n          ele = document.getElementById(lastAction.Id);\r\n          lastAction.Elements.push(ele);\r\n          ele.parentNode.removeChild(ele);\r\n          break;\r\n        case 'erase':\r\n          cv.appendChild(lastAction.Elements[0]);\r\n          break;\r\n        case 'clear':\r\n          clearedEles = lastAction.Elements;\r\n          clearedEles.forEach(function (shape) {\r\n            cv.appendChild(shape);\r\n            index++;\r\n          });\r\n          break;\r\n      }\r\n      redoStack.push(lastAction);\r\n    }\r\n  }\r\n\r\n  // Redo last undoed action \r\n  var Redo = function () {\r\n    // console.log('redo');\r\n    if (redoStack.length > 0) {\r\n      var lastAction = redoStack.pop();\r\n      var ele;\r\n      switch (lastAction.Action) {\r\n        case 'draw':\r\n          ele = lastAction.Elements[0];\r\n          cv.appendChild(ele);\r\n          break;\r\n        case 'erase':\r\n          ele = lastAction.Elements[0];\r\n          ele.parentNode.removeChild(ele);\r\n          break;\r\n        case 'clear':\r\n          lastAction.Elements.forEach(function (ele) {\r\n            ele.parentNode.removeChild(ele);\r\n          });\r\n          break;\r\n      }\r\n      undoStack.push(lastAction);\r\n    }\r\n  }\r\n\r\n  // clears everything\r\n  var Clear = function () {\r\n    // console.log('clear')\r\n    index = 0;\r\n    var clearedEles = document.querySelectorAll('.drawing');\r\n    redoStack = [];\r\n    undoStack.push({\r\n      Elements: clearedEles,\r\n      Id: null,\r\n      Action: 'clear'\r\n    });\r\n    cv.innerHTML = \"\";\r\n  }\r\n\r\n  // start drawing or erasing\r\n  var start = function (e) {\r\n    // console.log('start')\r\n    e.preventDefault();\r\n\r\n    var strokeOpacity = initDraw.strokeOpacity;\r\n\r\n    var strokeColorPen = initDraw.strokeColor;\r\n    var strokeWidthPen = initDraw.strokeWidth;\r\n\r\n    var strokeColorMarker = 'rgba(0, 255, 0, .5)';\r\n    var strokeWidthMarker = initDraw.strokeWidth + 10;\r\n\r\n    currPoint = math.getMousePosition(e, cv);\r\n    currId = 'shape' + index;\r\n    currToolType = initTools.currToolType;\r\n    currSetType = initTools.currSetType;\r\n    startPoint = currPoint;\r\n\r\n    if(currSetType.substr(0,5) == \"scale\") {\r\n      pointsObj = math.getSetPoints(initTools.currSetType);\r\n  \r\n      // check if drawing point is inRange with currentSetType\r\n      inRangeObj = math.sideAndRange(currPoint);\r\n      inStartedInRange = inRangeObj.inRange;\r\n      m = inRangeObj.slope;\r\n      console.log(inRangeObj)\r\n\r\n      // update starting coordinates of drawing if set is in range\r\n      if(inStartedInRange) {\r\n        targetPoint = math.getCoords(pointsObj, inRangeObj.side, currPoint, m);\r\n        currPoint.x = targetPoint.x;\r\n        currPoint.y = targetPoint.y;\r\n      }\r\n    }\r\n\r\n    if(currSetType == 'compass' && currToolType == \"arc\") {\r\n      pointsObj = math.getSetPoints(initTools.currSetType);\r\n  \r\n      arc.center.x = pointsObj[1].x;\r\n      arc.center.y = pointsObj[1].y;\r\n      arc.point.x = pointsObj[2].x;\r\n      arc.point.y = pointsObj[2].y;\r\n\r\n      arc.radius = Math.sqrt((pointsObj[2].x - pointsObj[1].x) * (pointsObj[2].x - pointsObj[1].x) + (pointsObj[2].y - pointsObj[1].y) * (pointsObj[2].y - pointsObj[1].y));\r\n      arc.radius = math.parseToFloat(arc.radius, 2);\r\n\r\n      arcTag = `<g id=\"${currId}\">\r\n        <ellipse style=\"fill:${strokeColorPen};stroke-width:0;stroke:none;\" cx=\"${arc.center.x}px\" cy=\"${arc.center.y}px\" rx=\"${arc.dotRadius}px\" ry=\"${arc.dotRadius}px\"></ellipse>\r\n        <polyline class=\"drawing\" style=\"fill:none;stroke-linecap:round;stroke:${strokeColorPen};stroke-width:3\" points=\"${arc.point.x},${arc.point.y} \"></polyline>\r\n      </g>`;\r\n      cv.innerHTML += arcTag;\r\n    }\r\n\r\n    if (currToolType == \"pen\" || currToolType == \"marker\") {\r\n      if (currToolType == \"pen\") {\r\n        polylineTag = '<polyline class=\"drawing\" id=\"' + currId + '\" style=\"opacity:' + strokeOpacity + ';fill:none;stroke-linecap:round;stroke:' + strokeColorPen + ';stroke-width:' + strokeWidthPen + '\" points=\"' + currPoint.x + ',' + currPoint.y + '\" />';;\r\n      } else if (currToolType == \"marker\") {\r\n        polylineTag = '<polyline class=\"drawing\" id=\"' + currId + '\" style=\"fill:none;stroke-linecap:round;stroke:' + strokeColorMarker + ';stroke-width:' + strokeWidthMarker + '\" points=\"' + currPoint.x + ',' + currPoint.y + '\" />';;\r\n      }\r\n      cv.innerHTML += polylineTag;\r\n    }\r\n    \r\n    cv.addEventListener('mousemove', draw, false);\r\n    cv.addEventListener('mouseup', end, false);\r\n    \r\n    index++;\r\n  }\r\n\r\n // stop drawing or erasing\r\n  var end = function () {\r\n    // console.log('end')\r\n\r\n    if (currId !== null && document.getElementById(currId) != null) {\r\n      undoStack.push({\r\n        Elements: [],\r\n        Id: currId,\r\n        Action: 'draw'\r\n      });\r\n    }\r\n\r\n    cv.removeEventListener('mousemove', draw, false);\r\n    cv.removeEventListener('mouseup', end, false);\r\n    cv.removeEventListener('mouseleave', end, false);\r\n  }\r\n\r\n  // keep drawing or erasing\r\n  var draw = function(e) {\r\n    // console.log('draw');\r\n    e.preventDefault();\r\n    \r\n    currPoint = math.getMousePosition(e, cv);\r\n\r\n    if (currToolType == \"pen\" || currToolType == \"marker\") {\r\n      polylineTag = document.getElementById(currId);\r\n      points = polylineTag.getAttribute('points');\r\n\r\n      if (currToolType == \"marker\") {\r\n        points = startPoint.x + ',' + startPoint.y + ' ' + currPoint.x + ',' + currPoint.y;\r\n      } else if (currToolType == \"pen\") {\r\n        if (inStartedInRange) { // if set is in range\r\n\r\n          // to check if cursor went outside of range\r\n          inRangeObj = math.sideAndRange(currPoint);\r\n          \r\n          if(inRangeObj.inRange) { // if drawing on some side \r\n            targetPoint = math.getCoords(pointsObj, inRangeObj.side, currPoint, m);\r\n\r\n            currPoint.x = targetPoint.x;\r\n            currPoint.y = targetPoint.y;\r\n            \r\n            points += ' ' + currPoint.x + ',' + currPoint.y;\r\n          } else { // else stop drawing\r\n            cv.removeEventListener('mousemove', draw, false);\r\n            cv.removeEventListener('mouseup', end, false);            \r\n          }\r\n        } else { // simple drawing\r\n          points += ' ' + currPoint.x + ',' + currPoint.y;\r\n        }\r\n      }\r\n      polylineTag.setAttribute('points', points);\r\n    } else if (currToolType == \"eraser\") {\r\n      var target = e.target;\r\n      if (target.classList.contains('drawing')) {\r\n        redoStack = [];\r\n        undoStack.push({\r\n          Elements: [target],\r\n          Id: target.id,\r\n          Action: 'erase'\r\n        });\r\n        target.remove();\r\n      }\r\n    }\r\n\r\n    if(currSetType == 'compass' && currToolType == \"arc\") {\r\n      arcTag = document.getElementById(currId);\r\n      var polylineInArc = arcTag.querySelector('polyline'); \r\n      points = polylineInArc.getAttribute('points');      \r\n      pointsObj = math.getSetPoints(initTools.currSetType);\r\n\r\n      arc.point.x = pointsObj[2].x;\r\n      arc.point.y = pointsObj[2].y;\r\n\r\n      // check if point is pointObj[2] is really lie on arc or not\r\n      // var d = Math.sqrt((pointsObj[2].x - pointsObj[1].x) * (pointsObj[2].x - pointsObj[1].x) + (pointsObj[2].y - pointsObj[1].y) * (pointsObj[2].y - pointsObj[1].y));\r\n      // d = math.parseToFloat(d, 2);\r\n\r\n      points += ' ' + arc.point.x + ',' + arc.point.y;\r\n      polylineInArc.setAttribute('points', points);\r\n    }    \r\n\r\n    cv.addEventListener('mouseleave', end, false);\r\n  }\r\n\r\n  return {\r\n    undo: Undo,\r\n    redo: Redo,\r\n    clear: Clear,\r\n    strokeOpacity: strokeOpacity,\r\n    strokeWidth: strokeWidth,\r\n    strokeColor: strokeColor,\r\n    start: start\r\n  }\r\n})();\r\n\r\n// move behaviour of elements - tools/panels/sets\r\nvar initMove = (function () {\r\n  var startX = 0, startY = 0, endX = 0, endY = 0;\r\n  var dragParentzIndex = 0; // update only if drag parent is different each dragging time\r\n  var dragParent = dropParent = oldDragParent = null;\r\n\r\n  var init = function (draggable, listener) {\r\n    // console.log('init drag')\r\n\r\n    var dragAreas = draggable.querySelectorAll('.drag-area');\r\n\r\n    if (listener == \"add\") { // ADD EVENT LISTENERS\r\n      // console.log('adding')\r\n\r\n\r\n      if (dragAreas.length > 0) { // if `dragArea` is available, use that to drag\r\n        // if(draggable.classList.contains('drag-area')) {\r\n        //   draggable.addEventListener('mousedown', start, false);\r\n        // }\r\n        dragAreas.forEach(function (dragArea) {\r\n          dragArea.addEventListener('mousedown', start, false);\r\n        })\r\n      } else { // otherwise move the element anywhere from with in element\r\n        draggable.addEventListener('mousedown', start, false);\r\n      }\r\n    } else if (listener == \"remove\") { // REMOVE EVENT LISTENERS\r\n      // console.log('removing')\r\n      if (dragAreas.length > 0) {\r\n        dragAreas.forEach(function (dragArea) {\r\n          dragArea.removeEventListener('mousedown', start, false);\r\n        })\r\n      } else {\r\n        draggable.removeEventListener('mousedown', start, false);\r\n      }\r\n    }\r\n  }\r\n\r\n  var start = function (e) {\r\n    // console.log('moveStart');\r\n\r\n    var currPoint = math.getMousePosition(e, cv);\r\n    initMove.dragParent = e.target.closest('.draggable');\r\n    var dragParent = initMove.dragParent;\r\n    // var oldDragParent = initMove.oldDragParent;\r\n\r\n    // drag only if current element has class 'drag-area'\r\n    if (e.target.classList.contains('drag-area')) {\r\n      // if(e.target.closest('.drag-area')) {\r\n\r\n      cvOuter.classList.add('dragging');\r\n\r\n      startX = currPoint.x;\r\n      startY = currPoint.y;\r\n\r\n      if (dragParent != initMove.oldDragParent) {\r\n        dragParent.style.zIndex = ++initMove.dragParentzIndex;\r\n      }\r\n      initMove.oldDragParent = initMove.dragParent;\r\n\r\n      // update current geometry set type\r\n      if (dragParent.dataset.panelSet) {\r\n        initTools.currSetType = dragParent.dataset.panel;\r\n      }\r\n\r\n      // get coordinates of nearby draggable cubes\r\n      if (dragParent.classList.contains('draggable-cubes')) {\r\n        initCubes.getCoords();\r\n      }\r\n\r\n      cvOuter.addEventListener('mousemove', move, false);\r\n      cvOuter.addEventListener('mouseup', end, false);\r\n      dragParent.addEventListener('dragstart', initDrag.start, false);\r\n    }\r\n\r\n    // bring TRASH can on top if sealType is present\r\n    if (dragParent.dataset.sealType) {\r\n      initPanel.trashPanel(e, 'start', dragParent.dataset.sealType);\r\n    }\r\n  }\r\n\r\n  var move = function (e) {\r\n    // console.log('move')\r\n    e.preventDefault();\r\n\r\n    var currPoint = math.getMousePosition(e, cv);\r\n    var dragParent = initMove.dragParent;\r\n\r\n    // calculate the new cursor position:\r\n    endX = startX - currPoint.x;\r\n    endY = startY - currPoint.y;\r\n    startX = currPoint.x;\r\n    startY = currPoint.y;\r\n\r\n    // set the element's new position:\r\n    dragParent.style.left = (dragParent.offsetLeft - endX) + \"px\";\r\n    if (dragParent == toolsUniverse) {\r\n      var H = cvOuter.getBoundingClientRect().height;\r\n      var h = dragParent.getBoundingClientRect().height;\r\n      var o = dragParent.offsetTop;\r\n      var offsetBottom = H - h - o;\r\n      dragParent.style.bottom = (offsetBottom + endY) + \"px\";\r\n    } else {\r\n      dragParent.style.top = (dragParent.offsetTop - endY) + \"px\";\r\n    }\r\n\r\n    // highligh if 'draggable-cube' is in range\r\n    if (dragParent.classList.contains('draggable-cubes')) {\r\n      // initCubes.isSnapping = true;\r\n      initCubes.getShortestDist();\r\n      // highlight groups accordingly\r\n      if (initCubes.shortestDist != null) {\r\n        if (initCubes.shortestDist < initCubes.snapDist) {\r\n          initCubes.highlight(true);\r\n        } else {\r\n          initCubes.highlight(false);\r\n        }\r\n      }\r\n    }\r\n\r\n    // highlight TRASH cubes if mouse is in\r\n    if (dragParent.dataset.sealType) {\r\n      initPanel.trashPanel(e, 'move');\r\n    }\r\n  }\r\n\r\n  var end = function (e) {\r\n    // console.log('moveEnd')\r\n    e.preventDefault();\r\n\r\n    var dragParent = initMove.dragParent;\r\n\r\n    cvOuter.classList.remove('dragging');\r\n\r\n    // snap cubes if in range\r\n    if (dragParent.classList.contains('draggable-cubes')) {\r\n      if (initCubes.shortestDist != null && initCubes.shortestDist < initCubes.snapDist) {\r\n        initCubes.snap();\r\n        initCubes.shortestDist = null;\r\n      }\r\n    }\r\n    // initCubes.isSnapping = false;\r\n\r\n    // delete dragParent if dropped on TRASH panel\r\n    if (dragParent.dataset.sealType) {\r\n      if (initPanel.trashPanel(e, 'end')) {\r\n        dragParent.remove();\r\n      }\r\n    }\r\n\r\n    // dragParent.classList.remove('detach');\r\n\r\n    cvOuter.removeEventListener('mousemove', move, false);\r\n    cvOuter.removeEventListener('mouseup', end, false);\r\n    dragParent.removeEventListener('dragstart', initDrag.start, false);\r\n  }\r\n\r\n  init(toolsUniverse, 'add');\r\n\r\n  return {\r\n    dragParentzIndex: dragParentzIndex,\r\n    dragParent: dragParent,\r\n    dropParent: dropParent,\r\n    oldDragParent: oldDragParent,\r\n    init: init\r\n  }\r\n})();\r\n\r\n// drag behaviour of seals - cubes/money/numbers/flowers\r\nvar initDrag = (function () {\r\n  var dragEloffsetX, dragEloffsetY;\r\n  var draggablesId = 0;\r\n  var dropElHeight = 0;\r\n  var dragParent = null;\r\n\r\n  var start = function (e) {\r\n    // console.log('dragStart');\r\n\r\n    dragEloffsetX = e.offsetX;\r\n    dragEloffsetY = e.offsetY;\r\n    e.dataTransfer.setData(\"src\", e.target.src);\r\n    e.dataTransfer.setData(\"width\", e.target.getBoundingClientRect().width);\r\n    e.dataTransfer.setData(\"height\", e.target.getBoundingClientRect().height);\r\n    e.dataTransfer.setData(\"sealType\", e.target.dataset.sealType);\r\n    if (e.target.dataset.numberDesign) {\r\n      e.dataTransfer.setData(\"sealDesign\", e.target.dataset.numberDesign);\r\n      e.dataTransfer.setData(\"sealValue\", e.target.dataset.numberValue);\r\n    }\r\n\r\n    cvOuter.addEventListener('dragenter', enter, false);\r\n    cvOuter.addEventListener('dragleave', leave, false);\r\n    cvOuter.addEventListener('dragover', over, false);\r\n    cvOuter.addEventListener('drop', drop, false);\r\n  }\r\n  var enter = function (e) { e.preventDefault(); }\r\n  var leave = function (e) { e.preventDefault(); }\r\n  var over = function (e) {\r\n    e.preventDefault();\r\n    cvOuter.classList.add('dropping');\r\n  }\r\n  var drop = function (e) {\r\n    // console.log('drop');\r\n    e.preventDefault();\r\n\r\n    var sealType = e.dataTransfer.getData('sealType');\r\n    var src = e.dataTransfer.getData('src');\r\n    var width = e.dataTransfer.getData('width');\r\n    var height = e.dataTransfer.getData('height');\r\n    var numberDesign = e.dataTransfer.getData(\"sealDesign\");\r\n    var numberValue = e.dataTransfer.getData(\"sealValue\");\r\n\r\n    cvOuter.classList.remove('dropping');\r\n\r\n    var totalSealsAllowed = sealTypes[sealType]['max'];\r\n    var totalSealsPlaced = document.querySelectorAll('[data-seal-type=\"' + sealType + '\"].dropped-seal').length;\r\n\r\n    if (totalSealsPlaced < totalSealsAllowed) {\r\n      var draggable;\r\n      if (sealType == \"cubes\" || sealType == \"numbers\") { // generate new draggable group\r\n        draggable = document.createElement('div');\r\n        draggable.classList.add('draggable-cubes');\r\n        draggable.setAttribute('data-seal-type', sealType);\r\n        if (sealType == 'numbers') {\r\n          draggable.setAttribute('data-number-design', numberDesign);\r\n          draggable.setAttribute('data-number-value', numberValue);\r\n        }\r\n        draggable.innerHTML = `\r\n          <div class=\"cube-outer drag-area\" data-index=\"0\" data-seal-type=\"${sealType}\">\r\n            <div class=\"cube\"><img src=\"${src}\" style=\"width: ${width}px; height: ${height}px;\"></div>\r\n          </div>\r\n          <div class=\"dot dot-top\"></div>\r\n          <div class=\"dot dot-bottom\"></div>\r\n          <div class=\"dot dot-left\"></div>\r\n          <div class=\"dot dot-right\"></div>\r\n          <div class=\"detach-btn\"></div>\r\n          `;\r\n\r\n        draggable.addEventListener('dblclick', initCubes.remove, false);\r\n        // draggable.addEventListener('click', initCubes.detach, false);\r\n        draggable.addEventListener('click', initCubes.detachUI, false);\r\n      } else { // generate a seal\r\n        draggable = document.createElement('img');\r\n        draggable.src = src;\r\n        draggable.width = width;\r\n        draggable.height = height;\r\n        draggable.classList.add('dropped-seal');\r\n        draggable.classList.add('drag-area');\r\n        draggable.setAttribute('data-seal-type', sealType);\r\n\r\n        draggable.addEventListener('dblclick', (e) => { draggable.remove(); }, false);\r\n      }\r\n\r\n      draggable.setAttribute('data-id', ++initDrag.draggablesId);\r\n      draggable.style.zIndex = ++initMove.dragParentzIndex;\r\n      draggable.style.left = e.offsetX - dragEloffsetX + 'px';\r\n      draggable.style.top = e.offsetY - dragEloffsetY + 'px';\r\n      draggable.classList.add('draggable');\r\n\r\n      cvOuter.appendChild(draggable);\r\n\r\n      initDrag.dropElHeight = draggable.getBoundingClientRect().height;\r\n\r\n      initMove.init(draggable, 'add');\r\n\r\n      cvOuter.removeEventListener('dragenter', enter)\r\n      cvOuter.removeEventListener('dragleave', leave)\r\n      cvOuter.removeEventListener('dragover', over)\r\n      cvOuter.removeEventListener('drop', drop)\r\n    } else {\r\n      alert('You can only place max ' + totalSealsAllowed + ' of ' + sealType + ' seal type.');\r\n    }\r\n  }\r\n\r\n  return {\r\n    start: start,\r\n    draggablesId: draggablesId,\r\n    dropElHeight: dropElHeight\r\n  }\r\n})();\r\n\r\n// fetch seals from 'settings.json' file\r\nvar fetchSeals = (function () {\r\n  // console.log('fetching seals');\r\n\r\n  for (var sealType in sealTypes) {\r\n    var sealPanelContent = document.querySelector('[data-panel=\"' + sealType + '\"] .content');\r\n    if (sealTypes.hasOwnProperty(sealType)) {\r\n      var values = sealTypes[sealType].values;\r\n      if (sealType == \"numbers\") {\r\n        for (var type in values) {\r\n          // console.log(values[type])\r\n          for (var i = 0; i < values[type].length; i++) {\r\n            // console.log(values[type][i][0], values[type][i][1])\r\n            var numType = values[type][i][0];\r\n            var numValue = values[type][i][1];\r\n            var el = document.createElement('img');\r\n            el.classList.add('draggable-seal');\r\n            el.setAttribute('data-seal-type', sealType);\r\n            el.setAttribute('data-number-design', type);\r\n            el.setAttribute('data-number-value', numValue);\r\n            el.src = './_assets/img/' + numType;\r\n            sealPanelContent.appendChild(el);\r\n          }\r\n        }\r\n      } else {\r\n        values.forEach(value => {\r\n          var el = document.createElement('img');\r\n          el.classList.add('draggable-seal');\r\n          el.setAttribute('data-seal-type', sealType);\r\n          el.src = './_assets/img/' + value;\r\n          sealPanelContent.appendChild(el);\r\n        });\r\n      }\r\n    }\r\n  }\r\n})();\r\n\r\n// init panel functions - open/close/drag-panel/drag-seals\r\nvar initPanel = (function (e) {\r\n  var panel = oldPanel = panelType = panelBtn = panelPosObj =\r\n      panelCloseBtn = panelScaleFlipBtn = panelScaleBtn = draggableSeals = rotateBtns = null;\r\n\r\n  var toggle = function (target) {\r\n    panelType = target.dataset.panelBtn;\r\n\r\n    // open panel\r\n    if (!target.classList.contains('active')) {\r\n      // console.log('open panel');\r\n\r\n      panel = document.querySelector('[data-panel=\"' + panelType + '\"]');\r\n      panelCloseBtn = panel.querySelector('.close-btn');\r\n      panelScaleBtn = panel.querySelector('.scale-btn');\r\n      panelFlipBtn = panel.querySelector('.flip-btn');\r\n      rotateBtns = panel.querySelectorAll('.rotate-btn');\r\n      panelScaleFlipBtn = panel.querySelector('.scale-flip-btn');\r\n      draggableSeals = panel.getElementsByClassName('draggable-seal');\r\n\r\n      target.classList.add('active');\r\n      panel.classList.add('active');\r\n      panel.style.zIndex = ++initMove.dragParentzIndex;\r\n\r\n      initMove.dragParent = panel;\r\n      initMove.oldDragParent = panel;\r\n\r\n      // ADD EVENT LISTENERS\r\n      panelCloseBtn.addEventListener('click', close, false);\r\n      initMove.init(panel, 'add');\r\n      for (var i = 0; i < draggableSeals.length; i++) {\r\n        draggableSeals[i].addEventListener('dragstart', initDrag.start, false);\r\n      }\r\n      for (var i = 0; i < rotateBtns.length; i++) {\r\n        rotateBtns[i].addEventListener('mousedown', function(e) {\r\n          initRotate.start(e);\r\n        }, false);\r\n      }\r\n      if (panelScaleBtn) {\r\n        panelScaleBtn.addEventListener('mousedown', initScale.start, false);\r\n      }\r\n      if (panelFlipBtn) {\r\n        panelFlipBtn.addEventListener('click', flip, false);\r\n      }\r\n      if (panelScaleFlipBtn) {\r\n        panelScaleFlipBtn.addEventListener('click', scaleFlip, false);\r\n      }\r\n      if (panelType == \"calculator\") {\r\n        var buttons = panel.querySelectorAll('[data-button-type]');\r\n        for (var i = 0; i < buttons.length; i++) {\r\n          buttons[i].addEventListener('click', initCalc.calculate, false);\r\n        }\r\n      }\r\n      if (panel.classList.contains('draggable-seal')) {\r\n        panel.addEventListener('click', bringInFront, false);\r\n      }\r\n\r\n\r\n      // update current geometry set type\r\n      if (panel.dataset.panelSet) {\r\n        initTools.currSetType = panel.dataset.panel;\r\n      }\r\n    } else { // close panel if already open\r\n      close(panelType);\r\n    }\r\n  }\r\n  var close = function (e) {\r\n    // console.log('close panel')\r\n\r\n    // clicked on closed button and 'type' property exist\r\n    if (e.type) {\r\n      panel = this.closest('.draggable');\r\n      panelType = panel.dataset.panel;\r\n    } else { // clicked on panel btn itself and called 'closePanel' function so 'e.type' not defined\r\n      panelType = e;\r\n      panel = document.querySelector('[data-panel=\"' + panelType + '\"]');;\r\n    }\r\n    panelBtn = document.querySelector('[data-panel-btn=\"' + panelType + '\"]');\r\n    panelCloseBtn = panel.querySelector('.close-btn');\r\n    panelFlipBtn = panel.querySelector('.flip-btn');\r\n    panelScaleBtn = panel.querySelector('.scale-btn');\r\n    panelScaleFlipBtn = panel.querySelector('.scale-flip-btn');\r\n\r\n    draggableSeals = panel.getElementsByClassName('draggable-seal');\r\n    panel.classList.remove('active');\r\n    panelBtn.classList.remove('active');\r\n    rotateBtns = panel.querySelectorAll('.rotate-btn');\r\n\r\n    // REMOVE EVENT LISTENERS\r\n    panelCloseBtn.removeEventListener('click', close, false);\r\n    initMove.init(panel, 'remove');\r\n    for (var i = 0; i < draggableSeals.length; i++) {\r\n      draggableSeals[i].removeEventListener('dragstart', initDrag.start, false);\r\n    }\r\n    for (var i = 0; i < rotateBtns.length; i++) {\r\n      rotateBtns[i].addEventListener('mousedown', initRotate.start, false);\r\n    }\r\n    if (panelScaleBtn) {\r\n      panelScaleBtn.removeEventListener('mousedown', initScale.start, false);\r\n    }\r\n    if (panelFlipBtn) {\r\n      panelFlipBtn.removeEventListener('click', flip, false);\r\n    }    \r\n    if (panelScaleFlipBtn) {\r\n      panelScaleFlipBtn.removeEventListener('click', scaleFlip, false);\r\n    }\r\n    if (panelType == \"calculator\") {\r\n      var buttons = panel.querySelectorAll('[data-button-type]');\r\n      for (var i = 0; i < buttons.length; i++) {\r\n        buttons[i].removeEventListener('click', initCalc.calculate, false);\r\n      }\r\n    }\r\n    if (panel.classList.contains('draggable-seal')) {\r\n      panel.removeEventListener('click', bringInFront, false);\r\n    }\r\n    if(panelType.substr(0,5) == \"scale\") {\r\n      var secActiveBtns = document.querySelectorAll('[data-tool-group-type=\"scale\"].secondary.active');\r\n      var panelGroupBtn = document.querySelector('[data-tool-group-type=\"scale\"]');\r\n      if(secActiveBtns.length < 1) {\r\n        panelGroupBtn.classList.remove('active');\r\n      }      \r\n    } else if(panelType.substr(0,10) == \"set-square\") {\r\n      var secActiveBtns = document.querySelectorAll('[data-tool-group-type=\"set-square\"].secondary.active');\r\n      var panelGroupBtn = document.querySelector('[data-tool-group-type=\"set-square\"]');\r\n      if(secActiveBtns.length < 1) {\r\n        panelGroupBtn.classList.remove('active');\r\n      }      \r\n    }\r\n\r\n    // update current geometry set type to null\r\n    if (panel.dataset.panelSet) {\r\n      initTools.currSetType = null;\r\n    }\r\n  }\r\n  var bringInFront = function (e) {\r\n    panel = this.closest('.draggable');\r\n\r\n    if (oldPanel != panel) {\r\n      panel.style.zIndex = ++initMove.dragParentzIndex;\r\n      // update current geometry set type to the front one\r\n      if (panel.dataset.panelSet) {\r\n        initTools.currSetType = panel.dataset.panel;\r\n      }      \r\n    }\r\n    console.log('changing')\r\n    oldPanel = panel;\r\n  }\r\n  var trashPanel = function (e, mode, sealType) {\r\n    var mousePosObj = math.getMousePosition(e, cv);\r\n\r\n    // bring trash can on top if draggin cubes\r\n    if (mode == \"start\") {\r\n      panel = document.querySelector('[data-panel=\"' + sealType + '\"]');\r\n      var panelPos = panel.getBoundingClientRect();\r\n      panelPosObj = {\r\n        x1: panelPos.left,\r\n        x2: panelPos.left + panelPos.width,\r\n        y1: panelPos.top,\r\n        y2: panelPos.top + panelPos.height\r\n      }\r\n    }\r\n\r\n    if (mode == \"move\") {\r\n      panel.style.zIndex = initMove.dragParentzIndex;\r\n      panel.classList.add('trash');\r\n    }\r\n\r\n    // highlight trash cubes if mouse is in\r\n    if (mousePosObj.x > panelPosObj.x1 && mousePosObj.x < panelPosObj.x2 &&\r\n      mousePosObj.y > panelPosObj.y1 && mousePosObj.y < panelPosObj.y2) {\r\n      panel.classList.add('trash-active');\r\n    } else {\r\n      panel.classList.remove('trash-active');\r\n    }\r\n\r\n    // delete dragParent if dropped on trash panel\r\n    if (mode == 'end') {\r\n      panel.classList.remove('trash')\r\n      if (panel.classList.contains('trash-active')) {\r\n        panel.classList.remove('trash-active')\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  var flip = function(e) {\r\n    // console.log('panel fliping');\r\n\r\n    if(panel.classList.contains('flipped')) {\r\n      panel.classList.remove('flipped');\r\n    } else {\r\n      panel.classList.add('flipped');\r\n    }\r\n  }\r\n  var scaleFlip = function(e) {\r\n    console.log('scale flipping');\r\n  }\r\n\r\n  return {\r\n    toggle: toggle,\r\n    trashPanel: trashPanel\r\n  }\r\n})();\r\n\r\n// cubes/numbers - highlighting/snapping/detaching\r\nvar initCubes = (function (e) {\r\n  var dropCoords = {};\r\n  var isSnapping = false; // REMOVE LATER IF NOT REQUIRED\r\n  var snapDist = 40;\r\n  var snapInfo = { i: 0, j: 0, id: '' };\r\n  var row = 3;\r\n  var col = 3;\r\n  var dragParentLeft = dragParentTop = shortestDist = snapType = dragParent = dropParent = cubeLimit = cubeOuter = null;\r\n  var detachType = null;\r\n\r\n  // wrt dragParent\r\n  // 0 == top | 1 == bottom\r\n  // 0 == left | 1 == right\r\n  var getCoords = function () {\r\n    // console.log('geting Coordingates');\r\n\r\n    dragParent = initMove.dragParent;\r\n\r\n    snapType = (dragParent.classList.contains('vertical')) ? 'horizontal' : 'vertical';\r\n    detachType = (dragParent.classList.contains('horizontal')) ? 'horizontal' : 'vertical';\r\n    dropCoords = {};\r\n    var dropDotCoord_0 = dropDotCoord_1 = null;\r\n\r\n    var draggableCubes = document.querySelectorAll('.draggable-cubes');\r\n\r\n\r\n    for (let i = 0; i < draggableCubes.length; i++) {\r\n      if (draggableCubes[i] == dragParent) { continue; }\r\n\r\n      if (snapType == 'vertical') {\r\n        // console.log('vertical snapping')\r\n        dropDotCoord_0 = draggableCubes[i].querySelector('.dot-top').getBoundingClientRect();\r\n        dropDotCoord_1 = draggableCubes[i].querySelector('.dot-bottom').getBoundingClientRect();\r\n      } else {\r\n        // console.log('horizontal snapping')\r\n        dropDotCoord_0 = draggableCubes[i].querySelector('.dot-left').getBoundingClientRect();\r\n        dropDotCoord_1 = draggableCubes[i].querySelector('.dot-right').getBoundingClientRect();\r\n      }\r\n      var id = draggableCubes[i].dataset.id;\r\n\r\n      var dropCoord = {\r\n        0: {\r\n          x: dropDotCoord_0.x,\r\n          y: dropDotCoord_0.y\r\n        },\r\n        1: {\r\n          x: dropDotCoord_1.x,\r\n          y: dropDotCoord_1.y\r\n        }\r\n      }\r\n      dropCoords[id] = dropCoord;\r\n    }\r\n\r\n    dragParentLeft = dragParent.style.left;\r\n    dragParentTop = dragParent.style.top;\r\n  }\r\n  var getShortestDist = function () {\r\n    // console.log('geting shortest dist');\r\n\r\n    var shortestDist = null;\r\n    // console.log(dragParent, dropParent)\r\n\r\n    snapInfo = { i: 0, j: 0, id: '' };\r\n\r\n    if (snapType == 'vertical') {\r\n      dropDotCoord_0 = dragParent.querySelector('.dot-top').getBoundingClientRect();\r\n      dropDotCoord_1 = dragParent.querySelector('.dot-bottom').getBoundingClientRect();\r\n    } else {\r\n      dropDotCoord_0 = dragParent.querySelector('.dot-left').getBoundingClientRect();\r\n      dropDotCoord_1 = dragParent.querySelector('.dot-right').getBoundingClientRect();\r\n    }\r\n\r\n    var dragCoord = {\r\n      0: {\r\n        x: dropDotCoord_0.x,\r\n        y: dropDotCoord_0.y\r\n      },\r\n      1: {\r\n        x: dropDotCoord_1.x,\r\n        y: dropDotCoord_1.y\r\n      }\r\n    }\r\n\r\n    // wrt dragParent\r\n    // 0 == top | 1 == bottom\r\n    // 0 == left | 1 == right\r\n    // for(var i = 0; i < 2; i++) { // 0,1 -> snap using BOTH sides (top and botton || left and right)\r\n    // for(var i = 1; i < 2; i++) {  // 1 -> snap using only one side (bottom || right)\r\n    for (var i = 0; i < 1; i++) {  // 0 -> snap using only one side (top || left)\r\n      for (var dropCoord in dropCoords) {\r\n        // if drag is 'top' || 'left compare with 'bottom' || 'right' dots of drop respectivily\r\n        var j = (i == 0) ? 1 : 0;\r\n        if (dropCoords.hasOwnProperty(dropCoord)) {\r\n\r\n          // gettting coordinates to calcualte dist\r\n          var x1 = dragCoord[i].x;\r\n          var y1 = dragCoord[i].y;\r\n          var x2 = dropCoords[dropCoord][j].x;\r\n          var y2 = dropCoords[dropCoord][j].y;\r\n\r\n          // calculating dist btw points\r\n          var x = x1 - x2;\r\n          var y = y1 - y2;\r\n          var d = parseFloat((Math.sqrt(x * x + y * y)).toFixed(2));\r\n\r\n          // if shortest dist is not defined, make it equal to first calculated dist\r\n          if (shortestDist == null || shortestDist > d) {\r\n            shortestDist = d;\r\n            snapInfo = {\r\n              i: (i == 0) ? 0 : 1, // to save if it was top or bottom of dragged element\r\n              j: (j == 0) ? 0 : 1, // to save if it was top or bottom of dropped element\r\n              id: dropCoord // id of element who's j value is saved\r\n            }\r\n\r\n            initCubes.shortestDist = shortestDist;\r\n            dropParent = initMove.dropParent = document.querySelector('[data-id=\"' + dropCoord + '\"');\r\n\r\n            // no highlighting if element has already enought cubes in column\r\n            if (snapType == 'vertical') {\r\n              if (dropParent.classList.contains('vertical')) {\r\n                // initCubes.shortestDist = null\r\n              }\r\n            }\r\n            if (snapType == 'horizontal') {\r\n              if (!dragParent.classList.contains('vertical') || !dropParent.classList.contains('vertical')) {\r\n                initCubes.shortestDist = null\r\n              }\r\n            }\r\n          };\r\n        }\r\n      }\r\n    }\r\n    // make 'shortestDist' null if dragParent and dropParent is not of same type\r\n    if(dropParent) {\r\n      if (dragParent.dataset.sealType == 'cubes') {\r\n        if (dragParent.dataset.sealType != dropParent.dataset.sealType) {\r\n          initCubes.shortestDist = null;\r\n        }\r\n      } else if (dragParent.dataset.sealType == 'numbers') {\r\n        if (dragParent.dataset.numberDesign != dropParent.dataset.numberDesign ||\r\n          dragParent.dataset.numberValue != dropParent.dataset.numberValue) {\r\n          initCubes.shortestDist = null;\r\n        }\r\n      }\r\n      if(dragParent.dataset.numberValue == \"10000\") {\r\n        initCubes.shortestDist = null;\r\n      }\r\n    }\r\n  }\r\n  var highlight = function (flag) {\r\n    if (flag) {\r\n      // console.log('highlighting')\r\n      dragParent.classList.add('highlight');\r\n      dropParent.classList.add('highlight');\r\n    } else {\r\n      dragParent.classList.remove('highlight');\r\n      dropParent.classList.remove('highlight');\r\n    }\r\n  }\r\n  var snap = function () {\r\n    // console.log('snapping');\r\n\r\n    var transitionEvent = whichTransitionEvent();\r\n\r\n    var sealType = dragParent.querySelector('[data-seal-type]').dataset.sealType;\r\n    var src = dragParent.querySelector('img').src;\r\n    var width = dragParent.querySelector('img').width;\r\n    var height = dragParent.querySelector('img').height;\r\n\r\n    // update 'row' and 'col' for numbers sealTypes\r\n    if (sealType == 'numbers') {\r\n      row = 4;\r\n      col = 0;\r\n    }\r\n    cubeLimit = (snapType == \"vertical\") ? row : col;\r\n\r\n    if (snapType == \"vertical\") {\r\n      var dropParentCubeCount = dropParent.querySelectorAll('.drag-area').length;\r\n      var dragParentCubeCount = dragParent.querySelectorAll('.drag-area').length;\r\n    } else {\r\n      var dropParentCubeCount = dropParent.querySelectorAll('.cube-outer').length;\r\n      var dragParentCubeCount = dragParent.querySelectorAll('.cube-outer').length;\r\n    }\r\n    var totalCubes = dropParentCubeCount + dragParentCubeCount;\r\n\r\n    // console.log('snapType: ', snapType);\r\n    // console.log('dropParentCubeCount: ', dropParentCubeCount);\r\n    // console.log('dragParentCubeCount: ', dragParentCubeCount);\r\n    // console.log('totalCubes: ', totalCubes);\r\n    // console.log('cubeLimit: ', cubeLimit);\r\n\r\n    // if possible to add more cubes (both vertical and horizontal)\r\n    if (totalCubes <= cubeLimit) {\r\n      // console.log('totalCubes <= cubeLimit');\r\n\r\n      cubeOuter = '';\r\n      if (snapType == \"vertical\") {\r\n        for (var r = 0; r < dragParentCubeCount; r++) {\r\n          cubeOuter += `\r\n            <div class=\"cube-outer drag-area\" data-index=\"${dropParentCubeCount + r}\" data-seal-type=\"${sealType}\">\r\n              <div class=\"cube\"><img src=\"${src}\" style=\"width: ${width}px; height: ${height}px;\"></div>\r\n            </div>        \r\n          `;\r\n        }\r\n        initMove.dropParent.innerHTML += cubeOuter;\r\n        dropParent = initMove.dropParent;\r\n      } else if (snapType == \"horizontal\") {\r\n        cubeOuter = '';\r\n        for (var c = 0; c < totalCubes; c++) {\r\n          cubeOuter += `<div class=\"cube-outer drag-area\" data-index=\"${c}\" data-seal-type=\"${sealType}\">`;\r\n          for (var r = 0; r < row; r++) {\r\n            cubeOuter += `<div class=\"cube\"><img src=\"${src}\" style=\"width: ${width}px; height: ${height}px;\"></div>`;\r\n          }\r\n          cubeOuter += '</div>';\r\n        }\r\n        cubeOuter += `\r\n          </div>\r\n          <div class=\"dot dot-top\"></div>\r\n          <div class=\"dot dot-bottom\"></div>\r\n          <div class=\"dot dot-left\"></div>\r\n          <div class=\"dot dot-right\"></div>\r\n          <div class=\"detach-btn\"></div>     \r\n        `;\r\n        initMove.dropParent.innerHTML = cubeOuter;\r\n        dropParent = initMove.dropParent;\r\n        initMove.init(dropParent, 'add');\r\n      }\r\n\r\n      if (snapType == \"horizontal\") dropParent.classList.add('horizontal');\r\n\r\n      totalCubes = dropParent.querySelectorAll('.cube-outer').length;\r\n\r\n      // if vertical limit reached\r\n      if (totalCubes == cubeLimit) {\r\n        // console.log('totalCubes == cubeLimit');\r\n\r\n        if (sealType == 'numbers') {\r\n          // dropParent.querySelector('.cube-outer').remove();\r\n          for (var r = 0; r < row; r++) {\r\n            dropParent.querySelector('[data-index=\"' + r + '\"]').remove();\r\n          }\r\n\r\n          cubeOuter = `\r\n            <div class=\"cube-outer drag-area\" data-index=\"0\" data-seal-type=\"numbers\">\r\n              <div class=\"cube\"><img src=\"${'_assets/img/number-' + dropParent.dataset.numberDesign + '-' + dropParent.dataset.numberValue * 10 + '.svg'}\" style=\"width: ${width}px; height: ${height}px;\"></div>\r\n            </div>        \r\n          `;\r\n          dropParent.classList.remove('vertical');\r\n          dropParent.classList.remove('detach');\r\n          dropParent.setAttribute('data-number-value', dropParent.dataset.numberValue * 10)\r\n          dropParent.innerHTML += cubeOuter;\r\n        } else if (sealType == \"cubes\") {\r\n          if (snapType == \"vertical\") {\r\n            // make vertical complete group (layout needs to update)\r\n            cubeOuter = `<div class=\"cube-outer\">`;\r\n            for (var r = 0; r < row; r++) {\r\n              cubeOuter += `<div class=\"cube drag-area\" data-index=\"${r}\" data-seal-type=\"${sealType}\"><img src=\"${src}\" style=\"width: ${width}px; height: ${height}px;\"></div>`;\r\n            }\r\n            cubeOuter += `\r\n              </div>\r\n              <div class=\"dot dot-top\"></div>\r\n              <div class=\"dot dot-bottom\"></div>\r\n              <div class=\"dot dot-left\"></div>\r\n              <div class=\"dot dot-right\"></div>     \r\n              <div class=\"detach-btn\"></div>\r\n            `;\r\n\r\n            initMove.dropParent.innerHTML = cubeOuter;\r\n            dropParent = initMove.dropParent;\r\n            dropParent.classList.add('vertical');\r\n          } else if (snapType == \"horizontal\") {\r\n            dropParent = initMove.dropParent;\r\n          }\r\n        }\r\n\r\n        console.log('limit reached!!!!!!!!!!');\r\n      }\r\n      // console.log(dropParent);\r\n      initMove.init(dropParent, 'add');\r\n      dragParent.remove();\r\n    } else if (totalCubes > cubeLimit) {\r\n      // console.log('totalCubes > cubeLimit');\r\n\r\n      var canBeAddedCubes = cubeLimit - dropParentCubeCount;\r\n      var remainingCubes = dragParentCubeCount - canBeAddedCubes;\r\n\r\n      if (snapType == \"vertical\") {\r\n        // make vertical complete group (layout needs to update)\r\n        cubeOuter = `<div class=\"cube-outer\">`;\r\n        for (var r = 0; r < row; r++) {\r\n          cubeOuter += `<div class=\"cube drag-area\" data-index=\"${r}\" data-seal-type=\"${sealType}\"><img src=\"${src}\" style=\"width: ${width}px; height: ${height}px;\"></div>`;\r\n        }\r\n        cubeOuter += `\r\n          </div>\r\n          <div class=\"dot dot-top\"></div>\r\n          <div class=\"dot dot-bottom\"></div>\r\n          <div class=\"dot dot-left\"></div>\r\n          <div class=\"dot dot-right\"></div>     \r\n          <div class=\"detach-btn\"></div>\r\n        `;\r\n\r\n        initMove.dropParent.innerHTML = cubeOuter;\r\n        dropParent = initMove.dropParent;\r\n        dropParent.classList.add('vertical');\r\n\r\n        // remove cubes from dragParent\r\n        for (var i = 0; i < canBeAddedCubes; i++) {\r\n          dragParent.querySelector('[data-index=\"' + (dragParentCubeCount - 1 - i) + '\"].cube-outer').remove();\r\n        }\r\n\r\n      } else if (snapType == \"horizontal\") {\r\n        // make horizontal complete group \r\n        cubeOuter = \"\";\r\n        for (var c = 0; c < canBeAddedCubes; c++) {\r\n          cubeOuter += `<div class=\"cube-outer drag-area\" data-index=\"${dropParentCubeCount + c}\" data-seal-type=\"${sealType}\">`;\r\n          for (var r = 0; r < row; r++) {\r\n            cubeOuter += `<div class=\"cube\"><img src=\"${src}\" style=\"width: ${width}px; height: ${height}px;\"></div>`;\r\n          }\r\n          cubeOuter += '</div>';\r\n        }\r\n        initMove.dropParent.innerHTML += cubeOuter;\r\n        dropParent = initMove.dropParent;\r\n        // dropParent.classList.remove('vertical');\r\n\r\n        if (remainingCubes == 1) {\r\n          cubeOuter = `<div class=\"cube-outer\">`;\r\n          for (var r = 0; r < row; r++) {\r\n            cubeOuter += `<div class=\"cube drag-area\" data-index=\"${r}\" data-seal-type=\"${sealType}\"><img src=\"${src}\" style=\"width: ${width}px; height: ${height}px;\"></div>\r\n          `;\r\n          }\r\n          cubeOuter += `\r\n            </div> \r\n            <div class=\"dot dot-top\"></div>\r\n            <div class=\"dot dot-bottom\"></div>\r\n            <div class=\"dot dot-left\"></div>\r\n            <div class=\"dot dot-right\"></div>     \r\n            <div class=\"detach-btn\"></div>\r\n          `;\r\n\r\n          initMove.dragParent.innerHTML = cubeOuter;\r\n          dragParent = initMove.dragParent;\r\n          initMove.init(dragParent, 'add');\r\n          dragParent.classList.remove('horizontal');\r\n        } else {\r\n          // remove cubes from dragParent\r\n          for (var i = 0; i < canBeAddedCubes; i++) {\r\n            dragParent.querySelector('[data-index=\"' + (dragParentCubeCount - 1 - i) + '\"].cube-outer').remove();\r\n          }\r\n        }\r\n      }\r\n\r\n      initMove.init(dropParent, 'add');\r\n\r\n\r\n      dragParent.style.left = dragParentLeft;\r\n      dragParent.style.top = dragParentTop;\r\n      initMove.init(dragParent, 'add');\r\n      dragParent.classList.add('cant-snap');\r\n\r\n      console.log('limit reached!!!!!!!!!!');\r\n    }\r\n\r\n    dragParent.addEventListener(transitionEvent, transitionEndCallback);\r\n    function transitionEndCallback() {\r\n      dragParent.removeEventListener(transitionEvent, transitionEndCallback);\r\n      dragParent.classList.remove('cant-snap');\r\n    }\r\n    dragParent.classList.remove('highlight');\r\n    dropParent.classList.remove('highlight');\r\n  }\r\n  // code logic NOT NEEDED for now \r\n  var detach = function (e) {\r\n    // console.log('detaching');\r\n\r\n    if (detachType == 'vertical') {  // vertical detach\r\n      var target = e.target;\r\n\r\n      var index = parseInt(target.dataset.index);\r\n      var totalCubes = dragParent.querySelectorAll('.drag-area').length;\r\n      var detachCubes = totalCubes - index;\r\n\r\n      var sealType = dragParent.querySelector('[data-seal-type]').dataset.sealType;\r\n      var src = dragParent.querySelector('img').src;\r\n      var width = dragParent.querySelector('img').width;\r\n      var height = dragParent.querySelector('img').height;\r\n\r\n      dragParentLeft = dragParent.style.left;\r\n      dragParentTop = dragParent.style.top;\r\n\r\n      // console.log('target: ', target);\r\n      // console.log('index: ', index);\r\n      // console.log('detachCubes: ', detachCubes);\r\n      // console.log('totalCubes: ', totalCubes);\r\n\r\n      if (totalCubes == 1 && !dragParent.classList.contains('vertical')) {\r\n        dragParent.remove();\r\n      } else if (index) {\r\n        // top\r\n        if (!dragParent.classList.contains('vertical')) { // detaching vertical group when INCOMPLETE\r\n          for (var r = index; r < totalCubes; r++) {\r\n            dragParent.querySelector('[data-index=\"' + r + '\"]').remove();\r\n          }\r\n        } else { // detaching vertical group when COMPLETE\r\n          cubeOuter = '';\r\n          for (var r = 0; r < index; r++) {\r\n            cubeOuter += `\r\n              <div class=\"cube-outer drag-area\" data-index=\"${r}\" data-seal-type=\"${sealType}\">\r\n                <div class=\"cube\"><img src=\"${src}\" style=\"width: ${width}px; height: ${height}px;\"></div>\r\n              </div>        \r\n            `;\r\n          }\r\n          cubeOuter += `\r\n            <div class=\"dot dot-top\"></div>\r\n            <div class=\"dot dot-bottom\"></div>\r\n            <div class=\"dot dot-left\"></div>\r\n            <div class=\"dot dot-right\"></div>     \r\n          `;\r\n          initMove.dragParent.innerHTML = cubeOuter;\r\n          dragParent = initMove.dragParent;\r\n          dragParent.classList.remove('vertical');\r\n\r\n          initMove.init(dragParent, 'add');\r\n          dragParent.addEventListener('dblclick', detach, false);\r\n        }\r\n\r\n        var left = parseFloat(dragParentLeft);\r\n        var top = parseFloat(dragParentTop) + dragParent.getBoundingClientRect().height + 30;\r\n        // bottom\r\n        var draggable = document.createElement('div');\r\n        draggable.classList.add('draggable-cubes');\r\n        draggable.classList.add('draggable');\r\n        draggable.setAttribute('data-id', ++initDrag.draggablesId);\r\n        draggable.setAttribute('data-seal-type', sealType);\r\n        draggable.style.left = left + 'px';\r\n        draggable.style.top = top + 'px';\r\n        draggable.style.zIndex = ++initMove.dragParentzIndex;\r\n\r\n        cubeOuter = '';\r\n        for (var r = 0; r < detachCubes; r++) {\r\n          cubeOuter += `\r\n          <div class=\"cube-outer drag-area\" data-index=\"${r}\" data-seal-type=\"${sealType}\">\r\n            <div class=\"cube\"><img src=\"${src}\" style=\"width: ${width}px; height: ${height}px;\"></div>\r\n          </div>        \r\n        `;\r\n        }\r\n        cubeOuter += `\r\n          <div class=\"dot dot-top\"></div>\r\n          <div class=\"dot dot-bottom\"></div>\r\n          <div class=\"dot dot-left\"></div>\r\n          <div class=\"dot dot-right\"></div>     \r\n        `;\r\n\r\n        draggable.innerHTML = cubeOuter;\r\n        cvOuter.appendChild(draggable);\r\n\r\n        initMove.init(draggable, 'add');\r\n        draggable.addEventListener('dblclick', detach, false);\r\n      } else {\r\n        console.warn(\"Can't remove from here!\");\r\n      }\r\n    } else if (detachType == 'horizontal') { // horizontal detach\r\n      var target = e.target;\r\n\r\n      var index = parseInt(target.dataset.index);\r\n      var totalCubes = dragParent.querySelectorAll('.drag-area').length;\r\n      var detachCubes = totalCubes - index;\r\n\r\n      var sealType = dragParent.querySelector('[data-seal-type]').dataset.sealType;\r\n      var src = dragParent.querySelector('img').src;\r\n      var width = dragParent.querySelector('img').width;\r\n      var height = dragParent.querySelector('img').height;\r\n\r\n      dragParentLeft = dragParent.style.left;\r\n      dragParentTop = dragParent.style.top;\r\n\r\n      // console.log('target: ', target);\r\n      // console.log('index: ', index); // 1\r\n      // console.log('detachCubes: ', detachCubes); // 2\r\n      // console.log('totalCubes: ', totalCubes); // 3\r\n\r\n      if (index) {\r\n        // left\r\n        if (index == 1) {\r\n          cubeOuter = `<div class=\"cube-outer\">`;\r\n          for (var r = 0; r < row; r++) {\r\n            cubeOuter += `<div class=\"cube drag-area\" data-index=\"${r}\" data-seal-type=\"${sealType}\"><img src=\"${src}\" style=\"width: ${width}px; height: ${height}px;\"></div>\r\n          `;\r\n          }\r\n          cubeOuter += `\r\n            </div> \r\n            <div class=\"dot dot-top\"></div>\r\n            <div class=\"dot dot-bottom\"></div>\r\n            <div class=\"dot dot-left\"></div>\r\n            <div class=\"dot dot-right\"></div>     \r\n          `;\r\n\r\n          initMove.dragParent.innerHTML = cubeOuter;\r\n          dragParent = initMove.dragParent;\r\n          initMove.init(dragParent, 'add');\r\n          dragParent.classList.remove('horizontal');\r\n        } else {\r\n          for (var r = index; r < totalCubes; r++) {\r\n            dragParent.querySelector('[data-index=\"' + r + '\"]').remove();\r\n          }\r\n        }\r\n\r\n        var left = parseFloat(dragParentLeft) + dragParent.getBoundingClientRect().width + 30;\r\n        var top = parseFloat(dragParentTop);\r\n\r\n        // right\r\n        var draggable = document.createElement('div');\r\n        draggable.classList.add('draggable-cubes');\r\n        draggable.classList.add('draggable');\r\n        draggable.setAttribute('data-seal-type', sealType);\r\n        draggable.setAttribute('data-id', ++initDrag.draggablesId);\r\n        draggable.style.left = left + 'px';\r\n        draggable.style.top = top + 'px';\r\n        draggable.style.zIndex = ++initMove.dragParentzIndex;\r\n\r\n        if (detachCubes == 1) { // detach partion is only 1\r\n          cubeOuter = `<div class=\"cube-outer\">`;\r\n          for (var r = 0; r < row; r++) {\r\n            cubeOuter += `<div class=\"cube drag-area\" data-index=\"${r}\" data-seal-type=\"${sealType}\"><img src=\"${src}\" style=\"width: ${width}px; height: ${height}px;\"></div>\r\n          `;\r\n          }\r\n          cubeOuter += `\r\n            </div> \r\n            <div class=\"dot dot-top\"></div>\r\n            <div class=\"dot dot-bottom\"></div>\r\n            <div class=\"dot dot-left\"></div>\r\n            <div class=\"dot dot-right\"></div>     \r\n          `;\r\n\r\n        } else { // detach partion - more than 1\r\n          cubeOuter = '';\r\n          for (var c = 0; c < detachCubes; c++) {\r\n            cubeOuter += `<div class=\"cube-outer drag-area\" data-index=\"${c}\" data-seal-type=\"${sealType}\">`;\r\n            for (var r = 0; r < row; r++) {\r\n              cubeOuter += `<div class=\"cube\"><img src=\"${src}\" style=\"width: ${width}px; height: ${height}px;\"></div>`;\r\n            }\r\n            cubeOuter += `</div>`;\r\n          }\r\n          cubeOuter += `\r\n            <div class=\"dot dot-top\"></div>\r\n            <div class=\"dot dot-bottom\"></div>\r\n            <div class=\"dot dot-left\"></div>\r\n            <div class=\"dot dot-right\"></div>     \r\n          `;\r\n          draggable.classList.add('horizontal');\r\n        }\r\n\r\n        initMove.dropParent = draggable;\r\n        // dropParent = initMove.dropParent;\r\n\r\n        draggable.classList.add('vertical');\r\n        draggable.innerHTML = cubeOuter;\r\n        cvOuter.appendChild(draggable);\r\n\r\n        initMove.init(draggable, 'add');\r\n        draggable.addEventListener('dblclick', detach, false);\r\n      } else {\r\n        console.warn(\"Can't remove from here!\");\r\n      }\r\n    }\r\n  }\r\n  var detachUI = function (e) {\r\n    // console.log('detachUI');\r\n\r\n    var dragParentLeft = dragParent.style.left;\r\n    var dragParentTop = dragParent.style.top;\r\n    var left = parseFloat(dragParentLeft);\r\n    // var top = parseFloat(dragParentTop) + dragParent.getBoundingClientRect().height;\r\n    var cubeHeight = dragParent.querySelector('.drag-area').getBoundingClientRect().height;\r\n    var cubeOuter;\r\n    //  console.lo\r\n    var sealType = dragParent.dataset.sealType;\r\n    var src = dragParent.querySelector('img').src;\r\n    var width = dragParent.querySelector('img').width;\r\n    var height = dragParent.querySelector('img').height;    \r\n\r\n    if (e.target.classList.contains('detach-btn')) { // detach all cubes\r\n      // console.log('detaching All');\r\n\r\n      if (detachType == 'vertical') {\r\n        console.log('vertical detaching all')\r\n\r\n        var cubesToDetach = dragParent.querySelectorAll('.drag-area').length;\r\n        // dragParent.querySelector('.detach-btn').remove();\r\n\r\n        // top one\r\n        for (var i = 1; i < cubesToDetach; i++) {\r\n          dragParent.querySelector('[data-index=\"' + i + '\"]').remove();\r\n          dragParent.classList.remove('detach')\r\n        }\r\n\r\n        // bottom cubes\r\n        for (var i = 1; i < cubesToDetach; i++) {\r\n          var draggable = document.createElement('div');\r\n          draggable.classList.add('draggable-cubes');\r\n          draggable.classList.add('draggable');\r\n          draggable.setAttribute('data-id', ++initDrag.draggablesId);\r\n          draggable.setAttribute('data-seal-type', sealType);\r\n          draggable.style.left = left + 'px';\r\n          draggable.style.top = parseFloat(dragParentTop) + cubeHeight * i + 30 * i + 'px';\r\n          draggable.style.zIndex = ++initMove.dragParentzIndex;\r\n          if(sealType == 'numbers') {\r\n            draggable.setAttribute('data-number-design', dragParent.dataset.numberDesign);\r\n            draggable.setAttribute('data-number-value', dragParent.dataset.numberValue);\r\n          }\r\n\r\n          cubeOuter = `\r\n            <div class=\"cube-outer drag-area\" data-index=\"0\" data-seal-type=\"${sealType}\">\r\n            <div class=\"cube\"><img src=\"${src}\" style=\"width: ${width}px; height: ${height}px;\"></div>\r\n            </div>        \r\n            <div class=\"dot dot-top\"></div>\r\n            <div class=\"dot dot-bottom\"></div>\r\n            <div class=\"dot dot-left\"></div>\r\n            <div class=\"dot dot-right\"></div>     \r\n            <div class=\"detach\"></div>     \r\n          `;\r\n\r\n          draggable.innerHTML = cubeOuter;\r\n          cvOuter.appendChild(draggable);\r\n\r\n          initMove.init(draggable, 'add');\r\n          draggable.addEventListener('dblclick', remove, false);\r\n        }\r\n\r\n      } else {\r\n        console.log('horizontal detaching all')\r\n\r\n      }\r\n    } else { // toggle 'detach-btn'\r\n      if (dragParent.querySelectorAll('.drag-area').length > 1) {\r\n        if (dragParent.classList.contains('detach')) {\r\n          dragParent.classList.remove('detach');\r\n        } else {\r\n          dragParent.classList.add('detach');\r\n        }\r\n      }\r\n    }\r\n  }\r\n  var remove = function (e) {\r\n    // console.log('deleting');\r\n\r\n    // delete complete 'draggable' group\r\n    e.target.closest('.draggable').remove();\r\n  }\r\n\r\n  return {\r\n    isSnapping: isSnapping,\r\n    snapDist: snapDist,\r\n    shortestDist: shortestDist,\r\n    getCoords: getCoords,\r\n    getShortestDist: getShortestDist,\r\n    highlight: highlight,\r\n    snap, snap,\r\n    detachUI, detachUI,\r\n    remove, remove\r\n  }\r\n})();\r\n\r\n// rotate behaviour of tools/widgets/seals\r\nvar initRotate = (function () {\r\n  var startAngle = null;\r\n  var panelRotation = null;\r\n  var rotation = null;\r\n  var rotateBtn = null;\r\n  var rotatable = null;\r\n  var panel;\r\n  var oldPanel = null;\r\n  var panelType = null;\r\n  var d, x, y;\r\n  var oldToolType = null;\r\n  var refPoint = {\r\n    x: 0,\r\n    y: 0\r\n  };\r\n  var R2D = 180 / Math.PI;\r\n\r\n  var start = function (e) {\r\n    console.log('start');\r\n    e.preventDefault();\r\n    mousedown = true;\r\n\r\n    var height, left, top, width, refEl;\r\n    rotateBtn = e.target;\r\n    panel = rotateBtn.closest('.draggable');\r\n    panelType = panel.dataset.panel;\r\n    rotatable = rotateBtn.closest('.rotatable');\r\n\r\n    // reset 'startAngle' if panel is different each time\r\n    if (oldPanel != panel) {\r\n      startAngle = null;\r\n    }\r\n    oldPanel = panel;\r\n\r\n    // cvOuter.classList.add('rotating');\r\n\r\n    refEl = rotatable;\r\n\r\n    // ADD EVENT LISTENER\r\n    if(panelType == \"compass\") {\r\n      if(rotateBtn.classList.contains('rotate-compass')) {\r\n        // calling draw function to make an arc\r\n        oldToolType = initTools.currToolType;\r\n        initTools.currToolType = 'arc';\r\n        initDraw.start(e);\r\n      } else if(rotateBtn.classList.contains('rotate-point') || rotateBtn.classList.contains('rotate-pencil')) {\r\n        refEl = panel.querySelector('.rotate-hand-ref');\r\n      }\r\n    }\r\n\r\n    refObj = refEl.getBoundingClientRect();\r\n    \r\n    top = refObj.top,\r\n    left = refObj.left,\r\n    height = refObj.height,\r\n    width = refObj.width;\r\n    \r\n    refPoint = {\r\n      x: left + (width / 2),\r\n      y: top + (height / 2)\r\n    };\r\n\r\n    x = e.clientX - refPoint.x;\r\n    y = e.clientY - refPoint.y;\r\n\r\n\r\n    if(panelType == 'compass') {\r\n      if(rotateBtn.classList.contains('rotate-point') || rotateBtn.classList.contains('rotate-pencil')) {\r\n        if (panel.dataset.angleHand == undefined) {\r\n          startAngle = Math.floor(R2D * Math.atan2(y, x));\r\n          panel.setAttribute('data-angle-hand', startAngle);\r\n        } else {\r\n          startAngle = panel.dataset.angleHand;\r\n        }\r\n      } else if(rotateBtn.classList.contains('btn')) {\r\n        if (panel.dataset.angle == undefined) {\r\n          startAngle = Math.floor(R2D * Math.atan2(y, x));\r\n          panel.setAttribute('data-angle', startAngle);\r\n        } else {\r\n          startAngle = panel.dataset.angle;\r\n        }          \r\n      } else if(rotateBtn.classList.contains('rotate-compass')) {\r\n        if (panel.dataset.angleCompass == undefined) {\r\n          console.log(1)\r\n          startAngle = Math.floor(R2D * Math.atan2(y, x));\r\n          panel.setAttribute('data-angle-compass', startAngle);\r\n        } else {\r\n          console.log(2)\r\n          startAngle = panel.dataset.angleCompass;\r\n        }     \r\n        if(panel.dataset.angle) {\r\n          console.log(3)\r\n          console.log(startAngle)\r\n          // startAngle += panel.dataset.angle;\r\n        }\r\n      }\r\n    } else {\r\n      if (panel.dataset.angle == undefined) {\r\n        startAngle = Math.floor(R2D * Math.atan2(y, x));\r\n        panel.setAttribute('data-angle', startAngle);\r\n      } else {\r\n        startAngle = panel.dataset.angle;\r\n      }\r\n    }\r\n\r\n    // cvOuter.addEventListener('mousemove', rotate, false);\r\n    cvOuter.onmousemove = function(e) {\r\n      rotate(e);\r\n    }\r\n    cvOuter.addEventListener('mouseup', end, false);\r\n  };\r\n\r\n  var end = function (e) {\r\n    // console.log('end');\r\n    mousedown = mousemove = false\r\n    \r\n    // cvOuter.classList.remove('rotating');\r\n    \r\n    // ADD EVENT LISTENER\r\n    // if(panelType == \"compass\") {\r\n    //   if(rotateBtn.classList.contains('rotate-compass')) {\r\n    //     cv.removeEventListener('mousedown', initDraw.start, false);\r\n    //   }\r\n    // }\r\n    initTools.currToolType = oldToolType;\r\n\r\n    cvOuter.onmousemove = null;\r\n    // cvOuter.removeEventListener('mousemove', rotate, false);\r\n    cvOuter.removeEventListener('mouseup', end, false);\r\n  };\r\n\r\n  var rotate = function (e) {\r\n    if(mousedown && mousemove)\r\n    console.log('rotate');\r\n    mousemove = true;\r\n\r\n    e.preventDefault();\r\n\r\n    x = e.clientX - refPoint.x;\r\n    y = e.clientY - refPoint.y;\r\n    d = Math.floor(R2D * Math.atan2(y, x));\r\n\r\n    rotation = d - startAngle;\r\n    // console.log(d, startAngle, rotation)\r\n    \r\n    if (panelType == 'clock') {\r\n      rotatable.style.transform = \"translateY(-50%) rotate(\" + d + \"deg)\";\r\n    } else if(panelType == \"compass\") {\r\n      if(rotateBtn.classList.contains('rotate-point')) {\r\n        // if(d > 85) d = 85; else\r\n        // if(d < 50) d = 50;\r\n        // d = d + panelRotation;\r\n        rotatable.style.transform = \"translateY(-50%) rotate(\" + d + \"deg)\";\r\n      } else if(rotateBtn.classList.contains('rotate-pencil')) {\r\n        if(d > 130) d = 130; else\r\n        if(d < 95) d = 95;\r\n        rotatable.style.transform = \"translateY(-50%) rotate(\" + d + \"deg)\";\r\n      } else if(rotateBtn.classList.contains('rotate-compass')){\r\n        // rotatable.style.transform = \"rotate(\" + rotation + \"deg)\";\r\n      } else {\r\n        rotatable.style.transform = \"rotate(\" + rotation + \"deg)\";\r\n      }\r\n    } else {\r\n      rotatable.style.transform = \"rotate(\" + rotation + \"deg)\";\r\n    }\r\n  };\r\n\r\n  // Explicitly reveal public pointers to the private functions \r\n  // that we want to reveal publicly\r\n\r\n  return {\r\n    start: start\r\n  }\r\n})();\r\n\r\n// scale sets logics\r\nvar initScale = (function (e) {\r\n  // console.log('scaling');\r\n\r\n  var startPoint, currPoint;\r\n  var panel = document.querySelector('[data-panel=\"protractor\"]');\r\n  var w = null;\r\n  var h = null;\r\n  var d = null;\r\n  var ratio = null;\r\n  \r\n  var start = function (e) {\r\n    // console.log('start');\r\n\r\n    w = panel.getBoundingClientRect().width;\r\n    h = panel.getBoundingClientRect().height;\r\n    ratio = w/h;\r\n    startPoint = math.getMousePosition(e, cv);\r\n    // console.log('startPoint: ', startPoint.x)\r\n\r\n    cvOuter.addEventListener('mousemove', scale, false);\r\n    cvOuter.addEventListener('mouseup', end, false);\r\n  }\r\n  var scale = function (e) {\r\n    // console.log('scale');\r\n    e.preventDefault();\r\n\r\n    currPoint = math.getMousePosition(e, cv);\r\n    d = currPoint.x - startPoint.x;\r\n    // console.log(startPoint.x, currPoint.x, d)\r\n\r\n    console.log(w, d, ratio, w+d, w*ratio)\r\n    if(ratio > 1) { // width is more\r\n      panel.style.width = w + d + 'px';\r\n      panel.style.height = h + (d*ratio) + 'px';\r\n    } else { // height is more\r\n\r\n    }\r\n  }\r\n  var end = function (e) {\r\n    // console.log('end');\r\n\r\n    cvOuter.removeEventListener('mousemove', scale, false);\r\n    cvOuter.removeEventListener('mouseup', end, false);\r\n  }\r\n\r\n  return {\r\n    start: start\r\n  }\r\n})()\r\n\r\n// calculator logic\r\nvar initCalc = (function (e) {\r\n\r\n  var num = \"\";\r\n  var calculate = function (e) {\r\n    // console.log('calculating');\r\n\r\n    var result = document.querySelector('[data-panel=\"calculator\"] #result');\r\n    var buttonType = e.target.closest('g[data-button-type]').dataset.buttonType;\r\n    var buttonValue = e.target.closest('g[data-button-type]').dataset.buttonValue;\r\n\r\n    if (buttonType == \"num\") {\r\n      num += buttonValue;\r\n      result.innerHTML = num;\r\n    } else if (buttonType == \"func\") {\r\n      switch (buttonValue) {\r\n        case \"=\":\r\n          num = eval(num).toString();\r\n          break;\r\n        case \"<-\":\r\n          num = num.slice(0, -1);\r\n          break;\r\n        case \"c\":\r\n        case \"ac\":\r\n          num = \"\";\r\n          break;\r\n        case \"*\":\r\n        case \"/\":\r\n        case \"+\":\r\n        case \"-\":\r\n          num += \" \" + buttonValue + \" \";\r\n          break;\r\n      }\r\n      result.innerHTML = num;\r\n    }\r\n  }\r\n\r\n  return {\r\n    calculate: calculate\r\n  }\r\n})();\r\n\r\n// abacus logic\r\nvar initAbacus = function () {\r\n  window.onload = init\r\n  function init() {\r\n    mousedown = 0;\r\n    body = document.querySelector('body');\r\n    body.addEventListener('mousedown', function () {\r\n      mousedown = 1;\r\n    });\r\n    body.addEventListener('mouseup', function () {\r\n      mousedown = 0;\r\n    });\r\n    upper_part = document.querySelectorAll('.upper_layer');\r\n    upper_part.forEach(function (x) {\r\n      x.addEventListener('click', change_pos.bind(null, event, x));\r\n      x.addEventListener('mousemove', reset_upper_boxes.bind(null, event, x));\r\n    });\r\n    // check = document.querySelector(\"#Group_389\");\r\n    // check.setAttribute('transform','translate(0,-43)');\r\n\r\n    lower_part = document.querySelectorAll('.bottom_boxes');\r\n    lower_part.forEach(function (x) {\r\n      x.addEventListener('click', change_pos_lower.bind(null, event, x));\r\n      x.addEventListener('mousemove', reset_lower_boxes.bind(null, event, x));\r\n    });\r\n  }\r\n\r\n  function reset_lower_boxes(a, evt, c) {\r\n    column_id = evt.parentNode.getAttribute('id');\r\n    boxes = document.querySelectorAll('#' + column_id + ' .bottom_boxes');\r\n    if (mousedown) {\r\n      if (evt.dataset.state == \"up\") {\r\n        for (i = 0; i <= 3; ++i) {\r\n          boxes[i].setAttribute('transform', 'translate(0,0)');\r\n          boxes[i].dataset.state = \"down\";\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function reset_upper_boxes(a, evt, c) {\r\n    if (mousedown) {\r\n      evt.setAttribute('transform', 'translate(0,0)');\r\n    }\r\n  }\r\n\r\n  function change_pos_lower(a, evt, c) {\r\n    column_id = evt.parentNode.getAttribute('id');\r\n    boxes = document.querySelectorAll('#' + column_id + ' .bottom_boxes');\r\n    till = evt.dataset.pos;\r\n    if (evt.dataset.state == \"down\") {\r\n      for (i = 0; i <= till; ++i) {\r\n        boxes[i].setAttribute('transform', 'translate(0,-43)');\r\n        boxes[i].dataset.state = \"up\";\r\n      }\r\n    }\r\n    else {\r\n      for (i = till; i <= 3; ++i) {\r\n        boxes[i].setAttribute('transform', 'translate(0,0)');\r\n        boxes[i].dataset.state = \"down\";\r\n      }\r\n    }\r\n  }\r\n\r\n  function change_pos(a, evt, c) {\r\n    evt.style.background = 'red';\r\n    if (evt.dataset.pos == \"down\") {\r\n      evt.setAttribute('transform', 'translate(0,-20)');\r\n      evt.dataset.pos = \"up\";\r\n    }\r\n    else {\r\n      evt.setAttribute('transform', 'translate(0,0)');\r\n      evt.dataset.pos = \"down\";\r\n    }\r\n  }\r\n\r\n}\r\n// initAbacus();\r\n\r\n// math functions - mostly trigonometry\r\nvar math = (function(e) {\r\n  var toolDrawingOffset = 50;\r\n  var slope = 0;\r\n  var inRange = false;\r\n\r\n  var parseToFloat = function(number, decimal) {\r\n    return parseFloat(number.toFixed(decimal));\r\n  }\r\n\r\n  // returns 'left' and 'right' position of given element\r\n  var getElPosition = function(el) {\r\n    var pos = {\r\n      left: el.getBoundingClientRect().left,\r\n      right: el.getBoundingClientRect().top\r\n    };\r\n    return pos;\r\n  }\r\n\r\n  // returns the mouse position w.r.t given element\r\n  var getMousePosition = function(e, el) {\r\n    var pos = getElPosition(el);\r\n    var point = {\r\n      x: 0,\r\n      y: 0\r\n    };\r\n    point.x = parseFloat((((e.type == 'touchstart' || e.type == 'touchmove') ? e.touches[0].clientX : e.clientX) - pos.left).toFixed(2));\r\n    point.y = parseFloat((((e.type == 'touchstart' || e.type == 'touchmove') ? e.touches[0].clientY : e.clientY) - pos.right).toFixed(2));\r\n    return point;\r\n  }\r\n\r\n  // not useing for now\r\n  var getLineEquation = function() {\r\n    // var m = slope;\r\n    // // y - y1 = m (x - x1) || mx - y + y1 - mx1 = 0\r\n    // // return `y-${lines.l12.p1.y} = ${m} (x-${lines.l12.p1.x})`;\r\n    // // y - mx = y1 - m*x1\r\n    // return `y - ${m}x = ${lines.l12.p1.y - (m * lines.l12.p1.x)}`;\r\n  }\r\n\r\n  // get points coordinates with in the set\r\n  var getSetPoints = function(currSetType) {\r\n    var pointsObj = {};\r\n    var set = document.querySelector('[data-panel=\"'+currSetType+'\"]');\r\n    var pointsEl = set.querySelectorAll('.point');\r\n    var canvasPosition = getElPosition(cv);\r\n    for (let i = 0; i < pointsEl.length; i++) {\r\n      var pointObj = {\r\n        x: '',\r\n        y: ''\r\n      };\r\n      var cvLeft = canvasPosition.left;\r\n      var cvTop = canvasPosition.right;\r\n      var pointLeft = pointsEl[i].getBoundingClientRect().left;\r\n      var pointTop = pointsEl[i].getBoundingClientRect().top;\r\n      var pointWidth = pointsEl[i].getBoundingClientRect().width;\r\n      var pointHeight = pointsEl[i].getBoundingClientRect().height;\r\n  \r\n      pointObj['x'] = parseFloat((pointLeft + (pointWidth / 2) - cvLeft).toFixed(2));\r\n      pointObj['y'] = parseFloat((pointTop + (pointHeight / 2) - cvTop).toFixed(2));\r\n      pointsObj[i + 1] = pointObj;\r\n    }\r\n    return pointsObj;\r\n  }\r\n\r\n  var getLines = function(e) {\r\n    var lines = {};\r\n    var pointsObj = math.getSetPoints(initTools.currSetType);\r\n\r\n    var pointsLength = Object.size(pointsObj);\r\n  \r\n    for (let i = 1; i <= pointsLength; i++) {\r\n      var j = (i == pointsLength) ? 1 : i + 1;\r\n      var line = {\r\n        'p1': pointsObj[i],\r\n        'p2': pointsObj[j]\r\n      };\r\n      lines['l' + i + j] = line;\r\n    }\r\n    return lines;\r\n  }\r\n\r\n  var getSlope = function(line) {\r\n    // m = (y2 - y1) / (x2 - x1)\r\n    var m = (line.p2.y - line.p1.y) / (line.p2.x - line.p1.x);\r\n    return math.parseToFloat(m, 2);\r\n  }\r\n  \r\n  var calculatePerpendicularDistFromLine = function(line, point, m) {\r\n    if (m == Infinity || m == -Infinity) return Math.abs(line.p1.x - point.x);\r\n    return Math.abs((m * point.x - point.y + line.p1.y - m * line.p1.x) / (Math.sqrt(1 + m * m)));\r\n  }\r\n\r\n  var getCoords = function(pointsObj, side, point, m) {\r\n    // console.log('getCoord');\r\n\r\n    // y = m (x - x1) + y1\r\n    // y = m (x - x2) + y2\r\n    // console.log('Eq1: ', `y = ${m}(x - ${startPoint.x}) + ${startPoint.y}`)\r\n    // console.log('Eq2: ', `y = ${-1/m}(x - ${currPoint.x}) + ${currPoint.y}`)    \r\n\r\n    // x coordinate of intersection of two lines\r\n    // var x = (m * (y2 - y1) + m * m * x1 - x2) / ((m * m) + m)\r\n\r\n    var x, y, _x;\r\n    var s = initDraw.strokeWidth/2;\r\n    \r\n    if (m == 0) {\r\n      if(side == 1) {\r\n        s = (pointsObj[1].x < pointsObj[3].x) ? -s : s;\r\n      } else {\r\n        s = (pointsObj[1].x < pointsObj[3].x) ? s : -s;\r\n      }\r\n      x = point.x;\r\n      y = pointsObj[side].y + s;\r\n    } else if (m == Infinity || m == -Infinity) {\r\n      if(side == 1) {\r\n        s = (pointsObj[1].x < pointsObj[3].x) ? -s : s;\r\n      } else {\r\n        s = (pointsObj[1].x < pointsObj[3].x) ? s : -s;\r\n      }\r\n      x = pointsObj[side].x + s;\r\n      y = point.y;\r\n    } else {\r\n      // points coords on scale\r\n      x1 = ((point.x / m) + (m * pointsObj[side].x) + point.y - pointsObj[side].y) / (m + (1 / m));\r\n      y1 = m * (x1 - pointsObj[side].x) + pointsObj[side].y;\r\n      \r\n      // points coords modified as per stroke width\r\n      m = -1/m;\r\n      if(pointsObj[1].x > pointsObj[4].x) {\r\n        if(side == 1) {\r\n          x = x1 + Math.sqrt((s*s)/(1+m*m)); \r\n        } else if(side == 3) {\r\n          x = x1 - Math.sqrt((s*s)/(1+m*m)); \r\n        }\r\n        y = m*(x-x1)+y1\r\n      } else {\r\n        if(side == 1) {\r\n          x = x1 - Math.sqrt((s*s)/(1+m*m)); \r\n        } else if(side == 3) {\r\n          x = x1 + Math.sqrt((s*s)/(1+m*m)); \r\n        }\r\n        y = m*(x-x1)+y1\r\n      }\r\n    }\r\n    // console.log(`side: ${side} m: ${m}`)\r\n\r\n    return {\r\n      x: x,\r\n      y: y\r\n    }\r\n  }\r\n\r\n  var sideAndRange = function(currPoint) {\r\n    var lines = getLines();\r\n\r\n    // to check if point is between parallel lines\r\n    // d = (x−x1)(y2−y1)−(y−y1)(x2−x1)\r\n    var check12 = (currPoint.x - (lines.l12.p1.x)) * (lines.l12.p2.y - lines.l12.p1.y) - (currPoint.y - lines.l12.p1.y) * (lines.l12.p2.x - lines.l12.p1.x);\r\n    var check34 = (currPoint.x - (lines.l34.p1.x)) * (lines.l34.p2.y - lines.l34.p1.y) - (currPoint.y - lines.l34.p1.y) * (lines.l34.p2.x - lines.l34.p1.x);\r\n  \r\n    var check23 = (currPoint.x - (lines.l23.p1.x)) * (lines.l23.p2.y - lines.l23.p1.y) - (currPoint.y - lines.l23.p1.y) * (lines.l23.p2.x - lines.l23.p1.x);\r\n    var check41 = (currPoint.x - (lines.l41.p1.x)) * (lines.l41.p2.y - lines.l41.p1.y) - (currPoint.y - lines.l41.p1.y) * (lines.l41.p2.x - lines.l41.p1.x);\r\n  \r\n    var isInBtwParallelLines = ((check12 < 0 && check34 < 0) || (check12 > 0 && check34 > 0) || (check23 < 0 && check41 < 0) || (check23 > 0 && check41 > 0)) ? true : false;\r\n  \r\n    var line;\r\n    var perpendicularDist;\r\n    var side = '';\r\n    // to check if point lies between parallel lines\r\n    if (isInBtwParallelLines) {\r\n      line = ((check12 < 0 && check34 < 0) || (check12 > 0 && check34 > 0)) ? '12_34' : '23_41';\r\n      // checking nearest line\r\n      if (line == '12_34') {\r\n        slope = getSlope(lines.l23);\r\n        var d23 = calculatePerpendicularDistFromLine(lines.l23, currPoint, slope);\r\n        var d41 = calculatePerpendicularDistFromLine(lines.l41, currPoint, slope);\r\n        if (d23 < d41) {\r\n          perpendicularDist = d23;\r\n          nearestLine = lines.l23\r\n          side = 2;\r\n          startPoint = currPoint;\r\n        } else {\r\n          perpendicularDist = d41;\r\n          nearestLine = lines.l41;\r\n          side = 4;\r\n        }\r\n      } else {\r\n        slope = getSlope(lines.l12);\r\n        var d12 = calculatePerpendicularDistFromLine(lines.l12, currPoint, slope);\r\n        var d34 = calculatePerpendicularDistFromLine(lines.l34, currPoint, slope);\r\n        if (d12 < d34) {\r\n          perpendicularDist = d12;\r\n          nearestLine = lines.l12;\r\n          side = 1;\r\n        } else {\r\n          perpendicularDist = d34;\r\n          nearestLine = lines.l34\r\n          side = 3;\r\n        }\r\n      }\r\n      if (toolDrawingOffset >= perpendicularDist) {\r\n        if(side == 1 || side == 3) {\r\n          inRange = true;\r\n        } else {\r\n          inRange = false;\r\n        }\r\n      } else {\r\n        // make it false if not drawing\r\n        // if (!isDrawingModeOn) \r\n        inRange = false;\r\n      }\r\n    } else {\r\n      // if (!isDrawingModeOn) \r\n      inRange = false;\r\n    }\r\n\r\n    // just for debugging\r\n    // console.log(perpendicularDist, toolDrawingOffset)\r\n    // console.log('inRange, side, slope: ', inRange, side, math.slope);\r\n\r\n    return {\r\n      inRange: inRange,\r\n      side: side,\r\n      slope, slope\r\n    }\r\n  }  \r\n\r\n  return {\r\n    parseToFloat: parseToFloat,\r\n    getMousePosition: getMousePosition,\r\n    sideAndRange: sideAndRange,\r\n    getSetPoints: getSetPoints,\r\n    getCoords: getCoords\r\n  }\r\n})();\r\n\r\ndocument.querySelector('[data-tool-type1=\"pen\"]').click();"],"file":"script.min.js"}