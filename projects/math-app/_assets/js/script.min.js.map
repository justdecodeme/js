{"version":3,"sources":["script.js"],"names":["cv","document","getElementById","cvOuter","whichTransitionEvent","t","el","createElement","transitions","transition","OTransition","MozTransition","WebkitTransition","undefined","style","Object","size","obj","key","hasOwnProperty","initTools","toolsUniverse","toolsPlanets","querySelectorAll","toolsPlanetSets","toolsPlanetPens","minimizeToggleBtn","offsetWidth","toolsPlanetSetsBtn","toolsPlanetPensBtn","currToolType","currSetType","forEach","toolsPlanet","toolsSatellites","id","toolsSatellitesWidth","querySelector","toolsPlanetWidth","totalOffset","length","toolsSatellite","i","n","x","Math","round","cos","PI","y","sin","left","top","classList","contains","toolGroupType","dataset","rotation","radius","toString","add","updateToolType1","target","oldToolBtn","remove","removeEventListener","initDraw","start","toolType1","addEventListener","updateToolType2","strokeColor","value","updateToolsGroup","isPrimary","isSecondary","parent","substr","setAttribute","scaleSecActiveBtns","strokeOpacity","parseFloat","strokeWidth","src","getAttribute","e","toolType2","ispanelBtn","panelBtn","undo","redo","clear","initPanel","toggle","startPoint","polylineTag","arcTag","points","m","strokeOpacityEl","strokeWidthEl","mousedownDraw","mousemoveDraw","currId","index","currPoint","undoStack","redoStack","inRangeObj","inStartedInRange","pointsObj","targetPoint","arc","center","point","dotRadius","end","push","Elements","Id","Action","draw","preventDefault","math","getMousePosition","sideAndRange","inRange","getCoords","side","polylineInArc","getSetPoints","strokeColorPen","strokeWidthPen","strokeWidthMarker","slope","console","log","sqrt","parseToFloat","innerHTML","ele","lastAction","pop","parentNode","removeChild","appendChild","shape","clearedEles","initMove","startX","startY","endX","endY","dragParent","dropParent","oldDragParent","init","draggable","listener","dragAreas","dragArea","mousemove","closest","zIndex","dragParentzIndex","panelSet","highlightPanel","panel","initCubes","move","initDrag","sealType","trashPanel","offsetLeft","offsetBottom","getBoundingClientRect","height","offsetTop","bottom","getShortestDist","shortestDist","snapDist","highlight","snap","dragEloffsetX","dragEloffsetY","enter","leave","over","drop","dataTransfer","getData","width","numberDesign","numberValue","totalSealsAllowed","sealTypes","detachUI","draggablesId","offsetX","offsetY","dropElHeight","alert","setData","fetchSeals","sealPanelContent","values","type","numType","numValue","oldPanel","panelType","panelPosObj","panelCloseBtn","panelScaleFlipBtn","panelScaleBtn","draggableSeals","rotateBtns","close","this","panelFlipBtn","getElementsByClassName","initRotate","initScale","flip","scaleFlip","buttons","initCalc","calculate","beads","leftCol","initAbacus","changePos","resetStart","bringInFront","secActiveBtns","panelGroupBtn","mode","mousePosObj","panelPos","x1","x2","y1","y2","dropCoords","row","col","dragParentLeft","dragParentTop","snapType","cubeLimit","cubeOuter","detachType","transitionEvent","dropParentCubeCount","dragParentCubeCount","totalCubes","r","c","canBeAddedCubes","remainingCubes","transitionEndCallback","cubeHeight","cubeWidth","cubesToDetach","isSnapping","dropDotCoord_0","dropDotCoord_1","draggableCubes","dropCoord","0","1","j","dragCoord","d","toFixed","flag","oldHighlight","angle","mousedownRotate","mousemoveRotate","startAngle","rotateBtn","oldRotateBtn","resetRotation","rotatable","currAngle","oldToolType","refPoint","R2D","rotate","clientX","clientY","floor","atan2","abs","transform","isNaN","refEl","refObj","angleCompassOnly","angleCompassDraw","substring","w","h","ratio","scale","num","result","buttonType","buttonValue","eval","slice","reset","layer","state","totalBeads","pos","resetEnd","count","getElPosition","right","getSlope","line","p2","p1","calculatePerpendicularDistFromLine","Infinity","number","decimal","touches","perpendicularDist","lines","pointsLength","getLines","check12","l12","check34","l34","check23","l23","check41","l41","d23","d41","nearestLine","d12","d34","pointsEl","canvasPosition","pointObj","cvLeft","cvTop","pointLeft","pointTop","pointWidth","pointHeight","s"],"mappings":"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","sourcesContent":["/*******************************/\r\n//     HTML elements\r\n/*******************************/\r\nvar cv = document.getElementById('cv');\r\nvar cvOuter = document.getElementById('cvOuter');\r\n\r\n/*******************************/\r\n//     functions - helping\r\n/*******************************/\r\n// returns object length\r\nObject.size = function (obj) {\r\n  var size = 0, key;\r\n  for (key in obj) {\r\n    if (obj.hasOwnProperty(key)) size++;\r\n  }\r\n  return size;\r\n};\r\n\r\nfunction whichTransitionEvent() {\r\n  var t,\r\n    el = document.createElement(\"fakeelement\");\r\n\r\n  var transitions = {\r\n    \"transition\": \"transitionend\",\r\n    \"OTransition\": \"oTransitionEnd\",\r\n    \"MozTransition\": \"transitionend\",\r\n    \"WebkitTransition\": \"webkitTransitionEnd\"\r\n  }\r\n\r\n  for (t in transitions) {\r\n    if (el.style[t] !== undefined) {\r\n      return transitions[t];\r\n    }\r\n  }\r\n}\r\n\r\n/*******************************/\r\n//     functions - specific\r\n/*******************************/\r\n// init tools satellite UI and and tool events\r\nvar initTools = (function () {\r\n  // console.log('init')\r\n  var toolsUniverse = document.getElementById('toolsUniverse');\r\n  var toolsPlanets = toolsUniverse.querySelectorAll('.tools-planet');\r\n  var toolsPlanetSets = document.getElementById('toolsPlanetSets');\r\n  var toolsPlanetPens = document.getElementById('toolsPlanetPens');\r\n  var toolsUniverseWidth = toolsUniverse.offsetWidth;\r\n\r\n  var minimizeToggleBtn = document.getElementById('minimizeToggleBtn');\r\n  var toolsPlanetSetsBtn = document.getElementById('toolsPlanetSetsBtn');\r\n  var toolsPlanetPensBtn = document.getElementById('toolsPlanetPensBtn');\r\n\r\n  var currToolType = currSetType = null;\r\n\r\n  // draw satellite circles\r\n  toolsPlanets.forEach(function (toolsPlanet) {\r\n    var toolsSatellites = toolsPlanet.querySelectorAll('#' + toolsPlanet.id + '>.tools-satellite.primary');\r\n    var toolsSatellitesWidth = toolsPlanet.querySelector('.tools-satellite:first-child').offsetWidth;\r\n    var toolsPlanetWidth = toolsPlanet.offsetWidth;\r\n    var totaltoolsSatellites = toolsSatellites.length;\r\n    // var rotation = 360 / totaltoolsSatellites;\r\n    var rotation = 30;\r\n    // var radius = (toolsUniverseWidth - toolsSatellitesWidth) / 2;\r\n    var radius = 110;\r\n    var totalOffset = (toolsPlanetWidth - toolsSatellitesWidth) / 2;\r\n    // var totalOffset = 60;\r\n\r\n    toolsSatellites.forEach(function (toolsSatellite, i) { // place primary tools\r\n      var n = i - 3; // to start from top side instead of rigth side\r\n      var x = Math.round(Math.cos((rotation * n) * (Math.PI / 180)) * radius);\r\n      var y = Math.round(Math.sin((rotation * n) * (Math.PI / 180)) * radius);\r\n      var left = Math.round(x + totalOffset);\r\n      var top = Math.round(y + totalOffset);\r\n      toolsSatellite.style.left = left + \"px\";\r\n      toolsSatellite.style.top = top + \"px\";\r\n\r\n      if (toolsSatellite.classList.contains('has-child')) { // place secondary tools if any\r\n        let toolGroupType = toolsSatellite.dataset.toolGroupType;\r\n        let toolsSatellites = toolsPlanet.querySelectorAll('[data-tool-group-type=\"' + toolGroupType + '\"].secondary');\r\n        let rotation = 19;\r\n        let radius = 165;\r\n\r\n        toolsSatellites.forEach(function (toolsSatellite, i) {\r\n          let n = i - 4.5;\r\n\r\n          switch (toolGroupType) {\r\n            case \"pastel1\": n = i + .7;\r\n              break;\r\n            case \"pastel2\": n = i + 2.2;\r\n              break;\r\n            case \"stroke\": n = i + 3.8;\r\n              break;\r\n            case \"opacity\": n = i + 5.2;\r\n              break;\r\n            case \"scale\": n = i - 4.5;\r\n              break;\r\n            case \"set-square\": n = i - 2.2;\r\n              break;\r\n          }\r\n\r\n          let y = Math.sin((rotation * n) * (Math.PI / 180)) * radius;\r\n          let x = Math.cos((rotation * n) * (Math.PI / 180)) * radius;\r\n          toolsSatellite.style.top = (y + totalOffset).toString() + \"px\";\r\n          toolsSatellite.style.left = (x + totalOffset).toString() + \"px\";\r\n        })\r\n      }\r\n    });\r\n  });\r\n  // add 'active' class to one of the 'tools-planet'\r\n  toolsPlanetSets.classList.add('active');\r\n  toolsPlanetSetsBtn.classList.add('active');\r\n  toolsPlanetSetsBtn.classList.add('temp-active');\r\n\r\n  var clickHandler = function (e) {\r\n    // console.log(e.target.dataset);\r\n\r\n    var target = e.target;\r\n    var id = target.id;\r\n    var toolType1 = target.dataset.toolType1; // pen, marker, eraser\r\n    var toolType2 = target.dataset.toolType2; // pastels 1-4\r\n    var toolGroupType = target.dataset.toolGroupType;\r\n    var isPrimary = target.classList.contains('primary');\r\n    var isSecondary = target.classList.contains('secondary');\r\n    var ispanelBtn = target.dataset.panelBtn;\r\n\r\n    if (id == \"minimizeToggleBtn\") {\r\n      if (document.querySelector('.tools-planet.active')) {\r\n        minimizeToggleBtn.classList.add('active');\r\n        toolsUniverse.classList.remove('active');\r\n        toolsPlanetSetsBtn.classList.remove('active');\r\n        toolsPlanetPensBtn.classList.remove('active');\r\n        document.querySelector('.tools-planet.active').classList.add('temp-active');\r\n        document.querySelector('.tools-planet.active').classList.remove('active');\r\n      } else {\r\n        toolsUniverse.classList.add('active');\r\n        minimizeToggleBtn.classList.remove('active');\r\n        document.querySelector('.tools-toggle .temp-active').classList.add('active');\r\n        document.querySelector('.tools-planet.temp-active').classList.add('active');\r\n        document.querySelector('.tools-planet.temp-active').classList.remove('temp-active');\r\n      }\r\n    } else if (id == \"toolsPlanetPensBtn\") {\r\n      toolsPlanetSetsBtn.classList.remove('active');\r\n      toolsPlanetSetsBtn.classList.remove('temp-active');\r\n      toolsPlanetSets.classList.remove('active');\r\n\r\n      toolsPlanetPensBtn.classList.add('active');\r\n      toolsPlanetPensBtn.classList.add('temp-active');\r\n      toolsPlanetPens.classList.add('active');\r\n      toolsUniverse.classList.add('active');\r\n\r\n      minimizeToggleBtn.classList.remove('active');\r\n    } else if (id == \"toolsPlanetSetsBtn\") {\r\n      toolsPlanetPensBtn.classList.remove('active');\r\n      toolsPlanetPensBtn.classList.remove('temp-active');\r\n      toolsPlanetPens.classList.remove('active');\r\n\r\n      toolsPlanetSetsBtn.classList.add('active');\r\n      toolsPlanetSetsBtn.classList.add('temp-active');\r\n      toolsPlanetSets.classList.add('active');\r\n      toolsUniverse.classList.add('active');\r\n\r\n      minimizeToggleBtn.classList.remove('active');\r\n    } else if (id == 'undo') {\r\n      initDraw.undo();\r\n    } else if (id == 'redo') {\r\n      initDraw.redo();\r\n    } else if (id == 'clear') {\r\n      initDraw.clear();\r\n    } else if (toolType1) {\r\n      updateToolType1(target);\r\n    } else if (toolType2) {\r\n      updateToolType2(target);\r\n    } else if (ispanelBtn) {\r\n      initPanel.toggle(target);\r\n    }\r\n    if (toolGroupType) {\r\n      updateToolsGroup(toolGroupType, target, isPrimary, isSecondary);\r\n    }\r\n  }\r\n\r\n  // // pen, marker, eraser\r\n  var updateToolType1 = function (target) {\r\n    // console.log('updateToolType1');\r\n\r\n    // remove 'active' class from previous 'active' button\r\n    // and make 'currToolType' null\r\n    var oldToolBtn = document.querySelector('#toolsPlanetPens [data-tool-type1].active');\r\n    if (oldToolBtn) {\r\n      oldToolBtn.classList.remove('active');\r\n      initTools.currToolType = null;\r\n      cv.removeEventListener('mousedown', initDraw.start, false);\r\n    }\r\n    // add 'active' class to current 'clicked' button if it is not the 'active' button already\r\n    // and update 'currToolType' value\r\n    if (oldToolBtn != target) {\r\n      target.classList.add('active');\r\n      initTools.currToolType = target.dataset.toolType1;\r\n      cv.addEventListener('mousedown', initDraw.start, false);\r\n    }\r\n  }\r\n\r\n  // four pastels buttons\r\n  var updateToolType2 = function (target) {\r\n    // console.log('updateToolType2')\r\n\r\n    // remove 'active' class from previous 'active' button\r\n    var oldToolBtn = document.querySelector('#toolsPlanetPens [data-tool-type2].active');\r\n    if (oldToolBtn && oldToolBtn != target) {\r\n      oldToolBtn.classList.remove('active');\r\n      target.classList.add('active');\r\n    }\r\n\r\n    initDraw.strokeColor = target.dataset.value;\r\n  }\r\n\r\n  // handling of satellite buttons which has childrens\r\n  var updateToolsGroup = function (toolGroupType, target, isPrimary, isSecondary) {\r\n    // console.log('updateToolsGroup');\r\n\r\n    if (isPrimary) {\r\n      // console.log('isPrimary')\r\n\r\n      // remove 'show-child' class if present\r\n      if (target.classList.contains('show-child')) {\r\n        target.classList.remove('show-child')\r\n      } else { // add 'show-child' on clicked element before that remove from other element if present\r\n        if (document.querySelector('.has-child.show-child')) {\r\n          document.querySelector('.has-child.show-child').classList.remove('show-child');\r\n        }\r\n        target.classList.add('show-child');\r\n      }\r\n    } else if (isSecondary) {\r\n      // console.log('isSecondary');\r\n\r\n      var parent = document.querySelector('[data-tool-group-type=\"' + toolGroupType + '\"].primary');\r\n      var oldToolBtn = document.querySelector('[data-tool-group-type=\"' + toolGroupType + '\"].secondary.active');\r\n\r\n      // make pastel group behave like first two pastel buttons\r\n      if (toolGroupType.substr(0, 6) == 'pastel') {\r\n        document.querySelector('[data-tool-type2].primary.active').classList.remove('active');\r\n        parent.setAttribute('data-tool-type2', 'pastel');\r\n        toolGroupType = \"pastel\";\r\n      }\r\n\r\n      if (toolGroupType == \"scale\" || toolGroupType == \"set-square\") {\r\n        oldToolBtn = null;\r\n      }\r\n\r\n      // remove 'active' class from old child having 'active' class\r\n      if (oldToolBtn) {\r\n        oldToolBtn.classList.remove('active');\r\n      }\r\n\r\n      if (toolGroupType == 'scale' || toolGroupType == 'set-square') {\r\n        if (toolGroupType == 'scale') {\r\n          var scaleSecActiveBtns = document.querySelectorAll('[data-tool-group-type=\"scale\"].secondary.active');\r\n        } else if (toolGroupType == \"set-square\") {\r\n          var scaleSecActiveBtns = document.querySelectorAll('[data-tool-group-type=\"set-square\"].secondary.active');\r\n        }\r\n        if (scaleSecActiveBtns.length > 0) {\r\n          parent.classList.add('active');\r\n        } else {\r\n          parent.classList.remove('active');\r\n        }\r\n      } else {\r\n        target.classList.add('active');\r\n        parent.classList.add('active');\r\n      }\r\n      parent.classList.remove('show-child');\r\n\r\n\r\n      switch (toolGroupType) {\r\n        case \"opacity\": initDraw.strokeOpacity = parseFloat(target.dataset.value);\r\n          break;\r\n        case \"stroke\": initDraw.strokeWidth = parseFloat(target.dataset.value);\r\n          break;\r\n        case \"pastel\":\r\n          var src = target.querySelector('img').getAttribute('src');\r\n          parent.querySelector('img').setAttribute('src', src);\r\n          parent.setAttribute('data-value', target.dataset.value)\r\n          initDraw.strokeColor = target.dataset.value;\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  // click listener on tools\r\n  toolsUniverse.addEventListener('click', clickHandler, false);\r\n\r\n  return {\r\n    currToolType: currToolType,\r\n    currSetType: currSetType\r\n  }\r\n})();\r\n\r\n// draw, undo, redo, clear functions\r\nvar initDraw = (function () {\r\n  // console.log('initDraw');\r\n\r\n  // initial stroke properties from HTML elements\r\n  var strokeOpacityEl = document.querySelector('[data-tool-group-type=\"opacity\"].secondary.active');\r\n  var strokeOpacity = parseFloat(strokeOpacityEl.dataset.value);\r\n\r\n  var strokeWidthEl = document.querySelector('[data-tool-group-type=\"stroke\"].secondary.active');\r\n  var strokeWidth = parseFloat(strokeWidthEl.dataset.value);\r\n  // var strokeWidth = 50;\r\n\r\n  var strokeColorEl = document.querySelector('[data-tool-type2=\"pastel\"].primary.active');\r\n  var strokeColor = strokeColorEl.dataset.value;\r\n\r\n  var mousedownDraw = mousemoveDraw = false;\r\n  var currId = null;\r\n  var index = 0;\r\n  var startPoint;\r\n  var currPoint = null;\r\n  var undoStack = [];\r\n  var redoStack = [];\r\n  var inRangeObj = false;\r\n  var inStartedInRange = false;\r\n  var pointsObj = null;\r\n  var currToolType, currSetType = null;\r\n  var polylineTag, arcTag, points;\r\n  var m;\r\n  var targetPoint = null;\r\n  var arc = {\r\n    'radius': 0,\r\n    'center': { // center point of arc\r\n      'x': 0,\r\n      'y': 0\r\n    },\r\n    'point': { // any x,y point on arc\r\n      'x': 0,\r\n      'y': 0\r\n    },\r\n    'dotRadius': 5\r\n  }\r\n\r\n  // start drawing or erasing\r\n  var start = function (e) {\r\n    // console.group('Drawing')\r\n    // console.log('start-draw')\r\n\r\n    mousedownDraw = true;\r\n\r\n    e.preventDefault();\r\n\r\n    var strokeOpacity = initDraw.strokeOpacity;\r\n\r\n    var strokeColorPen = initDraw.strokeColor;\r\n    var strokeWidthPen = initDraw.strokeWidth;\r\n\r\n    var strokeColorMarker = 'rgba(0, 255, 0, .5)';\r\n    var strokeWidthMarker = initDraw.strokeWidth + 10;\r\n\r\n    currPoint = math.getMousePosition(e, cv);\r\n    currId = 'shape' + index;\r\n    currToolType = initTools.currToolType;\r\n    currSetType = initTools.currSetType;\r\n    startPoint = currPoint;\r\n\r\n    // if some set is present on canvas\r\n    if (currSetType) {\r\n      if (currSetType.substr(0, 5) == \"scale\") {\r\n        pointsObj = math.getSetPoints(initTools.currSetType);\r\n\r\n        // check if drawing point is inRange with currentSetType\r\n        inRangeObj = math.sideAndRange(currPoint);\r\n        inStartedInRange = inRangeObj.inRange;\r\n        m = inRangeObj.slope;\r\n        console.log(inRangeObj)\r\n\r\n        // update starting coordinates of drawing if set is in range\r\n        if (inStartedInRange) {\r\n          targetPoint = math.getCoords(pointsObj, inRangeObj.side, currPoint, m);\r\n          currPoint.x = targetPoint.x;\r\n          currPoint.y = targetPoint.y;\r\n        }\r\n      }\r\n\r\n      if (currSetType == 'compass' && currToolType == \"arc\") {\r\n        pointsObj = math.getSetPoints(initTools.currSetType);\r\n\r\n        arc.center.x = pointsObj[1].x;\r\n        arc.center.y = pointsObj[1].y;\r\n        arc.point.x = pointsObj[2].x;\r\n        arc.point.y = pointsObj[2].y;\r\n\r\n        arc.radius = Math.sqrt((pointsObj[2].x - pointsObj[1].x) * (pointsObj[2].x - pointsObj[1].x) + (pointsObj[2].y - pointsObj[1].y) * (pointsObj[2].y - pointsObj[1].y));\r\n        arc.radius = math.parseToFloat(arc.radius, 2);\r\n\r\n        arcTag = `<g class=\"drawing\" id=\"${currId}\">\r\n            <ellipse style=\"fill:${strokeColorPen};stroke-width:0;stroke:none;\" cx=\"${arc.center.x}px\" cy=\"${arc.center.y}px\" rx=\"${arc.dotRadius}px\" ry=\"${arc.dotRadius}px\"></ellipse>\r\n            <polyline style=\"fill:none;stroke-linecap:round;stroke:${strokeColorPen};stroke-width:3\" points=\"${arc.point.x},${arc.point.y} \"></polyline>\r\n          </g>`;\r\n        cv.innerHTML += arcTag;\r\n      }\r\n    }\r\n\r\n    if (currToolType == \"pen\" || currToolType == \"marker\") {\r\n      if (currToolType == \"pen\") {\r\n        polylineTag = '<polyline class=\"drawing\" id=\"' + currId + '\" style=\"opacity:' + strokeOpacity + ';fill:none;stroke-linecap:round;stroke:' + strokeColorPen + ';stroke-width:' + strokeWidthPen + '\" points=\"' + currPoint.x + ',' + currPoint.y + '\" />';;\r\n      } else if (currToolType == \"marker\") {\r\n        polylineTag = '<polyline class=\"drawing\" id=\"' + currId + '\" style=\"fill:none;stroke-linecap:round;stroke:' + strokeColorMarker + ';stroke-width:' + strokeWidthMarker + '\" points=\"' + currPoint.x + ',' + currPoint.y + '\" />';;\r\n      }\r\n      cv.innerHTML += polylineTag;\r\n    }\r\n\r\n    cv.addEventListener('mousemove', draw, false);\r\n    cv.addEventListener('mouseup', end, false);\r\n\r\n    index++;\r\n  }\r\n\r\n  // stop drawing or erasing\r\n  var end = function () {\r\n    // console.log('end-draw')\r\n    // console.groupEnd();\r\n\r\n    mousedownDraw = mousemoveDraw = false;\r\n\r\n    if (currId !== null && document.getElementById(currId) != null) {\r\n      undoStack.push({\r\n        Elements: [],\r\n        Id: currId,\r\n        Action: 'draw'\r\n      });\r\n    }\r\n\r\n    // cv.removeEventListener('mousemove', draw, false);\r\n    cv.removeEventListener('mouseup', end, false);\r\n    cv.removeEventListener('mouseleave', end, false);\r\n  }\r\n\r\n  // keep drawing or erasing\r\n  var draw = function (e) {\r\n    if (mousedownDraw && mousemoveDraw) {\r\n      // console.log('draw');\r\n\r\n      e.preventDefault();\r\n\r\n      currPoint = math.getMousePosition(e, cv);\r\n\r\n      if (currToolType == \"pen\" || currToolType == \"marker\") {\r\n        polylineTag = document.getElementById(currId);\r\n        points = polylineTag.getAttribute('points');\r\n\r\n        if (currToolType == \"marker\") {\r\n          points = startPoint.x + ',' + startPoint.y + ' ' + currPoint.x + ',' + currPoint.y;\r\n        } else if (currToolType == \"pen\") {\r\n          if (inStartedInRange) { // if set is in range\r\n\r\n            // to check if cursor went outside of range\r\n            inRangeObj = math.sideAndRange(currPoint);\r\n\r\n            if (inRangeObj.inRange) { // if drawing on some side \r\n              targetPoint = math.getCoords(pointsObj, inRangeObj.side, currPoint, m);\r\n\r\n              currPoint.x = targetPoint.x;\r\n              currPoint.y = targetPoint.y;\r\n\r\n              points += ' ' + currPoint.x + ',' + currPoint.y;\r\n            } else { // else stop drawing\r\n              cv.removeEventListener('mousemove', draw, false);\r\n              cv.removeEventListener('mouseup', end, false);\r\n            }\r\n          } else { // simple drawing\r\n            points += ' ' + currPoint.x + ',' + currPoint.y;\r\n          }\r\n        }\r\n        polylineTag.setAttribute('points', points);\r\n      } else if (currToolType == \"eraser\") {\r\n        var target = e.target;\r\n        if (target.classList.contains('drawing')) {\r\n          redoStack = [];\r\n          undoStack.push({\r\n            Elements: [target],\r\n            Id: target.id,\r\n            Action: 'erase'\r\n          });\r\n          target.remove();\r\n        }\r\n      }\r\n\r\n      if (currSetType == 'compass' && currToolType == \"arc\") {\r\n        arcTag = document.getElementById(currId);\r\n        var polylineInArc = arcTag.querySelector('polyline');\r\n        points = polylineInArc.getAttribute('points');\r\n        pointsObj = math.getSetPoints(initTools.currSetType);\r\n\r\n        arc.point.x = pointsObj[2].x;\r\n        arc.point.y = pointsObj[2].y;\r\n\r\n        // check if point is pointObj[2] is really lie on arc or not\r\n        // var d = Math.sqrt((pointsObj[2].x - pointsObj[1].x) * (pointsObj[2].x - pointsObj[1].x) + (pointsObj[2].y - pointsObj[1].y) * (pointsObj[2].y - pointsObj[1].y));\r\n        // d = math.parseToFloat(d, 2);\r\n\r\n        points += ' ' + arc.point.x + ',' + arc.point.y;\r\n        polylineInArc.setAttribute('points', points);\r\n      }\r\n\r\n      cv.addEventListener('mouseleave', end, false);\r\n    }\r\n    mousemoveDraw = true;\r\n  }\r\n\r\n  // Undo last action\r\n  var Undo = function () {\r\n    // console.log('undo');\r\n    if (undoStack.length > 0) {\r\n      var lastAction = undoStack.pop();\r\n      var ele, clearedEles;\r\n      switch (lastAction.Action) {\r\n        case 'draw':\r\n          ele = document.getElementById(lastAction.Id);\r\n          lastAction.Elements.push(ele);\r\n          ele.parentNode.removeChild(ele);\r\n          break;\r\n        case 'erase':\r\n          cv.appendChild(lastAction.Elements[0]);\r\n          break;\r\n        case 'clear':\r\n          clearedEles = lastAction.Elements;\r\n          clearedEles.forEach(function (shape) {\r\n            cv.appendChild(shape);\r\n            index++;\r\n          });\r\n          break;\r\n      }\r\n      redoStack.push(lastAction);\r\n    }\r\n  }\r\n\r\n  // Redo last undoed action \r\n  var Redo = function () {\r\n    // console.log('redo');\r\n    if (redoStack.length > 0) {\r\n      var lastAction = redoStack.pop();\r\n      var ele;\r\n      switch (lastAction.Action) {\r\n        case 'draw':\r\n          ele = lastAction.Elements[0];\r\n          cv.appendChild(ele);\r\n          break;\r\n        case 'erase':\r\n          ele = lastAction.Elements[0];\r\n          ele.parentNode.removeChild(ele);\r\n          break;\r\n        case 'clear':\r\n          lastAction.Elements.forEach(function (ele) {\r\n            ele.parentNode.removeChild(ele);\r\n          });\r\n          break;\r\n      }\r\n      undoStack.push(lastAction);\r\n    }\r\n  }\r\n\r\n  // clears everything\r\n  var Clear = function () {\r\n    // console.log('clear')\r\n    index = 0;\r\n    var clearedEles = document.querySelectorAll('.drawing');\r\n    redoStack = [];\r\n    undoStack.push({\r\n      Elements: clearedEles,\r\n      Id: null,\r\n      Action: 'clear'\r\n    });\r\n    cv.innerHTML = \"\";\r\n  }\r\n\r\n  return {\r\n    start: start,\r\n    undo: Undo,\r\n    redo: Redo,\r\n    clear: Clear,\r\n    strokeOpacity: strokeOpacity,\r\n    strokeWidth: strokeWidth,\r\n    strokeColor: strokeColor\r\n  }\r\n})();\r\n\r\n// move behaviour of elements - tools/panels/sets\r\nvar initMove = (function () {\r\n  var mousemove = false;\r\n  var startX = 0, startY = 0, endX = 0, endY = 0;\r\n  var dragParentzIndex = 0; // update only if drag parent is different each dragging time\r\n  var dragParent = dropParent = oldDragParent = null;\r\n\r\n  var init = function (draggable, listener) {\r\n    // console.log('init drag')\r\n\r\n    var dragAreas = draggable.querySelectorAll('.drag-area');\r\n\r\n    if (listener == \"add\") { // ADD EVENT LISTENERS\r\n      // console.log('adding')\r\n\r\n\r\n      if (dragAreas.length > 0) { // if `dragArea` is available, use that to drag\r\n        // if(draggable.classList.contains('drag-area')) {\r\n        //   draggable.addEventListener('mousedown', start, false);\r\n        // }\r\n        dragAreas.forEach(function (dragArea) {\r\n          dragArea.addEventListener('mousedown', start, false);\r\n        })\r\n      } else { // otherwise move the element anywhere from with in element\r\n        draggable.addEventListener('mousedown', start, false);\r\n      }\r\n    } else if (listener == \"remove\") { // REMOVE EVENT LISTENERS\r\n      // console.log('removing')\r\n      if (dragAreas.length > 0) {\r\n        dragAreas.forEach(function (dragArea) {\r\n          dragArea.removeEventListener('mousedown', start, false);\r\n        })\r\n      } else {\r\n        draggable.removeEventListener('mousedown', start, false);\r\n      }\r\n    }\r\n  }\r\n\r\n  var start = function (e) {\r\n    initMove.mousemove = false\r\n    // console.log('moveStart');\r\n\r\n    var currPoint = math.getMousePosition(e, cv);\r\n    initMove.dragParent = e.target.closest('.draggable');\r\n    var dragParent = initMove.dragParent;\r\n    // var oldDragParent = initMove.oldDragParent;\r\n\r\n    // drag only if current element has class 'drag-area'\r\n    if (e.target.classList.contains('drag-area')) {\r\n      // if(e.target.closest('.drag-area')) {\r\n\r\n      cvOuter.classList.add('dragging');\r\n\r\n      startX = currPoint.x;\r\n      startY = currPoint.y;\r\n\r\n      // update z-index of dragParent\r\n      if (dragParent != initMove.oldDragParent) {\r\n        dragParent.style.zIndex = ++initMove.dragParentzIndex;\r\n      }\r\n      initMove.oldDragParent = initMove.dragParent;\r\n\r\n      // update current geometry set type and remove any highlighted panel if any\r\n      if (dragParent.dataset.panelSet) {\r\n        var highlightPanel = document.querySelector('.draggable-set.highlight');\r\n        if (highlightPanel) {\r\n          highlightPanel.classList.remove('highlight');\r\n        }\r\n        initTools.currSetType = dragParent.dataset.panel;\r\n        dragParent.classList.add('highlight');\r\n      }\r\n\r\n      // get coordinates of nearby draggable cubes\r\n      if (dragParent.classList.contains('draggable-cubes')) {\r\n        initCubes.getCoords();\r\n      }\r\n\r\n      cvOuter.addEventListener('mousemove', move, false);\r\n      cvOuter.addEventListener('mouseup', end, false);\r\n      dragParent.addEventListener('dragstart', initDrag.start, false);\r\n    }\r\n\r\n    // bring TRASH can on top if sealType is present\r\n    if (dragParent.dataset.sealType) {\r\n      initPanel.trashPanel(e, 'start', dragParent.dataset.sealType);\r\n    }\r\n  }\r\n\r\n  var move = function (e) {\r\n    initMove.mousemove = true;\r\n\r\n    // console.log('move')\r\n    e.preventDefault();\r\n\r\n    var currPoint = math.getMousePosition(e, cv);\r\n    var dragParent = initMove.dragParent;\r\n\r\n    // calculate the new cursor position:\r\n    endX = startX - currPoint.x;\r\n    endY = startY - currPoint.y;\r\n    startX = currPoint.x;\r\n    startY = currPoint.y;\r\n\r\n    // set the element's new position:\r\n    dragParent.style.left = (dragParent.offsetLeft - endX) + \"px\";\r\n    if (dragParent == toolsUniverse) {\r\n      var H = cvOuter.getBoundingClientRect().height;\r\n      var h = dragParent.getBoundingClientRect().height;\r\n      var o = dragParent.offsetTop;\r\n      var offsetBottom = H - h - o;\r\n      dragParent.style.bottom = (offsetBottom + endY) + \"px\";\r\n    } else {\r\n      dragParent.style.top = (dragParent.offsetTop - endY) + \"px\";\r\n    }\r\n\r\n    // highligh if 'draggable-cube' is in range\r\n    if (dragParent.classList.contains('draggable-cubes')) {\r\n      dragParent.classList.remove('detach');\r\n      // initCubes.isSnapping = true;\r\n      initCubes.getShortestDist();\r\n      // highlight groups accordingly\r\n      if (initCubes.shortestDist != null) {\r\n        if (initCubes.shortestDist < initCubes.snapDist) {\r\n          initCubes.highlight(true);\r\n        } else {\r\n          initCubes.highlight(false);\r\n        }\r\n      }\r\n    }\r\n\r\n    // highlight TRASH cubes if mouse is in\r\n    if (dragParent.dataset.sealType) {\r\n      initPanel.trashPanel(e, 'move');\r\n    }\r\n  }\r\n\r\n  var end = function (e) {\r\n    // console.log('moveEnd')\r\n    e.preventDefault();\r\n\r\n    var dragParent = initMove.dragParent;\r\n\r\n    cvOuter.classList.remove('dragging');\r\n\r\n    // snap cubes if in range\r\n    if (dragParent.classList.contains('draggable-cubes')) {\r\n      if (initCubes.shortestDist != null && initCubes.shortestDist < initCubes.snapDist) {\r\n        initCubes.snap();\r\n        initCubes.shortestDist = null;\r\n      }\r\n    }\r\n    // initCubes.isSnapping = false;\r\n\r\n    // delete dragParent if dropped on TRASH panel\r\n    if (dragParent.dataset.sealType) {\r\n      if (initPanel.trashPanel(e, 'end')) {\r\n        dragParent.remove();\r\n      }\r\n    }\r\n\r\n    // dragParent.classList.remove('detach');\r\n\r\n    cvOuter.removeEventListener('mousemove', move, false);\r\n    cvOuter.removeEventListener('mouseup', end, false);\r\n    dragParent.removeEventListener('dragstart', initDrag.start, false);\r\n  }\r\n\r\n  init(toolsUniverse, 'add');\r\n\r\n  return {\r\n    mousemove: mousemove,\r\n    dragParentzIndex: dragParentzIndex,\r\n    dragParent: dragParent,\r\n    dropParent: dropParent,\r\n    oldDragParent: oldDragParent,\r\n    init: init\r\n  }\r\n})();\r\n\r\n// drag behaviour of seals - cubes/money/numbers/flowers\r\nvar initDrag = (function () {\r\n  var dragEloffsetX, dragEloffsetY;\r\n  var draggablesId = 0;\r\n  var dropElHeight = 0;\r\n  var dragParent = null;\r\n\r\n  var start = function (e) {\r\n    // console.log('dragStart');\r\n\r\n    dragEloffsetX = e.offsetX;\r\n    dragEloffsetY = e.offsetY;\r\n    e.dataTransfer.setData(\"src\", e.target.src);\r\n    e.dataTransfer.setData(\"width\", e.target.getBoundingClientRect().width);\r\n    e.dataTransfer.setData(\"height\", e.target.getBoundingClientRect().height);\r\n    e.dataTransfer.setData(\"sealType\", e.target.dataset.sealType);\r\n    if (e.target.dataset.numberDesign) {\r\n      e.dataTransfer.setData(\"sealDesign\", e.target.dataset.numberDesign);\r\n      e.dataTransfer.setData(\"sealValue\", e.target.dataset.numberValue);\r\n    }\r\n\r\n    cvOuter.addEventListener('dragenter', enter, false);\r\n    cvOuter.addEventListener('dragleave', leave, false);\r\n    cvOuter.addEventListener('dragover', over, false);\r\n    cvOuter.addEventListener('drop', drop, false);\r\n  }\r\n  var enter = function (e) { e.preventDefault(); }\r\n  var leave = function (e) { e.preventDefault(); }\r\n  var over = function (e) {\r\n    e.preventDefault();\r\n    cvOuter.classList.add('dropping');\r\n  }\r\n  var drop = function (e) {\r\n    // console.log('drop');\r\n    e.preventDefault();\r\n\r\n    var sealType = e.dataTransfer.getData('sealType');\r\n    var src = e.dataTransfer.getData('src');\r\n    var width = e.dataTransfer.getData('width');\r\n    var height = e.dataTransfer.getData('height');\r\n    var numberDesign = e.dataTransfer.getData(\"sealDesign\");\r\n    var numberValue = e.dataTransfer.getData(\"sealValue\");\r\n\r\n    cvOuter.classList.remove('dropping');\r\n\r\n    var totalSealsAllowed = sealTypes[sealType]['max'];\r\n    var totalSealsPlaced = document.querySelectorAll('[data-seal-type=\"' + sealType + '\"].dropped-seal').length;\r\n\r\n    if (totalSealsPlaced < totalSealsAllowed) {\r\n      var draggable;\r\n      if (sealType == \"cubes\" || sealType == \"numbers\") { // generate new draggable group\r\n        draggable = document.createElement('div');\r\n        draggable.classList.add('draggable-cubes');\r\n        draggable.setAttribute('data-seal-type', sealType);\r\n        if (sealType == 'numbers') {\r\n          draggable.setAttribute('data-number-design', numberDesign);\r\n          draggable.setAttribute('data-number-value', numberValue);\r\n        }\r\n        draggable.innerHTML = `\r\n          <div class=\"cube-outer drag-area\" data-index=\"0\" data-seal-type=\"${sealType}\">\r\n            <div class=\"cube\"><img src=\"${src}\" style=\"width: ${width}px; height: ${height}px;\"></div>\r\n          </div>\r\n          <div class=\"dot dot-top\"></div>\r\n          <div class=\"dot dot-bottom\"></div>\r\n          <div class=\"dot dot-left\"></div>\r\n          <div class=\"dot dot-right\"></div>\r\n          <div class=\"detach-btn\"></div>\r\n          `;\r\n\r\n        draggable.addEventListener('dblclick', initCubes.remove, false);\r\n        // draggable.addEventListener('click', initCubes.detach, false);\r\n        draggable.addEventListener('click', initCubes.detachUI, false);\r\n      } else { // generate a seal\r\n        draggable = document.createElement('img');\r\n        draggable.src = src;\r\n        draggable.width = width;\r\n        draggable.height = height;\r\n        draggable.classList.add('dropped-seal');\r\n        draggable.classList.add('drag-area');\r\n        draggable.setAttribute('data-seal-type', sealType);\r\n\r\n        draggable.addEventListener('dblclick', (e) => { draggable.remove(); }, false);\r\n      }\r\n\r\n      draggable.setAttribute('data-id', ++initDrag.draggablesId);\r\n      draggable.style.zIndex = ++initMove.dragParentzIndex;\r\n      draggable.style.left = e.offsetX - dragEloffsetX + 'px';\r\n      draggable.style.top = e.offsetY - dragEloffsetY + 'px';\r\n      draggable.classList.add('draggable');\r\n\r\n      cvOuter.appendChild(draggable);\r\n\r\n      initDrag.dropElHeight = draggable.getBoundingClientRect().height;\r\n\r\n      initMove.init(draggable, 'add');\r\n\r\n      cvOuter.removeEventListener('dragenter', enter)\r\n      cvOuter.removeEventListener('dragleave', leave)\r\n      cvOuter.removeEventListener('dragover', over)\r\n      cvOuter.removeEventListener('drop', drop)\r\n    } else {\r\n      alert('You can only place max ' + totalSealsAllowed + ' of ' + sealType + ' seal type.');\r\n    }\r\n  }\r\n\r\n  return {\r\n    start: start,\r\n    draggablesId: draggablesId,\r\n    dropElHeight: dropElHeight\r\n  }\r\n})();\r\n\r\n// fetch seals from 'settings.json' file\r\nvar fetchSeals = (function () {\r\n  // console.log('fetching seals');\r\n\r\n  for (var sealType in sealTypes) {\r\n    var sealPanelContent = document.querySelector('[data-panel=\"' + sealType + '\"] .content');\r\n    if (sealTypes.hasOwnProperty(sealType)) {\r\n      var values = sealTypes[sealType].values;\r\n      if (sealType == \"numbers\") {\r\n        for (var type in values) {\r\n          // console.log(values[type])\r\n          for (var i = 0; i < values[type].length; i++) {\r\n            // console.log(values[type][i][0], values[type][i][1])\r\n            var numType = values[type][i][0];\r\n            var numValue = values[type][i][1];\r\n            var el = document.createElement('img');\r\n            el.classList.add('draggable-seal');\r\n            el.setAttribute('data-seal-type', sealType);\r\n            el.setAttribute('data-number-design', type);\r\n            el.setAttribute('data-number-value', numValue);\r\n            el.src = './_assets/img/' + numType;\r\n            sealPanelContent.appendChild(el);\r\n          }\r\n        }\r\n      } else {\r\n        values.forEach(value => {\r\n          var el = document.createElement('img');\r\n          el.classList.add('draggable-seal');\r\n          el.setAttribute('data-seal-type', sealType);\r\n          el.src = './_assets/img/' + value;\r\n          sealPanelContent.appendChild(el);\r\n        });\r\n      }\r\n    }\r\n  }\r\n})();\r\n\r\n// init panel functions - open/close/drag-panel/drag-seals\r\nvar initPanel = (function (e) {\r\n  var panel = oldPanel = panelType = panelBtn = panelPosObj =\r\n    panelCloseBtn = panelScaleFlipBtn = panelScaleBtn = draggableSeals = rotateBtns = null;\r\n\r\n  var toggle = function (target) {\r\n    panelType = target.dataset.panelBtn;\r\n\r\n    // open panel\r\n    if (!target.classList.contains('active')) {\r\n      // console.log('open panel');\r\n\r\n\r\n      panel = document.querySelector('[data-panel=\"' + panelType + '\"]');\r\n      panelCloseBtn = panel.querySelector('.close-btn');\r\n      panelScaleBtn = panel.querySelector('.scale-btn');\r\n      panelFlipBtn = panel.querySelector('.flip-btn');\r\n      rotateBtns = panel.querySelectorAll('.rotate-btn');\r\n      panelScaleFlipBtn = panel.querySelector('.scale-flip-btn');\r\n      draggableSeals = panel.getElementsByClassName('draggable-seal');\r\n\r\n      target.classList.add('active');\r\n      panel.classList.add('active');\r\n      panel.style.zIndex = ++initMove.dragParentzIndex;\r\n\r\n      initMove.dragParent = panel;\r\n      initMove.oldDragParent = panel;\r\n\r\n\r\n      // ADD EVENT LISTENERS\r\n      panelCloseBtn.addEventListener('click', close, false);\r\n      initMove.init(panel, 'add');\r\n      for (var i = 0; i < draggableSeals.length; i++) {\r\n        draggableSeals[i].addEventListener('dragstart', initDrag.start, false);\r\n      }\r\n      for (var i = 0; i < rotateBtns.length; i++) {\r\n        rotateBtns[i].addEventListener('mousedown', initRotate.start, false);\r\n        if (rotateBtns[i].classList.contains('rotate-compass-draw')) {\r\n          rotateBtns[i].addEventListener('mousedown', initDraw.start, false);\r\n        }\r\n      }\r\n      if (panelScaleBtn) {\r\n        panelScaleBtn.addEventListener('mousedown', initScale.start, false);\r\n      }\r\n      if (panelFlipBtn) {\r\n        panelFlipBtn.addEventListener('click', flip, false);\r\n      }\r\n      if (panelScaleFlipBtn) {\r\n        panelScaleFlipBtn.addEventListener('click', scaleFlip, false);\r\n      }\r\n      if (panelType == \"abacus\") {\r\n        var beads = document.querySelectorAll('[data-panel=\"abacus\"] .bead');\r\n        for (var i = 0; i < beads.length; i++) {\r\n          beads[i].addEventListener('click', initAbacus.changePos, false);\r\n        }\r\n        var leftCol = document.getElementById('leftCol');\r\n        leftCol.addEventListener('mousedown', initAbacus.resetStart, false);\r\n      }\r\n      if (panelType == \"calculator\") {\r\n        var buttons = panel.querySelectorAll('[data-button-type]');\r\n        for (var i = 0; i < buttons.length; i++) {\r\n          buttons[i].addEventListener('click', initCalc.calculate, false);\r\n        }\r\n      }\r\n      if (panel.classList.contains('draggable-seal')) {\r\n        panel.addEventListener('click', bringInFront, false);\r\n      }\r\n\r\n\r\n      // update current geometry set type and remove any highlighted panel if any\r\n      if (panel.dataset.panelSet) {\r\n        var highlightPanel = document.querySelector('.draggable-set.highlight');\r\n        if(highlightPanel) {\r\n          highlightPanel.classList.remove('highlight');\r\n        }\r\n        initTools.currSetType = panel.dataset.panel;\r\n        panel.classList.add('highlight');\r\n      }\r\n\r\n    } else { // close panel if already open\r\n      close(panelType);\r\n    }\r\n  }\r\n  var close = function (e) {\r\n    // console.log('close panel')\r\n\r\n    // clicked on closed button and 'type' property exist\r\n    if (e.type) {\r\n      panel = this.closest('.draggable');\r\n      panelType = panel.dataset.panel;\r\n    } else { // clicked on panel btn itself and called 'closePanel' function so 'e.type' not defined\r\n      panelType = e;\r\n      panel = document.querySelector('[data-panel=\"' + panelType + '\"]');;\r\n    }\r\n    panelBtn = document.querySelector('[data-panel-btn=\"' + panelType + '\"]');\r\n    panelCloseBtn = panel.querySelector('.close-btn');\r\n    panelFlipBtn = panel.querySelector('.flip-btn');\r\n    panelScaleBtn = panel.querySelector('.scale-btn');\r\n    panelScaleFlipBtn = panel.querySelector('.scale-flip-btn');\r\n\r\n    draggableSeals = panel.getElementsByClassName('draggable-seal');\r\n    panel.classList.remove('active');\r\n    panelBtn.classList.remove('active');\r\n    rotateBtns = panel.querySelectorAll('.rotate-btn');\r\n\r\n    // REMOVE EVENT LISTENERS\r\n    panelCloseBtn.removeEventListener('click', close, false);\r\n    initMove.init(panel, 'remove');\r\n    for (var i = 0; i < draggableSeals.length; i++) {\r\n      draggableSeals[i].removeEventListener('dragstart', initDrag.start, false);\r\n    }\r\n    for (var i = 0; i < rotateBtns.length; i++) {\r\n      rotateBtns[i].removeEventListener('mousedown', initRotate.start, false);\r\n      if (rotateBtns[i].classList.contains('rotate-compass-draw')) {\r\n        rotateBtns[i].removeEventListener('mousedown', initDraw.start, false);\r\n      }\r\n    }\r\n    if (panelScaleBtn) {\r\n      panelScaleBtn.removeEventListener('mousedown', initScale.start, false);\r\n    }\r\n    if (panelFlipBtn) {\r\n      panelFlipBtn.removeEventListener('click', flip, false);\r\n    }\r\n    if (panelScaleFlipBtn) {\r\n      panelScaleFlipBtn.removeEventListener('click', scaleFlip, false);\r\n    }\r\n    if (panelType == \"calculator\") {\r\n      var buttons = panel.querySelectorAll('[data-button-type]');\r\n      for (var i = 0; i < buttons.length; i++) {\r\n        buttons[i].removeEventListener('click', initCalc.calculate, false);\r\n      }\r\n    }\r\n    if (panelType == \"abacus\") {\r\n      var beads = document.querySelectorAll('[data-panel=\"abacus\"] .bead');\r\n      var leftCol = document.getElementById('leftCol');\r\n      for (var i = 0; i < beads.length; i++) {\r\n        beads[i].removeEventListener('click', initAbacus.changePos, false);\r\n      }\r\n      leftCol.removeEventListener('mousedown', initAbacus.resetStart, false);\r\n    }\r\n    if (panel.classList.contains('draggable-seal')) {\r\n      panel.removeEventListener('click', bringInFront, false);\r\n    }\r\n    if (panelType.substr(0, 5) == \"scale\") {\r\n      var secActiveBtns = document.querySelectorAll('[data-tool-group-type=\"scale\"].secondary.active');\r\n      var panelGroupBtn = document.querySelector('[data-tool-group-type=\"scale\"]');\r\n      if (secActiveBtns.length < 1) {\r\n        panelGroupBtn.classList.remove('active');\r\n      }\r\n    } else if (panelType.substr(0, 10) == \"set-square\") {\r\n      var secActiveBtns = document.querySelectorAll('[data-tool-group-type=\"set-square\"].secondary.active');\r\n      var panelGroupBtn = document.querySelector('[data-tool-group-type=\"set-square\"]');\r\n      if (secActiveBtns.length < 1) {\r\n        panelGroupBtn.classList.remove('active');\r\n      }\r\n    }\r\n\r\n    // update current geometry set type to null\r\n    if (panel.dataset.panelSet) {\r\n      initTools.currSetType = null;\r\n    }\r\n  }\r\n  var bringInFront = function (e) {\r\n    // console.log('bringInFront');\r\n\r\n    panel = this.closest('.draggable');\r\n\r\n    // update current geometry set type to the front one\r\n    if (oldPanel != panel) {\r\n      panel.style.zIndex = ++initMove.dragParentzIndex;\r\n      if (panel.dataset.panelSet) {\r\n        initTools.currSetType = panel.dataset.panel;\r\n      }\r\n    }\r\n    oldPanel = panel;\r\n  }\r\n  var trashPanel = function (e, mode, sealType) {\r\n    var mousePosObj = math.getMousePosition(e, cv);\r\n\r\n    // bring trash can on top if draggin cubes\r\n    if (mode == \"start\") {\r\n      panel = document.querySelector('[data-panel=\"' + sealType + '\"]');\r\n      var panelPos = panel.getBoundingClientRect();\r\n      panelPosObj = {\r\n        x1: panelPos.left,\r\n        x2: panelPos.left + panelPos.width,\r\n        y1: panelPos.top,\r\n        y2: panelPos.top + panelPos.height\r\n      }\r\n    }\r\n\r\n    if (mode == \"move\") {\r\n      panel.style.zIndex = initMove.dragParentzIndex;\r\n      panel.classList.add('trash');\r\n    }\r\n\r\n    // highlight trash cubes if mouse is in\r\n    if (mousePosObj.x > panelPosObj.x1 && mousePosObj.x < panelPosObj.x2 &&\r\n      mousePosObj.y > panelPosObj.y1 && mousePosObj.y < panelPosObj.y2) {\r\n      panel.classList.add('trash-active');\r\n    } else {\r\n      panel.classList.remove('trash-active');\r\n    }\r\n\r\n    // delete dragParent if dropped on trash panel\r\n    if (mode == 'end') {\r\n      panel.classList.remove('trash')\r\n      if (panel.classList.contains('trash-active')) {\r\n        panel.classList.remove('trash-active')\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  var flip = function (e) {\r\n    // console.log('panel fliping');\r\n\r\n    if (panel.classList.contains('flipped')) {\r\n      panel.classList.remove('flipped');\r\n    } else {\r\n      panel.classList.add('flipped');\r\n    }\r\n  }\r\n  var scaleFlip = function (e) {\r\n    console.log('scale flipping');\r\n  }\r\n\r\n  return {\r\n    toggle: toggle,\r\n    trashPanel: trashPanel\r\n  }\r\n})();\r\n\r\n// cubes/numbers - highlighting/snapping/detaching\r\nvar initCubes = (function (e) {\r\n  var dropCoords = {};\r\n  var isSnapping = false; // REMOVE LATER IF NOT REQUIRED\r\n  var snapDist = 40;\r\n  var snapInfo = { i: 0, j: 0, id: '' };\r\n  var row = 3;\r\n  var col = 3;\r\n  var rowNumber = 10;\r\n  var colNumber = 0;\r\n  var dragParentLeft = dragParentTop = shortestDist = snapType = dragParent = dropParent = cubeLimit = cubeOuter = null;\r\n  var detachType = null;\r\n\r\n  // wrt dragParent\r\n  // 0 == top | 1 == bottom\r\n  // 0 == left | 1 == right\r\n  var getCoords = function () {\r\n    // console.log('geting Coordingates');\r\n\r\n    dragParent = initMove.dragParent;\r\n\r\n    snapType = (dragParent.classList.contains('vertical')) ? 'horizontal' : 'vertical';\r\n    detachType = (dragParent.classList.contains('horizontal')) ? 'horizontal' : 'vertical';\r\n    dropCoords = {};\r\n    var dropDotCoord_0 = dropDotCoord_1 = null;\r\n\r\n    var draggableCubes = document.querySelectorAll('.draggable-cubes');\r\n\r\n\r\n    for (let i = 0; i < draggableCubes.length; i++) {\r\n      if (draggableCubes[i] == dragParent) { continue; }\r\n\r\n      if (snapType == 'vertical') {\r\n        // console.log('vertical snapping')\r\n        dropDotCoord_0 = draggableCubes[i].querySelector('.dot-top').getBoundingClientRect();\r\n        dropDotCoord_1 = draggableCubes[i].querySelector('.dot-bottom').getBoundingClientRect();\r\n      } else {\r\n        // console.log('horizontal snapping')\r\n        dropDotCoord_0 = draggableCubes[i].querySelector('.dot-left').getBoundingClientRect();\r\n        dropDotCoord_1 = draggableCubes[i].querySelector('.dot-right').getBoundingClientRect();\r\n      }\r\n      var id = draggableCubes[i].dataset.id;\r\n\r\n      var dropCoord = {\r\n        0: {\r\n          x: dropDotCoord_0.x,\r\n          y: dropDotCoord_0.y\r\n        },\r\n        1: {\r\n          x: dropDotCoord_1.x,\r\n          y: dropDotCoord_1.y\r\n        }\r\n      }\r\n      dropCoords[id] = dropCoord;\r\n    }\r\n\r\n    dragParentLeft = dragParent.style.left;\r\n    dragParentTop = dragParent.style.top;\r\n  }\r\n  var getShortestDist = function () {\r\n    // console.log('geting shortest dist');\r\n\r\n    var shortestDist = null;\r\n    console.log(snapType, dragParent, dropParent)\r\n\r\n    snapInfo = { i: 0, j: 0, id: '' };\r\n\r\n    if (snapType == 'vertical') {\r\n      dropDotCoord_0 = dragParent.querySelector('.dot-top').getBoundingClientRect();\r\n      dropDotCoord_1 = dragParent.querySelector('.dot-bottom').getBoundingClientRect();\r\n    } else {\r\n      dropDotCoord_0 = dragParent.querySelector('.dot-left').getBoundingClientRect();\r\n      dropDotCoord_1 = dragParent.querySelector('.dot-right').getBoundingClientRect();\r\n    }\r\n\r\n    var dragCoord = {\r\n      0: {\r\n        x: dropDotCoord_0.x,\r\n        y: dropDotCoord_0.y\r\n      },\r\n      1: {\r\n        x: dropDotCoord_1.x,\r\n        y: dropDotCoord_1.y\r\n      }\r\n    }\r\n\r\n    // wrt dragParent\r\n    // 0 == top | 1 == bottom\r\n    // 0 == left | 1 == right\r\n    // for(var i = 0; i < 2; i++) { // 0,1 -> snap using BOTH sides (top and botton || left and right)\r\n    // for(var i = 1; i < 2; i++) {  // 1 -> snap using only one side (bottom || right)\r\n    for (var i = 0; i < 1; i++) {  // 0 -> snap using only one side (top || left)\r\n      for (var dropCoord in dropCoords) {\r\n        // if drag is 'top' || 'left compare with 'bottom' || 'right' dots of drop respectivily\r\n        var j = (i == 0) ? 1 : 0;\r\n        if (dropCoords.hasOwnProperty(dropCoord)) {\r\n\r\n          // gettting coordinates to calcualte dist\r\n          var x1 = dragCoord[i].x;\r\n          var y1 = dragCoord[i].y;\r\n          var x2 = dropCoords[dropCoord][j].x;\r\n          var y2 = dropCoords[dropCoord][j].y;\r\n\r\n          // calculating dist btw points\r\n          var x = x1 - x2;\r\n          var y = y1 - y2;\r\n          var d = parseFloat((Math.sqrt(x * x + y * y)).toFixed(2));\r\n\r\n          // if shortest dist is not defined, make it equal to first calculated dist\r\n          if (shortestDist == null || shortestDist > d) {\r\n            shortestDist = d;\r\n            snapInfo = {\r\n              i: (i == 0) ? 0 : 1, // to save if it was top or bottom of dragged element\r\n              j: (j == 0) ? 0 : 1, // to save if it was top or bottom of dropped element\r\n              id: dropCoord // id of element who's j value is saved\r\n            }\r\n\r\n            initCubes.shortestDist = shortestDist;\r\n            dropParent = initMove.dropParent = document.querySelector('[data-id=\"' + dropCoord + '\"');\r\n\r\n            // no highlighting if element has already enought cubes in column\r\n            if (snapType == 'vertical') {\r\n              if (dropParent.classList.contains('horizontal')) {\r\n                initCubes.shortestDist = null\r\n              }\r\n            }\r\n            if (snapType == 'horizontal') {\r\n              if (!dragParent.classList.contains('vertical') || !dropParent.classList.contains('vertical')) {\r\n                initCubes.shortestDist = null\r\n              }\r\n            }\r\n          };\r\n        }\r\n      }\r\n    }\r\n    // make 'shortestDist' null if dragParent and dropParent is not of same type\r\n    if (dropParent) {\r\n      if (dragParent.dataset.sealType == 'cubes') {\r\n        if (dragParent.dataset.sealType != dropParent.dataset.sealType) {\r\n          initCubes.shortestDist = null;\r\n        }\r\n      } else if (dragParent.dataset.sealType == 'numbers') {\r\n        if (dragParent.dataset.numberDesign != dropParent.dataset.numberDesign ||\r\n          dragParent.dataset.numberValue != dropParent.dataset.numberValue) {\r\n          initCubes.shortestDist = null;\r\n        }\r\n      }\r\n      if (dragParent.dataset.numberValue == \"10000\") {\r\n        initCubes.shortestDist = null;\r\n      }\r\n    }\r\n  }\r\n  var highlight = function (flag) {\r\n    if (flag) {\r\n      // console.log('highlighting')\r\n      var oldHighlight = document.querySelector('.draggable-cubes.highlight');\r\n      if(oldHighlight) {\r\n        oldHighlight.classList.remove('highlight');\r\n      }\r\n      dragParent.classList.add('highlight');\r\n      dropParent.classList.add('highlight');\r\n    } else {\r\n      dragParent.classList.remove('highlight');\r\n      dropParent.classList.remove('highlight');\r\n    }\r\n  }\r\n  var snap = function () {\r\n    // console.log('snapping');\r\n\r\n    var transitionEvent = whichTransitionEvent();\r\n\r\n    var sealType = dragParent.querySelector('[data-seal-type]').dataset.sealType;\r\n    var src = dragParent.querySelector('img').src;\r\n    var width = dragParent.querySelector('img').width;\r\n    var height = dragParent.querySelector('img').height;\r\n\r\n    // update 'row' and 'col' for numbers sealTypes\r\n    if (sealType == 'numbers') {\r\n      row = rowNumber;\r\n      col = colNumber;\r\n    }\r\n    cubeLimit = (snapType == \"vertical\") ? row : col;\r\n\r\n    if (snapType == \"vertical\") {\r\n      var dropParentCubeCount = dropParent.querySelectorAll('.drag-area').length;\r\n      var dragParentCubeCount = dragParent.querySelectorAll('.drag-area').length;\r\n    } else {\r\n      var dropParentCubeCount = dropParent.querySelectorAll('.cube-outer').length;\r\n      var dragParentCubeCount = dragParent.querySelectorAll('.cube-outer').length;\r\n    }\r\n    var totalCubes = dropParentCubeCount + dragParentCubeCount;\r\n    // console.log(cubeLimit, totalCubes)\r\n\r\n\r\n    // console.log('snapType: ', snapType);\r\n    // console.log('dropParentCubeCount: ', dropParentCubeCount);\r\n    // console.log('dragParentCubeCount: ', dragParentCubeCount);\r\n    // console.log('totalCubes: ', totalCubes);\r\n    // console.log('cubeLimit: ', cubeLimit);\r\n\r\n    // if possible to add more cubes (both vertical and horizontal)\r\n    if (totalCubes <= cubeLimit) {\r\n      // console.log('totalCubes <= cubeLimit');\r\n\r\n      cubeOuter = '';\r\n      if (snapType == \"vertical\") {\r\n        for (var r = 0; r < dragParentCubeCount; r++) {\r\n          cubeOuter += `\r\n            <div class=\"cube-outer drag-area\" data-index=\"${dropParentCubeCount + r}\" data-seal-type=\"${sealType}\">\r\n              <div class=\"cube\"><img src=\"${src}\" style=\"width: ${width}px; height: ${height}px;\"></div>\r\n            </div>        \r\n          `;\r\n        }\r\n        initMove.dropParent.innerHTML += cubeOuter;\r\n        dropParent = initMove.dropParent;\r\n      } else if (snapType == \"horizontal\") {\r\n        cubeOuter = '';\r\n        for (var c = 0; c < totalCubes; c++) {\r\n          cubeOuter += `<div class=\"cube-outer drag-area\" data-index=\"${c}\" data-seal-type=\"${sealType}\">`;\r\n          for (var r = 0; r < row; r++) {\r\n            cubeOuter += `<div class=\"cube\"><img src=\"${src}\" style=\"width: ${width}px; height: ${height}px;\"></div>`;\r\n          }\r\n          cubeOuter += '</div>';\r\n        }\r\n        cubeOuter += `\r\n          </div>\r\n          <div class=\"dot dot-top\"></div>\r\n          <div class=\"dot dot-bottom\"></div>\r\n          <div class=\"dot dot-left\"></div>\r\n          <div class=\"dot dot-right\"></div>\r\n          <div class=\"detach-btn\"></div>     \r\n        `;\r\n        initMove.dropParent.innerHTML = cubeOuter;\r\n        dropParent = initMove.dropParent;\r\n        initMove.init(dropParent, 'add');\r\n      }\r\n\r\n      if (snapType == \"horizontal\") dropParent.classList.add('horizontal');\r\n\r\n      totalCubes = dropParent.querySelectorAll('.cube-outer').length;\r\n\r\n      // if vertical limit reached\r\n      if (totalCubes == cubeLimit) {\r\n        // console.log('totalCubes == cubeLimit');\r\n\r\n        if (sealType == 'numbers') {\r\n          // dropParent.querySelector('.cube-outer').remove();\r\n          for (var r = 0; r < row; r++) {\r\n            dropParent.querySelector('[data-index=\"' + r + '\"]').remove();\r\n          }\r\n\r\n          cubeOuter = `\r\n            <div class=\"cube-outer drag-area\" data-index=\"0\" data-seal-type=\"numbers\">\r\n              <div class=\"cube\"><img src=\"${'_assets/img/number-' + dropParent.dataset.numberDesign + '-' + dropParent.dataset.numberValue * 10 + '.svg'}\" style=\"width: ${width}px; height: ${height}px;\"></div>\r\n            </div>        \r\n          `;\r\n          dropParent.classList.remove('vertical');\r\n          dropParent.classList.remove('detach');\r\n          dropParent.setAttribute('data-number-value', dropParent.dataset.numberValue * 10)\r\n          dropParent.innerHTML += cubeOuter;\r\n        } else if (sealType == \"cubes\") {\r\n          if (snapType == \"vertical\") {\r\n            // make vertical complete group (layout needs to update)\r\n            cubeOuter = `<div class=\"cube-outer\">`;\r\n            for (var r = 0; r < row; r++) {\r\n              cubeOuter += `<div class=\"cube drag-area\" data-index=\"${r}\" data-seal-type=\"${sealType}\"><img src=\"${src}\" style=\"width: ${width}px; height: ${height}px;\"></div>`;\r\n            }\r\n            cubeOuter += `\r\n              </div>\r\n              <div class=\"dot dot-top\"></div>\r\n              <div class=\"dot dot-bottom\"></div>\r\n              <div class=\"dot dot-left\"></div>\r\n              <div class=\"dot dot-right\"></div>     \r\n              <div class=\"detach-btn\"></div>\r\n            `;\r\n\r\n            initMove.dropParent.innerHTML = cubeOuter;\r\n            dropParent = initMove.dropParent;\r\n            dropParent.classList.add('vertical');\r\n          } else if (snapType == \"horizontal\") {\r\n            dropParent = initMove.dropParent;\r\n            dropParent.classList.add('complete');\r\n          }\r\n        }\r\n\r\n        console.log('limit reached!!!!!!!!!!');\r\n      }\r\n      // console.log(dropParent);\r\n      initMove.init(dropParent, 'add');\r\n      dragParent.remove();\r\n      dropParent.style.zIndex = ++initMove.dragParentzIndex;\r\n    } else if (totalCubes > cubeLimit) {\r\n      // console.log('totalCubes > cubeLimit');\r\n\r\n      var canBeAddedCubes = cubeLimit - dropParentCubeCount;\r\n      var remainingCubes = dragParentCubeCount - canBeAddedCubes;\r\n      // console.log(canBeAddedCubes, remainingCubes)\r\n\r\n      if (snapType == \"vertical\") {\r\n        // make vertical complete group (layout needs to update)\r\n        cubeOuter = `<div class=\"cube-outer\">`;\r\n        for (var r = 0; r < row; r++) {\r\n          cubeOuter += `<div class=\"cube drag-area\" data-index=\"${r}\" data-seal-type=\"${sealType}\"><img src=\"${src}\" style=\"width: ${width}px; height: ${height}px;\"></div>`;\r\n        }\r\n        cubeOuter += `\r\n          </div>\r\n          <div class=\"dot dot-top\"></div>\r\n          <div class=\"dot dot-bottom\"></div>\r\n          <div class=\"dot dot-left\"></div>\r\n          <div class=\"dot dot-right\"></div>     \r\n          <div class=\"detach-btn\"></div>\r\n        `;\r\n\r\n        initMove.dropParent.innerHTML = cubeOuter;\r\n        dropParent = initMove.dropParent;\r\n        dropParent.classList.add('vertical');\r\n\r\n        // remove cubes from dragParent\r\n        for (var i = 0; i < canBeAddedCubes; i++) {\r\n          dragParent.querySelector('[data-index=\"' + (dragParentCubeCount - 1 - i) + '\"].cube-outer').remove();\r\n        }\r\n\r\n      } else if (snapType == \"horizontal\") {\r\n        // make horizontal complete group \r\n        cubeOuter = \"\";\r\n        for (var c = 0; c < canBeAddedCubes; c++) {\r\n          cubeOuter += `<div class=\"cube-outer drag-area\" data-index=\"${dropParentCubeCount + c}\" data-seal-type=\"${sealType}\">`;\r\n          for (var r = 0; r < row; r++) {\r\n            cubeOuter += `<div class=\"cube\"><img src=\"${src}\" style=\"width: ${width}px; height: ${height}px;\"></div>`;\r\n          }\r\n          cubeOuter += '</div>';\r\n        }\r\n        initMove.dropParent.innerHTML += cubeOuter;\r\n        dropParent = initMove.dropParent;\r\n        // dropParent.classList.remove('vertical');\r\n\r\n        if (remainingCubes == 1) {\r\n          cubeOuter = `<div class=\"cube-outer\">`;\r\n          for (var r = 0; r < row; r++) {\r\n            cubeOuter += `<div class=\"cube drag-area\" data-index=\"${r}\" data-seal-type=\"${sealType}\"><img src=\"${src}\" style=\"width: ${width}px; height: ${height}px;\"></div>\r\n          `;\r\n          }\r\n          cubeOuter += `\r\n            </div> \r\n            <div class=\"dot dot-top\"></div>\r\n            <div class=\"dot dot-bottom\"></div>\r\n            <div class=\"dot dot-left\"></div>\r\n            <div class=\"dot dot-right\"></div>     \r\n            <div class=\"detach-btn\"></div>\r\n          `;\r\n\r\n          initMove.dragParent.innerHTML = cubeOuter;\r\n          dragParent = initMove.dragParent;\r\n          initMove.init(dragParent, 'add');\r\n          dragParent.classList.remove('horizontal');\r\n        } else {\r\n          // remove cubes from dragParent\r\n          for (var i = 0; i < canBeAddedCubes; i++) {\r\n            dragParent.querySelector('[data-index=\"' + (dragParentCubeCount - 1 - i) + '\"].cube-outer').remove();\r\n          }\r\n        }\r\n      }\r\n\r\n      initMove.init(dropParent, 'add');\r\n\r\n\r\n      dragParent.style.left = dragParentLeft;\r\n      dragParent.style.top = dragParentTop;\r\n      initMove.init(dragParent, 'add');\r\n      dragParent.classList.add('cant-snap');\r\n\r\n      console.log('limit reached!!!!!!!!!!');\r\n    }\r\n\r\n    dragParent.addEventListener(transitionEvent, transitionEndCallback);\r\n    function transitionEndCallback() {\r\n      dragParent.removeEventListener(transitionEvent, transitionEndCallback);\r\n      dragParent.classList.remove('cant-snap');\r\n    }\r\n    dragParent.classList.remove('highlight');\r\n    dropParent.classList.remove('highlight');\r\n  }\r\n  // code logic NOT NEEDED for now \r\n  var detach = function (e) {\r\n    // console.log('detaching');\r\n\r\n    if (detachType == 'vertical') {  // vertical detach\r\n      var target = e.target;\r\n\r\n      var index = parseInt(target.dataset.index);\r\n      var totalCubes = dragParent.querySelectorAll('.drag-area').length;\r\n      var detachCubes = totalCubes - index;\r\n\r\n      var sealType = dragParent.querySelector('[data-seal-type]').dataset.sealType;\r\n      var src = dragParent.querySelector('img').src;\r\n      var width = dragParent.querySelector('img').width;\r\n      var height = dragParent.querySelector('img').height;\r\n\r\n      dragParentLeft = dragParent.style.left;\r\n      dragParentTop = dragParent.style.top;\r\n\r\n      // console.log('target: ', target);\r\n      // console.log('index: ', index);\r\n      // console.log('detachCubes: ', detachCubes);\r\n      // console.log('totalCubes: ', totalCubes);\r\n\r\n      if (totalCubes == 1 && !dragParent.classList.contains('vertical')) {\r\n        dragParent.remove();\r\n      } else if (index) {\r\n        // top\r\n        if (!dragParent.classList.contains('vertical')) { // detaching vertical group when INCOMPLETE\r\n          for (var r = index; r < totalCubes; r++) {\r\n            dragParent.querySelector('[data-index=\"' + r + '\"]').remove();\r\n          }\r\n        } else { // detaching vertical group when COMPLETE\r\n          cubeOuter = '';\r\n          for (var r = 0; r < index; r++) {\r\n            cubeOuter += `\r\n              <div class=\"cube-outer drag-area\" data-index=\"${r}\" data-seal-type=\"${sealType}\">\r\n                <div class=\"cube\"><img src=\"${src}\" style=\"width: ${width}px; height: ${height}px;\"></div>\r\n              </div>        \r\n            `;\r\n          }\r\n          cubeOuter += `\r\n            <div class=\"dot dot-top\"></div>\r\n            <div class=\"dot dot-bottom\"></div>\r\n            <div class=\"dot dot-left\"></div>\r\n            <div class=\"dot dot-right\"></div>     \r\n          `;\r\n          initMove.dragParent.innerHTML = cubeOuter;\r\n          dragParent = initMove.dragParent;\r\n          dragParent.classList.remove('vertical');\r\n\r\n          initMove.init(dragParent, 'add');\r\n          dragParent.addEventListener('dblclick', detach, false);\r\n        }\r\n\r\n        var left = parseFloat(dragParentLeft);\r\n        var top = parseFloat(dragParentTop) + dragParent.getBoundingClientRect().height + 30;\r\n        // bottom\r\n        var draggable = document.createElement('div');\r\n        draggable.classList.add('draggable-cubes');\r\n        draggable.classList.add('draggable');\r\n        draggable.setAttribute('data-id', ++initDrag.draggablesId);\r\n        draggable.setAttribute('data-seal-type', sealType);\r\n        draggable.style.left = left + 'px';\r\n        draggable.style.top = top + 'px';\r\n        draggable.style.zIndex = ++initMove.dragParentzIndex;\r\n\r\n        cubeOuter = '';\r\n        for (var r = 0; r < detachCubes; r++) {\r\n          cubeOuter += `\r\n          <div class=\"cube-outer drag-area\" data-index=\"${r}\" data-seal-type=\"${sealType}\">\r\n            <div class=\"cube\"><img src=\"${src}\" style=\"width: ${width}px; height: ${height}px;\"></div>\r\n          </div>        \r\n        `;\r\n        }\r\n        cubeOuter += `\r\n          <div class=\"dot dot-top\"></div>\r\n          <div class=\"dot dot-bottom\"></div>\r\n          <div class=\"dot dot-left\"></div>\r\n          <div class=\"dot dot-right\"></div>     \r\n        `;\r\n\r\n        draggable.innerHTML = cubeOuter;\r\n        cvOuter.appendChild(draggable);\r\n\r\n        initMove.init(draggable, 'add');\r\n        draggable.addEventListener('dblclick', detach, false);\r\n      } else {\r\n        console.warn(\"Can't remove from here!\");\r\n      }\r\n    } else if (detachType == 'horizontal') { // horizontal detach\r\n      var target = e.target;\r\n\r\n      var index = parseInt(target.dataset.index);\r\n      var totalCubes = dragParent.querySelectorAll('.drag-area').length;\r\n      var detachCubes = totalCubes - index;\r\n\r\n      var sealType = dragParent.querySelector('[data-seal-type]').dataset.sealType;\r\n      var src = dragParent.querySelector('img').src;\r\n      var width = dragParent.querySelector('img').width;\r\n      var height = dragParent.querySelector('img').height;\r\n\r\n      dragParentLeft = dragParent.style.left;\r\n      dragParentTop = dragParent.style.top;\r\n\r\n      // console.log('target: ', target);\r\n      // console.log('index: ', index); // 1\r\n      // console.log('detachCubes: ', detachCubes); // 2\r\n      // console.log('totalCubes: ', totalCubes); // 3\r\n\r\n      if (index) {\r\n        // left\r\n        if (index == 1) {\r\n          cubeOuter = `<div class=\"cube-outer\">`;\r\n          for (var r = 0; r < row; r++) {\r\n            cubeOuter += `<div class=\"cube drag-area\" data-index=\"${r}\" data-seal-type=\"${sealType}\"><img src=\"${src}\" style=\"width: ${width}px; height: ${height}px;\"></div>\r\n          `;\r\n          }\r\n          cubeOuter += `\r\n            </div> \r\n            <div class=\"dot dot-top\"></div>\r\n            <div class=\"dot dot-bottom\"></div>\r\n            <div class=\"dot dot-left\"></div>\r\n            <div class=\"dot dot-right\"></div>     \r\n          `;\r\n\r\n          initMove.dragParent.innerHTML = cubeOuter;\r\n          dragParent = initMove.dragParent;\r\n          initMove.init(dragParent, 'add');\r\n          dragParent.classList.remove('horizontal');\r\n        } else {\r\n          for (var r = index; r < totalCubes; r++) {\r\n            dragParent.querySelector('[data-index=\"' + r + '\"]').remove();\r\n          }\r\n        }\r\n\r\n        var left = parseFloat(dragParentLeft) + dragParent.getBoundingClientRect().width + 30;\r\n        var top = parseFloat(dragParentTop);\r\n\r\n        // right\r\n        var draggable = document.createElement('div');\r\n        draggable.classList.add('draggable-cubes');\r\n        draggable.classList.add('draggable');\r\n        draggable.setAttribute('data-seal-type', sealType);\r\n        draggable.setAttribute('data-id', ++initDrag.draggablesId);\r\n        draggable.style.left = left + 'px';\r\n        draggable.style.top = top + 'px';\r\n        draggable.style.zIndex = ++initMove.dragParentzIndex;\r\n\r\n        if (detachCubes == 1) { // detach partion is only 1\r\n          cubeOuter = `<div class=\"cube-outer\">`;\r\n          for (var r = 0; r < row; r++) {\r\n            cubeOuter += `<div class=\"cube drag-area\" data-index=\"${r}\" data-seal-type=\"${sealType}\"><img src=\"${src}\" style=\"width: ${width}px; height: ${height}px;\"></div>\r\n          `;\r\n          }\r\n          cubeOuter += `\r\n            </div> \r\n            <div class=\"dot dot-top\"></div>\r\n            <div class=\"dot dot-bottom\"></div>\r\n            <div class=\"dot dot-left\"></div>\r\n            <div class=\"dot dot-right\"></div>     \r\n          `;\r\n\r\n        } else { // detach partion - more than 1\r\n          cubeOuter = '';\r\n          for (var c = 0; c < detachCubes; c++) {\r\n            cubeOuter += `<div class=\"cube-outer drag-area\" data-index=\"${c}\" data-seal-type=\"${sealType}\">`;\r\n            for (var r = 0; r < row; r++) {\r\n              cubeOuter += `<div class=\"cube\"><img src=\"${src}\" style=\"width: ${width}px; height: ${height}px;\"></div>`;\r\n            }\r\n            cubeOuter += `</div>`;\r\n          }\r\n          cubeOuter += `\r\n            <div class=\"dot dot-top\"></div>\r\n            <div class=\"dot dot-bottom\"></div>\r\n            <div class=\"dot dot-left\"></div>\r\n            <div class=\"dot dot-right\"></div>     \r\n          `;\r\n          draggable.classList.add('horizontal');\r\n        }\r\n\r\n        initMove.dropParent = draggable;\r\n        // dropParent = initMove.dropParent;\r\n\r\n        draggable.classList.add('vertical');\r\n        draggable.innerHTML = cubeOuter;\r\n        cvOuter.appendChild(draggable);\r\n\r\n        initMove.init(draggable, 'add');\r\n        draggable.addEventListener('dblclick', detach, false);\r\n      } else {\r\n        console.warn(\"Can't remove from here!\");\r\n      }\r\n    }\r\n  }\r\n  var detachUI = function (e) {\r\n    // console.log('detachUI');\r\n\r\n    var dragParentLeft = dragParent.style.left;\r\n    var dragParentTop = dragParent.style.top;\r\n    var left = parseFloat(dragParentLeft);\r\n    var top = parseFloat(dragParentTop);\r\n    // var top = parseFloat(dragParentTop) + dragParent.getBoundingClientRect().height;\r\n    var cubeHeight = dragParent.querySelector('.drag-area').getBoundingClientRect().height;\r\n    var cubeWidth = dragParent.querySelector('.drag-area').getBoundingClientRect().width;\r\n    var cubeOuter;\r\n    //  console.lo\r\n    var sealType = dragParent.dataset.sealType;\r\n    var src = dragParent.querySelector('img').src;\r\n    var width = dragParent.querySelector('img').width;\r\n    var height = dragParent.querySelector('img').height;\r\n\r\n    if (e.target.classList.contains('detach-btn')) { // detach all cubes\r\n      // console.log('detaching All');\r\n\r\n      if (detachType == 'vertical') { // vertical detaching all\r\n        // console.log('vertical detaching all')\r\n\r\n        var cubesToDetach = dragParent.querySelectorAll('.drag-area').length;\r\n        // dragParent.querySelector('.detach-btn').remove();\r\n\r\n        // top one\r\n        if (cubesToDetach == row) { // if vertical group is complete\r\n          dragParent.querySelector('.cube-outer').remove();\r\n          dragParent.classList.remove('detach')\r\n          dragParent.classList.remove('vertical')\r\n\r\n          cubeOuter = `\r\n            <div class=\"cube-outer drag-area\" data-index=\"0\" data-seal-type=\"${sealType}\">\r\n            <div class=\"cube\"><img src=\"${src}\" style=\"width: ${width}px; height: ${height}px;\"></div>  \r\n          `;\r\n\r\n          dragParent.innerHTML += cubeOuter;\r\n          initMove.init(dragParent, 'add');\r\n          dragParent.addEventListener('dblclick', remove, false);\r\n        } else { // if vertical group is not complete\r\n          for (var i = 1; i < cubesToDetach; i++) {\r\n            dragParent.querySelector('[data-index=\"' + i + '\"]').remove();\r\n            dragParent.classList.remove('detach')\r\n            dragParent.classList.remove('vertical')\r\n          }\r\n        }\r\n\r\n        // bottom cubes\r\n        for (var i = 1; i < cubesToDetach; i++) {\r\n          var draggable = document.createElement('div');\r\n          draggable.classList.add('draggable-cubes');\r\n          draggable.classList.add('draggable');\r\n          draggable.setAttribute('data-id', ++initDrag.draggablesId);\r\n          draggable.setAttribute('data-seal-type', sealType);\r\n          draggable.style.left = left + 'px';\r\n          draggable.style.top = parseFloat(dragParentTop) + cubeHeight * i + 30 * i + 'px';\r\n          draggable.style.zIndex = ++initMove.dragParentzIndex;\r\n          if (sealType == 'numbers') {\r\n            draggable.setAttribute('data-number-design', dragParent.dataset.numberDesign);\r\n            draggable.setAttribute('data-number-value', dragParent.dataset.numberValue);\r\n          }\r\n\r\n          cubeOuter = `\r\n            <div class=\"cube-outer drag-area\" data-index=\"0\" data-seal-type=\"${sealType}\">\r\n            <div class=\"cube\"><img src=\"${src}\" style=\"width: ${width}px; height: ${height}px;\"></div>\r\n            </div>        \r\n            <div class=\"dot dot-top\"></div>\r\n            <div class=\"dot dot-bottom\"></div>\r\n            <div class=\"dot dot-left\"></div>\r\n            <div class=\"dot dot-right\"></div>     \r\n            <div class=\"detach-btn\"></div>     \r\n          `;\r\n\r\n          draggable.innerHTML = cubeOuter;\r\n          cvOuter.appendChild(draggable);\r\n\r\n          initMove.init(draggable, 'add');\r\n          draggable.addEventListener('dblclick', remove, false);\r\n          draggable.addEventListener('click', detachUI, false);\r\n        }\r\n\r\n      } else { // horizontal detaching all\r\n        // console.log('horizontal detaching all')\r\n\r\n        var cubesToDetach = dragParent.querySelectorAll('.drag-area').length;\r\n        // dragParent.querySelector('.detach-btn').remove();\r\n\r\n        // left one\r\n        for(var c = 0; c < cubesToDetach; c++) {\r\n          dragParent.querySelector('[data-index=\"' + c + '\"]').remove();\r\n        }\r\n        dragParent.classList.remove('detach')\r\n        dragParent.classList.add('vertical')\r\n        dragParent.classList.remove('complete')\r\n        dragParent.classList.remove('horizontal')\r\n\r\n        cubeOuter = `<div class=\"cube-outer\">`;\r\n\r\n        for (var r = 0; r < row; r++) {\r\n          cubeOuter += `<div class=\"cube drag-area\" data-index=\"${r}\" data-seal-type=\"${sealType}\"><img src=\"${src}\" style=\"width: ${width}px; height: ${height}px;\"></div>`;\r\n        }\r\n        cubeOuter += `</div>`;\r\n\r\n        dragParent.innerHTML += cubeOuter;\r\n        initMove.init(dragParent, 'add');\r\n        dragParent.addEventListener('dblclick', remove, false);\r\n\r\n        // right cubes\r\n        for (var i = 1; i < cubesToDetach; i++) {\r\n          var draggable = document.createElement('div');\r\n          draggable.classList.add('draggable-cubes');\r\n          draggable.classList.add('draggable');\r\n          draggable.setAttribute('data-id', ++initDrag.draggablesId);\r\n          draggable.setAttribute('data-seal-type', sealType);\r\n          // draggable.style.left = left + 'px';\r\n          // draggable.style.top = parseFloat(dragParentTop) + cubeHeight * i + 30 * i + 'px';\r\n          draggable.style.left = parseFloat(dragParentLeft) + cubeWidth * i + 30 * i + 'px';\r\n          draggable.style.top = top + 'px';\r\n          draggable.style.zIndex = ++initMove.dragParentzIndex;\r\n          \r\n          cubeOuter = `<div class=\"cube-outer\">`;\r\n          \r\n          for (var r = 0; r < row; r++) {\r\n            cubeOuter += `<div class=\"cube drag-area\" data-index=\"${r}\" data-seal-type=\"${sealType}\"><img src=\"${src}\" style=\"width: ${width}px; height: ${height}px;\"></div>`;\r\n          }\r\n          cubeOuter += `\r\n          </div>        \r\n          <div class=\"dot dot-top\"></div>\r\n          <div class=\"dot dot-bottom\"></div>\r\n          <div class=\"dot dot-left\"></div>\r\n          <div class=\"dot dot-right\"></div>     \r\n          <div class=\"detach-btn\"></div>     \r\n          `;\r\n          \r\n          draggable.innerHTML = cubeOuter;\r\n          cvOuter.appendChild(draggable);\r\n          draggable.classList.add('vertical');\r\n\r\n          initMove.init(draggable, 'add');\r\n          draggable.addEventListener('dblclick', remove, false);\r\n          draggable.addEventListener('click', detachUI, false);\r\n        }\r\n      }\r\n    } else { // toggle 'detach-btn'\r\n      if (dragParent.querySelectorAll('.drag-area').length > 1) {\r\n        if (!initMove.mousemove) { // update if mouse is not moving (update only on click)\r\n          if (dragParent.classList.contains('detach')) {\r\n            dragParent.classList.remove('detach');\r\n          } else {\r\n            dragParent.classList.add('detach');\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  var remove = function (e) {\r\n    // console.log('deleting');\r\n\r\n    // delete complete 'draggable' group\r\n    e.target.closest('.draggable').remove();\r\n  }\r\n\r\n  return {\r\n    isSnapping: isSnapping,\r\n    snapDist: snapDist,\r\n    shortestDist: shortestDist,\r\n    getCoords: getCoords,\r\n    getShortestDist: getShortestDist,\r\n    highlight: highlight,\r\n    snap, snap,\r\n    detachUI, detachUI,\r\n    remove, remove\r\n  }\r\n})();\r\n\r\n// rotate behaviour of tools/widgets/seals\r\nvar initRotate = (function () {\r\n  var mousedownRotate = mousemoveRotate = false;\r\n  var startAngle = null;\r\n  var rotation = null;\r\n  var rotateBtn = null;\r\n  var oldRotateBtn = null;\r\n  var resetRotation = false;\r\n  var rotatable = null;\r\n  var panel;\r\n  var oldPanel = null;\r\n  var panelType = null;\r\n  var currAngle = 0, angle, x, y;\r\n  var oldToolType = null;\r\n  var refPoint = {\r\n    x: 0,\r\n    y: 0\r\n  };\r\n  var R2D = 180 / Math.PI;\r\n\r\n  var start = function (e) {\r\n    // console.group('Rotate')\r\n    // console.log('start-rotate');\r\n\r\n    e.preventDefault();\r\n\r\n    mousedownRotate = true;\r\n\r\n    var height, left, top, width, refEl;\r\n    rotateBtn = e.target;\r\n    panel = rotateBtn.closest('.draggable');\r\n    panelType = panel.dataset.panel;\r\n    rotatable = rotateBtn.closest('.rotatable');\r\n\r\n    // reset 'startAngle' if panel is different each time\r\n    if (oldPanel != panel) {\r\n      startAngle = null;\r\n    }\r\n    oldPanel = panel;\r\n\r\n    // cvOuter.classList.add('rotating');\r\n\r\n    refEl = rotatable;\r\n\r\n    // check to enable arc drawing or not\r\n    // also which element to take as ref for rotation\r\n    if (panelType == \"compass\") {\r\n      if (rotateBtn.classList.contains('rotate-compass')) {\r\n        if (rotateBtn.classList.contains('rotate-compass-draw')) {\r\n          // calling draw function to make an arc\r\n          oldToolType = initTools.currToolType;\r\n          initTools.currToolType = 'arc';\r\n          cvOuter.classList.add('pe-none');\r\n        }\r\n        refEl = panel.querySelector('.rotate-compass-ref');\r\n      } else if (rotateBtn.classList.contains('rotate-hand')) {\r\n        refEl = panel.querySelector('.rotate-hand-ref');\r\n      }\r\n    }\r\n\r\n    refObj = refEl.getBoundingClientRect();\r\n\r\n    top = refObj.top,\r\n      left = refObj.left,\r\n      height = refObj.height,\r\n      width = refObj.width;\r\n\r\n    refPoint = {\r\n      x: left + (width / 2),\r\n      y: top + (height / 2)\r\n    };\r\n\r\n    x = e.clientX - refPoint.x;\r\n    y = e.clientY - refPoint.y;\r\n\r\n\r\n    if (panelType == 'compass') { // for compass\r\n      // update resetRotation variable\r\n      resetRotation = (oldRotateBtn == rotateBtn) ? false : true;\r\n      if (oldRotateBtn != rotateBtn) {\r\n        oldRotateBtn = rotateBtn;\r\n      }\r\n\r\n      if (rotateBtn.classList.contains('rotate-hand')) { // rotate hand (2 types)\r\n        // if (rotateBtn.classList.contains('rotate-pencil')) { // rotate hand - pencil\r\n        //   if (panel.dataset.anglePencil == undefined) {\r\n        //     startAngle = Math.floor(R2D * Math.atan2(y, x));\r\n        //     if (startAngle < 0) { startAngle = 360 - Math.abs(startAngle); }\r\n        //     panel.setAttribute('data-angle-pencil', startAngle);\r\n        //   } else {\r\n        //     startAngle = panel.dataset.anglePencil;\r\n        //   }\r\n        // } else if (rotateBtn.classList.contains('rotate-point')) { // rotate hand - point\r\n        //   if (panel.dataset.anglePoint == undefined) {\r\n        //     startAngle = Math.floor(R2D * Math.atan2(y, x));\r\n        //     if (startAngle < 0) { startAngle = 360 - Math.abs(startAngle); }\r\n        //     panel.setAttribute('data-angle-point', startAngle);\r\n        //   } else {\r\n        //     startAngle = panel.dataset.anglePoint;\r\n        //   }\r\n        // }\r\n      } else if (rotateBtn.classList.contains('rotate-compass')) { // rotate compass (2 ways)\r\n        if (rotateBtn.classList.contains('rotate-compass-only')) { // rotate only \r\n          if (panel.dataset.angleCompassOnly == undefined || resetRotation) {\r\n            startAngle = Math.floor(R2D * Math.atan2(y, x));\r\n            if (startAngle < 0) { startAngle = 360 - Math.abs(startAngle); }\r\n            panel.setAttribute('data-angle-compass-only', startAngle);\r\n          } else {\r\n            startAngle = panel.dataset.angleCompassOnly;\r\n          }\r\n        } else if (rotateBtn.classList.contains('rotate-compass-draw')) { // rotate and draw\r\n          if (panel.dataset.angleCompassDraw == undefined || resetRotation) {\r\n            startAngle = Math.floor(R2D * Math.atan2(y, x));\r\n            if (startAngle < 0) { startAngle = 360 - Math.abs(startAngle); }\r\n            panel.setAttribute('data-angle-compass-draw', startAngle);\r\n          } else {\r\n            startAngle = panel.dataset.angleCompassDraw;\r\n          }\r\n        }\r\n      }\r\n\r\n      startAngle = parseFloat(startAngle);\r\n\r\n      // for adding previous rotation if current 'rotateBtn' is not same as previous 'rotateBtn'\r\n      // and if already some rotation is present\r\n      angle = panel.style.transform.substr(7);\r\n      angle = angle.substring(0, angle.length - 4);\r\n      angle = parseFloat(angle);\r\n\r\n      if (resetRotation && !isNaN(angle)) {\r\n        startAngle -= angle;\r\n        startAngle %= 360;\r\n        if (rotateBtn.classList.contains('rotate-compass-only')) {\r\n          panel.setAttribute('data-angle-compass-only', startAngle);\r\n        } else if (rotateBtn.classList.contains('rotate-compass-draw')) {\r\n          panel.setAttribute('data-angle-compass-draw', startAngle);\r\n        }\r\n      }\r\n    } else { // for other set widgets\r\n      if (panel.dataset.angle == undefined) {\r\n        startAngle = Math.floor(R2D * Math.atan2(y, x));\r\n        if (startAngle < 0) {\r\n          startAngle = 360 - Math.abs(startAngle);\r\n        }\r\n        panel.setAttribute('data-angle', startAngle);\r\n      } else {\r\n        startAngle = panel.dataset.angle;\r\n      }\r\n    }\r\n\r\n    cvOuter.addEventListener('mousemove', rotate, false);\r\n    cvOuter.addEventListener('mouseup', end, false);\r\n  };\r\n\r\n  var end = function (e) {\r\n    // console.log('end-rotate');\r\n    // console.groupEnd();\r\n\r\n    mousedownRotate = mousemoveRotate = false\r\n\r\n    cvOuter.classList.remove('pe-none');\r\n    // cvOuter.classList.remove('rotating');\r\n\r\n    initTools.currToolType = oldToolType;\r\n\r\n    cvOuter.removeEventListener('mousemove', rotate, false);\r\n    cvOuter.removeEventListener('mouseup', end, false);\r\n  };\r\n\r\n  var rotate = function (e) {\r\n\r\n    if (mousedownRotate && mousemoveRotate) {\r\n      // console.log('rotate');\r\n\r\n      e.preventDefault();\r\n\r\n      x = e.clientX - refPoint.x;\r\n      y = e.clientY - refPoint.y;\r\n      currAngle = Math.floor(R2D * Math.atan2(y, x));\r\n\r\n      if (currAngle < 0) {\r\n        currAngle = 360 - Math.abs(currAngle);\r\n      }\r\n      rotation = currAngle - startAngle;\r\n      if (rotation < 0) {\r\n        rotation = 360 + currAngle - Math.abs(startAngle);\r\n        // console.log(' ', currAngle, startAngle, rotation)\r\n      }\r\n\r\n      if (panelType == 'clock') {\r\n        rotatable.style.transform = \"translateY(-50%) rotate(\" + d + \"deg)\";\r\n      } else if (panelType == \"compass\") { // rotate compass itself or its hands\r\n        if (rotateBtn.classList.contains('rotate-hand')) {\r\n          if (!isNaN(angle)) { currAngle = currAngle - angle; }\r\n          if (rotateBtn.classList.contains('rotate-pencil')) { // rotate hand - pencil\r\n            if (currAngle > 130) currAngle = 130; else\r\n              if (currAngle < 95) currAngle = 95;\r\n          } else if(rotateBtn.classList.contains('rotate-point')) { // rotate hand - point\r\n            // if(currAngle > 85) currAngle = 85; else\r\n            // if(currAngle < 50) currAngle = 50;\r\n          }\r\n          if(panel.classList.contains('flipped')) { // if compass is flipped\r\n            if(currAngle <= 180) {\r\n              currAngle = 180 - currAngle;\r\n            } else {\r\n              currAngle = 180 + (360 - currAngle);\r\n            }\r\n          }\r\n          rotatable.style.transform = \"translateY(-50%) rotate(\" + currAngle + \"deg)\";\r\n        } else { // rotate compass set\r\n          rotatable.style.transform = \"rotate(\" + rotation + \"deg)\";\r\n        }\r\n      } else { // rotate other set types\r\n        rotatable.style.transform = \"rotate(\" + rotation + \"deg)\";\r\n      }\r\n    } \r\n    mousemoveRotate = true;\r\n  };\r\n\r\n  return {\r\n    start: start\r\n  }\r\n})();\r\n\r\n// scale sets logics\r\nvar initScale = (function (e) {\r\n  // console.log('scaling');\r\n\r\n  var startPoint, currPoint;\r\n  var panel = document.querySelector('[data-panel=\"protractor\"]');\r\n  var w = null;\r\n  var h = null;\r\n  var d = null;\r\n  var ratio = null;\r\n\r\n  var start = function (e) {\r\n    // console.log('start');\r\n\r\n    w = panel.getBoundingClientRect().width;\r\n    h = panel.getBoundingClientRect().height;\r\n    ratio = w / h;\r\n    startPoint = math.getMousePosition(e, cv);\r\n    // console.log('startPoint: ', startPoint.x)\r\n\r\n    cvOuter.addEventListener('mousemove', scale, false);\r\n    cvOuter.addEventListener('mouseup', end, false);\r\n  }\r\n  var scale = function (e) {\r\n    // console.log('scale');\r\n    e.preventDefault();\r\n\r\n    currPoint = math.getMousePosition(e, cv);\r\n    d = currPoint.x - startPoint.x;\r\n    // console.log(startPoint.x, currPoint.x, d)\r\n\r\n    console.log(w, d, ratio, w + d, w * ratio)\r\n    if (ratio > 1) { // width is more\r\n      panel.style.width = w + d + 'px';\r\n      panel.style.height = h + (d * ratio) + 'px';\r\n    } else { // height is more\r\n\r\n    }\r\n  }\r\n  var end = function (e) {\r\n    // console.log('end');\r\n\r\n    cvOuter.removeEventListener('mousemove', scale, false);\r\n    cvOuter.removeEventListener('mouseup', end, false);\r\n  }\r\n\r\n  return {\r\n    start: start\r\n  }\r\n})()\r\n\r\n// calculator logic\r\nvar initCalc = (function (e) {\r\n\r\n  var num = \"\";\r\n  var calculate = function (e) {\r\n    // console.log('calculating');\r\n\r\n    var result = document.querySelector('[data-panel=\"calculator\"] #result');\r\n    var buttonType = e.target.closest('g[data-button-type]').dataset.buttonType;\r\n    var buttonValue = e.target.closest('g[data-button-type]').dataset.buttonValue;\r\n\r\n    if (buttonType == \"num\") {\r\n      num += buttonValue;\r\n      result.innerHTML = num;\r\n    } else if (buttonType == \"func\") {\r\n      switch (buttonValue) {\r\n        case \"=\":\r\n          num = eval(num).toString();\r\n          break;\r\n        case \"<-\":\r\n          num = num.slice(0, -1);\r\n          break;\r\n        case \"c\":\r\n        case \"ac\":\r\n          num = \"\";\r\n          break;\r\n        case \"*\":\r\n        case \"/\":\r\n        case \"+\":\r\n        case \"-\":\r\n          num += \" \" + buttonValue + \" \";\r\n          break;\r\n      }\r\n      result.innerHTML = num;\r\n    }\r\n  }\r\n\r\n  return {\r\n    calculate: calculate\r\n  }\r\n})();\r\n\r\n// abacus logic\r\nvar initAbacus = (function () {\r\n  var panel = document.querySelector('[data-panel=\"abacus\"]');\r\n\r\n  var changePos = function() {\r\n    // console.log('changing position');\r\n\r\n    var layer = this.dataset.layer;\r\n    var state = this.dataset.state;\r\n    \r\n    if(layer == 'up') { // up layer\r\n      if(state == 'down') {\r\n        this.setAttribute('transform', 'translate(0, -20)');\r\n        this.dataset.state = 'up';\r\n      } else {\r\n        this.setAttribute('transform', 'translate(0, 0)');\r\n        this.dataset.state = 'down';\r\n      }\r\n    } else { // down layer\r\n      var beads = this.parentNode.querySelectorAll('.bead'); \r\n      var count = this.dataset.pos;\r\n      if (state == 'down') {\r\n        for (var i = 0; i <= count; i++) {\r\n          beads[i].setAttribute('transform', 'translate(0,-43)');\r\n          beads[i].dataset.state = 'up';\r\n        }\r\n      } else {\r\n        var totalBeads = beads.length;\r\n        for (var i = count; i < totalBeads; i++) {\r\n          beads[i].setAttribute('transform', 'translate(0, 0)');\r\n          beads[i].dataset.state = 'down';\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  var resetStart = function(e) {\r\n    // console.log('resetStart');\r\n    \r\n    panel.addEventListener('mousemove', reset, false);\r\n    cvOuter.addEventListener('mouseup', resetEnd, false);\r\n    cvOuter.addEventListener('mouseleave', resetEnd, false);\r\n  }\r\n  var reset = function(e) {\r\n    // console.log('reset');\r\n    var t = e.target.closest('.bead');\r\n    \r\n    if (t) {\r\n      var layer = t.dataset.layer;\r\n      if(layer == \"up\") {\r\n        t.setAttribute('transform', 'translate(0, 0)');\r\n        t.dataset.state = 'down';\r\n      } else {\r\n        var beads = t.parentNode.querySelectorAll('.bead');\r\n        var totalBeads = beads.length;\r\n        var count = t.dataset.pos;\r\n        for (var i = 0; i < totalBeads; i++) {\r\n          beads[i].setAttribute('transform', 'translate(0, 0)');\r\n          beads[i].dataset.state = 'down';\r\n        }\r\n      }\r\n    }\r\n  }\r\n  var resetEnd = function(e) {\r\n    // console.log('resetEnd');\r\n\r\n    panel.removeEventListener('mousemove', reset, false);\r\n    cvOuter.removeEventListener('mouseup', resetEnd, false);\r\n    cvOuter.removeEventListener('mouseleave', resetEnd, false);\r\n  }\r\n  \r\n  return {\r\n    changePos: changePos,\r\n    resetStart: resetStart\r\n  }\r\n})();\r\n\r\n// math functions - mostly trigonometry\r\nvar math = (function (e) {\r\n  var toolDrawingOffset = 50;\r\n  var slope = 0;\r\n  var inRange = false;\r\n\r\n  var parseToFloat = function (number, decimal) {\r\n    return parseFloat(number.toFixed(decimal));\r\n  }\r\n\r\n  // returns 'left' and 'right' position of given element\r\n  var getElPosition = function (el) {\r\n    var pos = {\r\n      left: el.getBoundingClientRect().left,\r\n      right: el.getBoundingClientRect().top\r\n    };\r\n    return pos;\r\n  }\r\n\r\n  // returns the mouse position w.r.t given element\r\n  var getMousePosition = function (e, el) {\r\n    var pos = getElPosition(el);\r\n    var point = {\r\n      x: 0,\r\n      y: 0\r\n    };\r\n    point.x = parseFloat((((e.type == 'touchstart' || e.type == 'touchmove') ? e.touches[0].clientX : e.clientX) - pos.left).toFixed(2));\r\n    point.y = parseFloat((((e.type == 'touchstart' || e.type == 'touchmove') ? e.touches[0].clientY : e.clientY) - pos.right).toFixed(2));\r\n    return point;\r\n  }\r\n\r\n  // not useing for now\r\n  var getLineEquation = function () {\r\n    // var m = slope;\r\n    // // y - y1 = m (x - x1) || mx - y + y1 - mx1 = 0\r\n    // // return `y-${lines.l12.p1.y} = ${m} (x-${lines.l12.p1.x})`;\r\n    // // y - mx = y1 - m*x1\r\n    // return `y - ${m}x = ${lines.l12.p1.y - (m * lines.l12.p1.x)}`;\r\n  }\r\n\r\n  // get points coordinates with in the set\r\n  var getSetPoints = function (currSetType) {\r\n    var pointsObj = {};\r\n    var set = document.querySelector('[data-panel=\"' + currSetType + '\"]');\r\n    var pointsEl = set.querySelectorAll('.point');\r\n    var canvasPosition = getElPosition(cv);\r\n    for (let i = 0; i < pointsEl.length; i++) {\r\n      var pointObj = {\r\n        x: '',\r\n        y: ''\r\n      };\r\n      var cvLeft = canvasPosition.left;\r\n      var cvTop = canvasPosition.right;\r\n      var pointLeft = pointsEl[i].getBoundingClientRect().left;\r\n      var pointTop = pointsEl[i].getBoundingClientRect().top;\r\n      var pointWidth = pointsEl[i].getBoundingClientRect().width;\r\n      var pointHeight = pointsEl[i].getBoundingClientRect().height;\r\n\r\n      pointObj['x'] = parseFloat((pointLeft + (pointWidth / 2) - cvLeft).toFixed(2));\r\n      pointObj['y'] = parseFloat((pointTop + (pointHeight / 2) - cvTop).toFixed(2));\r\n      pointsObj[i + 1] = pointObj;\r\n    }\r\n    return pointsObj;\r\n  }\r\n\r\n  var getLines = function (e) {\r\n    var lines = {};\r\n    var pointsObj = math.getSetPoints(initTools.currSetType);\r\n\r\n    var pointsLength = Object.size(pointsObj);\r\n\r\n    for (let i = 1; i <= pointsLength; i++) {\r\n      var j = (i == pointsLength) ? 1 : i + 1;\r\n      var line = {\r\n        'p1': pointsObj[i],\r\n        'p2': pointsObj[j]\r\n      };\r\n      lines['l' + i + j] = line;\r\n    }\r\n    return lines;\r\n  }\r\n\r\n  var getSlope = function (line) {\r\n    // m = (y2 - y1) / (x2 - x1)\r\n    var m = (line.p2.y - line.p1.y) / (line.p2.x - line.p1.x);\r\n    return math.parseToFloat(m, 2);\r\n  }\r\n\r\n  var calculatePerpendicularDistFromLine = function (line, point, m) {\r\n    if (m == Infinity || m == -Infinity) return Math.abs(line.p1.x - point.x);\r\n    return Math.abs((m * point.x - point.y + line.p1.y - m * line.p1.x) / (Math.sqrt(1 + m * m)));\r\n  }\r\n\r\n  var getCoords = function (pointsObj, side, point, m) {\r\n    // console.log('getCoord');\r\n\r\n    // y = m (x - x1) + y1\r\n    // y = m (x - x2) + y2\r\n    // console.log('Eq1: ', `y = ${m}(x - ${startPoint.x}) + ${startPoint.y}`)\r\n    // console.log('Eq2: ', `y = ${-1/m}(x - ${currPoint.x}) + ${currPoint.y}`)    \r\n\r\n    // x coordinate of intersection of two lines\r\n    // var x = (m * (y2 - y1) + m * m * x1 - x2) / ((m * m) + m)\r\n\r\n    var x, y, _x;\r\n    var s = initDraw.strokeWidth / 2;\r\n\r\n    if (m == 0) {\r\n      if (side == 1) {\r\n        s = (pointsObj[1].x < pointsObj[3].x) ? -s : s;\r\n      } else {\r\n        s = (pointsObj[1].x < pointsObj[3].x) ? s : -s;\r\n      }\r\n      x = point.x;\r\n      y = pointsObj[side].y + s;\r\n    } else if (m == Infinity || m == -Infinity) {\r\n      if (side == 1) {\r\n        s = (pointsObj[1].x < pointsObj[3].x) ? -s : s;\r\n      } else {\r\n        s = (pointsObj[1].x < pointsObj[3].x) ? s : -s;\r\n      }\r\n      x = pointsObj[side].x + s;\r\n      y = point.y;\r\n    } else {\r\n      // points coords on scale\r\n      x1 = ((point.x / m) + (m * pointsObj[side].x) + point.y - pointsObj[side].y) / (m + (1 / m));\r\n      y1 = m * (x1 - pointsObj[side].x) + pointsObj[side].y;\r\n\r\n      // points coords modified as per stroke width\r\n      m = -1 / m;\r\n      if (pointsObj[1].x > pointsObj[4].x) {\r\n        if (side == 1) {\r\n          x = x1 + Math.sqrt((s * s) / (1 + m * m));\r\n        } else if (side == 3) {\r\n          x = x1 - Math.sqrt((s * s) / (1 + m * m));\r\n        }\r\n        y = m * (x - x1) + y1\r\n      } else {\r\n        if (side == 1) {\r\n          x = x1 - Math.sqrt((s * s) / (1 + m * m));\r\n        } else if (side == 3) {\r\n          x = x1 + Math.sqrt((s * s) / (1 + m * m));\r\n        }\r\n        y = m * (x - x1) + y1\r\n      }\r\n    }\r\n    // console.log(`side: ${side} m: ${m}`)\r\n\r\n    return {\r\n      x: x,\r\n      y: y\r\n    }\r\n  }\r\n\r\n  var sideAndRange = function (currPoint) {\r\n    var lines = getLines();\r\n\r\n    // to check if point is between parallel lines\r\n    // d = (x−x1)(y2−y1)−(y−y1)(x2−x1)\r\n    var check12 = (currPoint.x - (lines.l12.p1.x)) * (lines.l12.p2.y - lines.l12.p1.y) - (currPoint.y - lines.l12.p1.y) * (lines.l12.p2.x - lines.l12.p1.x);\r\n    var check34 = (currPoint.x - (lines.l34.p1.x)) * (lines.l34.p2.y - lines.l34.p1.y) - (currPoint.y - lines.l34.p1.y) * (lines.l34.p2.x - lines.l34.p1.x);\r\n\r\n    var check23 = (currPoint.x - (lines.l23.p1.x)) * (lines.l23.p2.y - lines.l23.p1.y) - (currPoint.y - lines.l23.p1.y) * (lines.l23.p2.x - lines.l23.p1.x);\r\n    var check41 = (currPoint.x - (lines.l41.p1.x)) * (lines.l41.p2.y - lines.l41.p1.y) - (currPoint.y - lines.l41.p1.y) * (lines.l41.p2.x - lines.l41.p1.x);\r\n\r\n    var isInBtwParallelLines = ((check12 < 0 && check34 < 0) || (check12 > 0 && check34 > 0) || (check23 < 0 && check41 < 0) || (check23 > 0 && check41 > 0)) ? true : false;\r\n\r\n    var line;\r\n    var perpendicularDist;\r\n    var side = '';\r\n    // to check if point lies between parallel lines\r\n    if (isInBtwParallelLines) {\r\n      line = ((check12 < 0 && check34 < 0) || (check12 > 0 && check34 > 0)) ? '12_34' : '23_41';\r\n      // checking nearest line\r\n      if (line == '12_34') {\r\n        slope = getSlope(lines.l23);\r\n        var d23 = calculatePerpendicularDistFromLine(lines.l23, currPoint, slope);\r\n        var d41 = calculatePerpendicularDistFromLine(lines.l41, currPoint, slope);\r\n        if (d23 < d41) {\r\n          perpendicularDist = d23;\r\n          nearestLine = lines.l23\r\n          side = 2;\r\n          startPoint = currPoint;\r\n        } else {\r\n          perpendicularDist = d41;\r\n          nearestLine = lines.l41;\r\n          side = 4;\r\n        }\r\n      } else {\r\n        slope = getSlope(lines.l12);\r\n        var d12 = calculatePerpendicularDistFromLine(lines.l12, currPoint, slope);\r\n        var d34 = calculatePerpendicularDistFromLine(lines.l34, currPoint, slope);\r\n        if (d12 < d34) {\r\n          perpendicularDist = d12;\r\n          nearestLine = lines.l12;\r\n          side = 1;\r\n        } else {\r\n          perpendicularDist = d34;\r\n          nearestLine = lines.l34\r\n          side = 3;\r\n        }\r\n      }\r\n      if (toolDrawingOffset >= perpendicularDist) {\r\n        if (side == 1 || side == 3) {\r\n          inRange = true;\r\n        } else {\r\n          inRange = false;\r\n        }\r\n      } else {\r\n        // make it false if not drawing\r\n        // if (!isDrawingModeOn) \r\n        inRange = false;\r\n      }\r\n    } else {\r\n      // if (!isDrawingModeOn) \r\n      inRange = false;\r\n    }\r\n\r\n    // just for debugging\r\n    // console.log(perpendicularDist, toolDrawingOffset)\r\n    // console.log('inRange, side, slope: ', inRange, side, math.slope);\r\n\r\n    return {\r\n      inRange: inRange,\r\n      side: side,\r\n      slope, slope\r\n    }\r\n  }\r\n\r\n  return {\r\n    parseToFloat: parseToFloat,\r\n    getMousePosition: getMousePosition,\r\n    sideAndRange: sideAndRange,\r\n    getSetPoints: getSetPoints,\r\n    getCoords: getCoords\r\n  }\r\n})();\r\n\r\n// document.querySelector('[data-tool-type1=\"pen\"]').click();"],"file":"script.min.js"}